import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c as r,a as t,b as l,d as n,e as s}from"./app-BC0_DOXp.js";const i={},_=t("h1",{id:"与-entityframework-比较",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#与-entityframework-比较","aria-hidden":"true"},"#"),l(" 与 EntityFramework 比较")],-1),c=t("p",null,"为什么要写这篇文章？",-1),h=t("p",null,"2020 年 写下这篇完整一点的 .NET ORM 比较，为准备使用 FreeSql 的朋友解惑。",-1),a=t("h2",{id:"基础信息比较",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#基础信息比较","aria-hidden":"true"},"#"),l(" 基础信息比较")],-1),E=t("thead",null,[t("tr",null,[t("th",null,"功能项"),t("th",null,"FreeSql"),t("th",null,"EFCore")])],-1),T=t("tr",null,[t("td",null,"出生时间"),t("td",null,"2018 年 12 月"),t("td",null,"2015 年(约)")],-1),N=t("tr",null,[t("td",null,"开源协议"),t("td",null,"MIT"),t("td",null,"Apache-2.0")],-1),O=t("td",null,"所属机构",-1),M={href:"https://github.com/dotnetcore",target:"_blank",rel:"noopener noreferrer"},R=t("td",null,"dotnet",-1),p=t("tr",null,[t("td",null,"单元测试数量"),t("td",null,"5500+"),t("td",null,"很多")],-1),m=t("tr",null,[t("td",null,"github star"),t("td",null,"2.1k+"),t("td",null,"9.5k+")],-1),f=t("tr",null,[t("td",null,"github issues"),t("td",null,"活跃"),t("td",null,"活跃")],-1),g=t("tr",null,[t("td",null,"支持平台"),t("td",null,".NET4.0+、.NETCore"),t("td",null,".NETCore")],-1),S=t("tr",null,[t("td",null,"支持数据库"),t("td",null,"很多，并且行为一致"),t("td",null,"很多")],-1),C=t("tr",null,[t("td",null,"生命周期"),t("td",null,"Singleton"),t("td",null,"Scoped")],-1),F=t("tr",null,[t("td",null,"使用方式"),t("td",null,"IFreeSql、Repository"),t("td",null,"DbContext")],-1),b=s('<p>FreeSql .NET ORM 支持 MySql/SqlServer/PostgreSQL/Oracle/Sqlite/Firebird/达梦/人大金仓/神舟通用/南大通用/虚谷/翰高/Access/ClickHouse/QuestDB，以及自定义适配。</p><p>.NET ORM 各有自已看家本领，本文主要按 FreeSql 提供的功能进行列举比较，如有冒犯请见谅，也欢迎向 FreeSql 提出功能建议。</p><p>每个功能实现的深度层次不一样（比如 EFCore 支持 SqlServer 2012，FreeSql 支持 SqlServer 2005），很难彻底比较，提示：</p><ul><li>本文比较的功能 FreeSql 每种数据库基本都有提供，不像 EFCore 偏向 SqlServer</li><li>本文只比较官方提供的功能（不包含第三方扩展）</li></ul><figure><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063104631-2088330287.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063148941-1489586974.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="net-orm-整体功能比较" tabindex="-1"><a class="header-anchor" href="#net-orm-整体功能比较" aria-hidden="true">#</a> .NET ORM 整体功能比较</h2><table><thead><tr><th>功能项</th><th>FreeSql</th><th>EFCore</th></tr></thead><tbody><tr><td>.NET ORM CodeFirst 根据实体类型，创建表结构</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM CodeFirst 根据实体类型，对比表结构</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM CodeFirst 根据实体类型注释，迁移表结构备注</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM CodeFirst FluentApi</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM CodeFirst FluentApi 语法兼容 EFCore</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM CodeFirst 实体特性兼容 EFCore</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM CodeFirst 自定义实体特性(Aop)</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM CodeFirst 类型转换映射(MapType)</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM DbFirst 根据数据库，生成实体类</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 导航属性(OneToOne)</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 导航属性(ManyToOne)</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 导航属性(OneToMany)</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 导航属性(ManyToMany)</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 导航属性(Parent) <a href="select-as-tree">父子关系的实体类</a></td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 导航属性延时加载、贪婪加载、级联保存</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 自定义表达式树解析</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 全局过滤器</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 事务</td><td>✔</td><td>✔</td></tr><tr><td>.NET ORM 读写分离</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 分表分库</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 仓储 Repository</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 工作单元 UnitOfWork</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM 工作单元管理器 UnitOfWorkManager</td><td>✔</td><td>-</td></tr><tr><td>.NET ORM DbContext 状态管理</td><td>✔</td><td>✔</td></tr></tbody></table><h2 id="net-orm-crud-功能比较" tabindex="-1"><a class="header-anchor" href="#net-orm-crud-功能比较" aria-hidden="true">#</a> .NET ORM CRUD 功能比较</h2>',9),y=t("thead",null,[t("tr",null,[t("th",null,"功能项"),t("th",null,"FreeSql"),t("th",null,"EFCore")])],-1),q=t("tr",null,[t("td",null,".NET ORM CRUD 时，映射动态表名"),t("td",null,"✔"),t("td",null,"-")],-1),k=t("tr",null,[t("td",null,".NET ORM CRUD 时，使用参数化 SQL 执行"),t("td",null,"✔"),t("td",null,"✔")],-1),D=t("tr",null,[t("td",null,".NET ORM CRUD 时，不使用参数化 SQL 执行(NoneParameter)"),t("td",null,"✔"),t("td",null,"-")],-1),x=t("tr",null,[t("td",null,".NET ORM CRUD 时，获取对应的 SQL(ToSql)"),t("td",null,"✔"),t("td",null,"-")],-1),v=t("tr",null,[t("td",null,".NET ORM CRUD 时，统一审计实体属性值(Aop.AuditValue)"),t("td",null,"✔"),t("td",null,"-")],-1),U=t("tr",null,[t("td"),t("td"),t("td")],-1),w=t("tr",null,[t("td",null,".NET ORM 插入(单条)"),t("td",null,"✔"),t("td",null,"✔")],-1),I=t("tr",null,[t("td",null,".NET ORM 插入时，忽略/指定列"),t("td",null,"✔"),t("td",null,"-")],-1),W=t("tr",null,[t("td",null,".NET ORM 插入时，返回影响的行数"),t("td",null,"✔"),t("td",null,"-")],-1),A=t("tr",null,[t("td",null,".NET ORM 插入时，返回插入后的自增值"),t("td",null,"✔"),t("td",null,"✔")],-1),L=t("tr",null,[t("td",null,".NET ORM 插入时，返回插入后的记录"),t("td",null,"✔"),t("td",null,"-")],-1),B=t("tr",null,[t("td",null,".NET ORM 插入时，Insert Ignore Into"),t("td",null,"✔"),t("td",null,"-")],-1),Q=t("tr",null,[t("td",null,".NET ORM 插入时，On Duplicate Key Update"),t("td",null,"✔"),t("td",null,"-")],-1),V=t("tr",null,[t("td",null,".NET ORM 插入时，On Conflict Do Update"),t("td",null,"✔"),t("td",null,"-")],-1),P={href:"https://www.cnblogs.com/kellynic/p/10557882.html",target:"_blank",rel:"noopener noreferrer"},z=t("td",null,"✔",-1),H=t("td",null,"-",-1),G=t("tr",null,[t("td",null,[l(".NET ORM 批量插入时，自动分批 "),t("a",{href:"insert"},"参考文档")]),t("td",null,"✔"),t("td",null,"-")],-1),J=t("tr",null,[t("td",null,".NET ORM 批量插入时，使用 BulkCopy"),t("td",null,"✔"),t("td",null,"-")],-1),K=t("tr",null,[t("td"),t("td"),t("td")],-1),j=t("tr",null,[t("td",null,".NET ORM 更新(单条)"),t("td",null,"✔"),t("td",null,"✔")],-1),X=t("tr",null,[t("td",null,".NET ORM 更新时，动态条件(WhereDynamic)"),t("td",null,"✔"),t("td",null,"-")],-1),Y=t("tr",null,[t("td",null,".NET ORM 更新时，根据实体对象更新"),t("td",null,"✔"),t("td",null,"-")],-1),Z=t("tr",null,[t("td",null,".NET ORM 更新时，根据状态管理只更新有变化的属性"),t("td",null,"✔"),t("td",null,"✔")],-1),$=t("tr",null,[t("td",null,".NET ORM 更新时，忽略/指定列"),t("td",null,"✔"),t("td",null,"-")],-1),tt=t("tr",null,[t("td",null,".NET ORM 更新时，原子性 set num=num+1"),t("td",null,"✔"),t("td",null,"-")],-1),lt=t("tr",null,[t("td",null,".NET ORM 更新时，指定条件"),t("td",null,"✔"),t("td",null,"-")],-1),dt=t("tr",null,[t("td",null,".NET ORM 更新时，自动附加全局过滤器条件"),t("td",null,"✔"),t("td",null,"-")],-1),nt=t("tr",null,[t("td",null,".NET ORM 更新时，不需要先查询"),t("td",null,"✔"),t("td",null,"-")],-1),ut=t("tr",null,[t("td",null,".NET ORM 更新时，使用乐观行锁"),t("td",null,"✔"),t("td",null,"✔")],-1),et=t("tr",null,[t("td",null,".NET ORM 更新时，使用悲观锁"),t("td",null,"✔"),t("td",null,"-")],-1),ot=t("tr",null,[t("td",null,".NET ORM 更新时，返回影响的行数"),t("td",null,"✔"),t("td",null,"-")],-1),rt=t("tr",null,[t("td",null,".NET ORM 更新时，返回更新后的记录"),t("td",null,"✔"),t("td",null,"-")],-1),st=t("tr",null,[t("td",null,".NET ORM 批量更新"),t("td",null,"✔"),t("td",null,"-")],-1),it=t("tr",null,[t("td"),t("td"),t("td")],-1),_t=t("tr",null,[t("td",null,".NET ORM 删除(单条)"),t("td",null,"✔"),t("td",null,"✔")],-1),ct=t("tr",null,[t("td",null,".NET ORM 删除时，动态条件(WhereDynamic)"),t("td",null,"✔"),t("td",null,"-")],-1),ht=t("tr",null,[t("td",null,".NET ORM 删除时，指定条件"),t("td",null,"✔"),t("td",null,"-")],-1),at=t("tr",null,[t("td",null,".NET ORM 删除时，自动附加全局过滤器条件"),t("td",null,"✔"),t("td",null,"-")],-1),Et=t("tr",null,[t("td",null,".NET ORM 删除时，不需要先查询"),t("td",null,"✔"),t("td",null,"-")],-1),Tt=t("tr",null,[t("td",null,".NET ORM 删除时，返回影响的行数"),t("td",null,"✔"),t("td",null,"-")],-1),Nt=t("tr",null,[t("td",null,".NET ORM 删除时，返回插入后的记录"),t("td",null,"✔"),t("td",null,"-")],-1),Ot=t("tr",null,[t("td",null,".NET ORM 级联保存"),t("td",null,"✔"),t("td",null,"✔")],-1),Mt=t("tr",null,[t("td",null,".NET ORM 添加或更新"),t("td",null,"✔"),t("td",null,"-")],-1),Rt=t("tr",null,[t("td",null,[l(".NET ORM 添加或更新，自动适配 merge into "),t("a",{href:"insert-or-update"},"参考文档")]),t("td",null,"✔"),t("td",null,"-")],-1),pt=t("tr",null,[t("td",null,[l(".NET ORM 批量编辑保存 "),t("a",{href:"insert-or-update"},"参考文档")]),t("td",null,"✔"),t("td",null,"✔")],-1),mt=t("tr",null,[t("td"),t("td"),t("td")],-1),ft=t("tr",null,[t("td",null,".NET ORM 查询(单条)"),t("td",null,"✔"),t("td",null,"✔")],-1),gt=t("tr",null,[t("td",null,".NET ORM 查询时，分页"),t("td",null,"✔"),t("td",null,"✔")],-1),St=t("tr",null,[t("td",null,".NET ORM 查询时，分页支持 SqlServer2008"),t("td",null,"✔"),t("td",null,"-")],-1),Ct=t("tr",null,[t("td",null,".NET ORM 查询时，动态条件(WhereDynamic)"),t("td",null,"✔"),t("td",null,"-")],-1),Ft=t("tr",null,[t("td",null,[l(".NET ORM 查询时，动态过滤条件(WhereDynamicFilter) "),t("a",{href:"select"},"参考文档")]),t("td",null,"✔"),t("td",null,"-")],-1),bt=t("tr",null,[t("td",null,".NET ORM 查询时，自动附加全局过滤器条件"),t("td",null,"✔"),t("td",null,"-")],-1),yt=t("tr",null,[t("td",null,".NET ORM 查询时，多表条件传播(WhereCascade)"),t("td",null,"✔"),t("td",null,"-")],-1),qt=t("tr",null,[t("td",null,".NET ORM 查询时，在 lambda 中使用导航属性"),t("td",null,"✔"),t("td",null,"✔")],-1),kt=t("tr",null,[t("td",null,".NET ORM 查询时，用 Dto 映射只需要查询的字段"),t("td",null,"✔"),t("td",null,"-")],-1),Dt=t("tr",null,[t("td",null,".NET ORM 查询时，传 Sql 作二次查询(WithSql)"),t("td",null,"✔"),t("td",null,"-")],-1),xt=t("tr",null,[t("td",null,".NET ORM 查询时，子查询(Exists)"),t("td",null,"✔"),t("td",null,"-")],-1),vt=t("tr",null,[t("td",null,".NET ORM 查询时，子查询(In)"),t("td",null,"✔"),t("td",null,"-")],-1),Ut=t("tr",null,[t("td",null,[l(".NET ORM 查询时，子查询拼接结果(string.Join) "),t("a",{href:"select-multi-table"},"参考文档")]),t("td",null,"✔"),t("td",null,"-")],-1),wt=t("tr",null,[t("td",null,".NET ORM 查询时，使用分组聚合(GroupBy/Having)"),t("td",null,"✔"),t("td",null,"✔")],-1),It=t("tr",null,[t("td",null,".NET ORM 查询时，使用 Linq To Sql 语法"),t("td",null,"✔"),t("td",null,"✔")],-1),Wt=t("tr",null,[t("td",null,[l(".NET ORM 查询时，针对树形结构表 "),t("a",{href:"select-as-tree"},"父子关系的实体类")]),t("td",null,"✔"),t("td",null,"-")],-1);function At(Lt,Bt){const d=e("ExternalLinkIcon");return o(),r("div",null,[_,c,h,a,t("table",null,[E,t("tbody",null,[T,N,t("tr",null,[O,t("td",null,[t("a",M,[l("dotnetcore(NCC)"),n(d)])]),R]),p,m,f,g,S,C,F])]),b,t("table",null,[y,t("tbody",null,[q,k,D,x,v,U,w,I,W,A,L,B,Q,V,t("tr",null,[t("td",null,[l(".NET ORM 批量插入 "),t("a",P,[l("性能测试结果参考文档"),n(d)])]),z,H]),G,J,K,j,X,Y,Z,$,tt,lt,dt,nt,ut,et,ot,rt,st,it,_t,ct,ht,at,Et,Tt,Nt,Ot,Mt,Rt,pt,mt,ft,gt,St,Ct,Ft,bt,yt,qt,kt,Dt,xt,vt,Ut,wt,It,Wt])])])}const Pt=u(i,[["render",At],["__file","vs-entity-framework.html.vue"]]);export{Pt as default};
