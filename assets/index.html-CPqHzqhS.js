import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as k,c as m,a as r,e as l,w as e,b as n,d as s}from"./app-cjLg3FMY.js";const b={},S={href:"https://duckdb.net/docs/connection-string.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/dotnetcore/FreeSql/tree/master/Providers/FreeSql.Provider.Custom",target:"_blank",rel:"noopener noreferrer"};function g(y,t){const d=i("CodeTabs"),c=i("RouterLink"),p=i("ExternalLinkIcon");return k(),m("div",null,[t[48]||(t[48]=r('<h1 id="get-started" tabindex="-1"><a class="header-anchor" href="#get-started" aria-hidden="true">#</a> Get started</h1><p>FreeSql is a powerful Object-Relational Mapping (O/RM) component, supporting .NET Core 2.1+ and .NET Framework 4.0+.</p><p>QQ Groups: 561616019 (Online), 4336577 (Full), 8578575 (Full), 52508226 (Full)</p><p>For issue reporting, please visit https://github.com/dotnetcore/FreeSql/issues</p><h2 id="installation-packages" tabindex="-1"><a class="header-anchor" href="#installation-packages" aria-hidden="true">#</a> Installation Packages</h2><p>To access a specific database, install the corresponding <code>FreeSql.Provider.XX</code>. Alternatively, you can install <code>FreeSql.All</code> to include all providers.</p>',6)),l(d,{id:"18",data:[{id:".NET CLI"},{id:"Package Manager"}],active:0},{title0:e(({value:a,isActive:o})=>t[0]||(t[0]=[s(".NET CLI")])),title1:e(({value:a,isActive:o})=>t[1]||(t[1]=[s("Package Manager")])),tab0:e(({value:a,isActive:o})=>t[2]||(t[2]=[n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("dotnet "),n("span",{class:"token function"},"add"),s(` package FreeSql
dotnet `),n("span",{class:"token function"},"add"),s(` package FreeSql.Provider.Sqlite
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>t[3]||(t[3]=[n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`Install-Package FreeSql
Install-Package FreeSql.Provider.Sqlite
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),t[49]||(t[49]=r('<table><thead><tr><th>Provider</th><th>Description</th></tr></thead><tbody><tr><td>FreeSql.Provider.MySql</td><td>Based on MySql.Data (official from Oracle)</td></tr><tr><td>FreeSql.Provider.MySqlConnector</td><td>Based on MySqlConnector (open-source community, recommended++)<br><em>Supports MySQL, MariaDB, Percona, Amazon Aurora, Azure Database for MySQL, Google Cloud SQL for MySQL, OceanBase, Doris, Tidb, etc.</em></td></tr><tr><td>FreeSql.Provider.PostgreSQL</td><td>Based on PostgreSQL 9.5+</td></tr><tr><td>FreeSql.Provider.SqlServer</td><td>Based on SqlServer 2005+</td></tr><tr><td>FreeSql.Provider.SqlServerForSystem</td><td>Based on System.Data.SqlClient + SqlServer 2005+</td></tr><tr><td>FreeSql.Provider.Sqlite</td><td>Based on System.Data.SQLite.Core</td></tr><tr><td>FreeSql.Provider.SqliteCore</td><td>Based on Microsoft.Data.Sqlite.Core, requires installing bundle_xxx</td></tr><tr><td>FreeSql.Provider.Duckdb</td><td>Based on DuckDB.NET.Data.Full</td></tr><tr><td>FreeSql.Provider.ClickHouse</td><td>Based on ClickHouse.Client</td></tr><tr><td>FreeSql.Provider.QuestDb</td><td>Based on Npgsql and RestApi</td></tr><tr><td>FreeSql.Provider.Oracle</td><td></td></tr><tr><td>FreeSql.Provider.OracleOledb</td><td>Based on Oledb, addresses US7ASCII Chinese garbled text issue</td></tr><tr><td>FreeSql.Provider.Firebird</td><td></td></tr><tr><td>FreeSql.Provider.MsAccess</td><td></td></tr><tr><td>FreeSql.Provider.Dameng</td><td>Based on Dameng Database</td></tr><tr><td>FreeSql.Provider.ShenTong</td><td>Based on ShenZhou General Database</td></tr><tr><td>FreeSql.Provider.KingbaseES</td><td>Based on RenDa JinCang Database</td></tr><tr><td>FreeSql.Provider.GBase</td><td>Based on NanDa General GBase Database</td></tr><tr><td>FreeSql.Provider.Xugu</td><td>Based on Xugu Database</td></tr><tr><td>FreeSql.Provider.Odbc</td><td>Based on ODBC</td></tr><tr><td>FreeSql.Provider.Custom</td><td>Custom adaptation<br><em>Supports SqlServer2000, PolarDB, KunDB, other databases, etc.</em></td></tr></tbody></table><h2 id="create-entity" tabindex="-1"><a class="header-anchor" href="#create-entity" aria-hidden="true">#</a> Create Entity</h2><p><code>FreeSql</code> uses models to perform data access, where models are represented by entity classes that correspond to database tables or views, and are used for querying and saving data.</p>',3)),n("p",null,[t[5]||(t[5]=s("You can generate entity models from an existing database using the ")),t[6]||(t[6]=n("code",null,"IDbFirst",-1)),t[7]||(t[7]=s(" interface provided by ")),t[8]||(t[8]=n("code",null,"FreeSql",-1)),t[9]||(t[9]=s(", which implements ")),l(c,{to:"/en/guide/db-first.html"},{default:e(()=>t[4]||(t[4]=[s("Entity Model Generation")])),_:1}),t[10]||(t[10]=s("."))]),n("p",null,[t[12]||(t[12]=s("Alternatively, you can manually create models. By creating or modifying the database structure based on these models, ")),t[13]||(t[13]=n("code",null,"FreeSql",-1)),t[14]||(t[14]=s(" provides ")),l(c,{to:"/en/guide/code-first.html"},{default:e(()=>t[11]||(t[11]=[s("CodeFirst")])),_:1}),t[15]||(t[15]=s(" synchronization APIs (and even supports automatic synchronization during the development phase)."))]),t[50]||(t[50]=r(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">FreeSql<span class="token punctuation">.</span>DataAnnotations</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blog</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> BlogId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Url <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Rating <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to Use</h2><blockquote><p>Note: IFreeSql should be declared as a singleton in the project.</p></blockquote>`,3)),l(d,{id:"229",data:[{id:"ASP.NET Core 6+ (Dependency Injection)"},{id:".NET Framework (General)"}],active:0},{title0:e(({value:a,isActive:o})=>t[16]||(t[16]=[s("ASP.NET Core 6+ (Dependency Injection)")])),title1:e(({value:a,isActive:o})=>t[17]||(t[17]=[s(".NET Framework (General)")])),tab0:e(({value:a,isActive:o})=>t[18]||(t[18]=[n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" builder "),n("span",{class:"token operator"},"="),s(" WebApplication"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreateBuilder"),n("span",{class:"token punctuation"},"("),s("args"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},[s("Func"),n("span",{class:"token punctuation"},"<"),s("IServiceProvider"),n("span",{class:"token punctuation"},","),s(" IFreeSql"),n("span",{class:"token punctuation"},">")]),s(" fsqlFactory "),n("span",{class:"token operator"},"="),s(" r "),n("span",{class:"token operator"},"=>"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"IFreeSql"),s(" fsql "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("FreeSql"),n("span",{class:"token punctuation"},"."),s("FreeSqlBuilder")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseConnectionString"),n("span",{class:"token punctuation"},"("),s("FreeSql"),n("span",{class:"token punctuation"},"."),s("DataType"),n("span",{class:"token punctuation"},"."),s("Sqlite"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'@"Data Source=freedb.db"'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseMonitorCommand"),n("span",{class:"token punctuation"},"("),s("cmd "),n("span",{class:"token operator"},"=>"),s(" Console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"Sql：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("cmd"),n("span",{class:"token punctuation"},"."),s("CommandText")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseAutoSyncStructure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"//Entity structures are automatically synchronized to the database"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" fsql"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
builder`),n("span",{class:"token punctuation"},"."),s("Services"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"AddSingleton"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("IFreeSql"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),s("fsqlFactory"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},"WebApplication"),s(" app "),n("span",{class:"token operator"},"="),s(" builder"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>t[19]||(t[19]=[n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token comment"},"// Note: The generic class DB<T> cannot be used."),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"DB"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
   `),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},[s("Lazy"),n("span",{class:"token punctuation"},"<"),s("IFreeSql"),n("span",{class:"token punctuation"},">")]),s(" sqliteLazy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("Lazy"),n("span",{class:"token punctuation"},"<"),s("IFreeSql"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(` 
   `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" fsql "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("FreeSql"),n("span",{class:"token punctuation"},"."),s("FreeSqlBuilder")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseMonitorCommand"),n("span",{class:"token punctuation"},"("),s("cmd "),n("span",{class:"token operator"},"=>"),s(" Trace"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"Sql：'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("cmd"),n("span",{class:"token punctuation"},"."),s("CommandText")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseConnectionString"),n("span",{class:"token punctuation"},"("),s("FreeSql"),n("span",{class:"token punctuation"},"."),s("DataType"),n("span",{class:"token punctuation"},"."),s("Sqlite"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'@"Data Source=freedb.db"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseAutoSyncStructure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"//Entity structures are automatically synchronized to the database"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" fsql"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},"IFreeSql"),s(" Sqlite "),n("span",{class:"token operator"},"=>"),s(" sqliteLazy"),n("span",{class:"token punctuation"},"."),s("Value"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),t[51]||(t[51]=r(`<p><code>IFreeSql</code> is the top-level object in the ORM, and all operations are performed using its methods or properties:</p><ul><li><code>UseAutoSyncStructure</code> automatically synchronizes entity structures to the database in the development environment.</li><li><code>UseNameConvert</code> uses underscore naming for database tables and columns while using C# PascalCase for code.</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Query</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insert</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Insert</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Update</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Delete</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">InsertOrUpdate</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Insert or Update</span>
fsql<span class="token punctuation">.</span><span class="token function">Transaction</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">)</span> <span class="token comment">// Transaction</span>

fsql<span class="token punctuation">.</span>CodeFirst <span class="token comment">// CodeFirst object</span>
fsql<span class="token punctuation">.</span>DbFirst <span class="token comment">// DbFirst object</span>
fsql<span class="token punctuation">.</span>Ado <span class="token comment">// Ado object</span>
fsql<span class="token punctuation">.</span>Aop <span class="token comment">// Aop object</span>
fsql<span class="token punctuation">.</span>GlobalFilter <span class="token comment">// Global filter object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note: Use <code>UseAutoSyncStructure</code> with caution in production environments.</strong></p><p><strong>Note: Use <code>UseAutoSyncStructure</code> with caution in production environments.</strong></p><p><strong>Note: Use <code>UseAutoSyncStructure</code> with caution in production environments.</strong></p><h2 id="freesqlbuilder" tabindex="-1"><a class="header-anchor" href="#freesqlbuilder" aria-hidden="true">#</a> FreeSqlBuilder</h2><table><thead><tr><th>Method</th><th>Return Value</th><th>Description</th></tr></thead><tbody><tr><td>UseConnectionString</td><td>this</td><td>Sets the connection string</td></tr><tr><td>UseAdoConnectionPool</td><td>this</td><td>Configures the connection pool scheme (default is false; recommended to set true for remote access)</td></tr><tr><td>UseSlave</td><td>this</td><td>Configures a slave database; supports multiple slaves</td></tr><tr><td>UseSlaveWeight</td><td>this</td><td>Configures the weight of the slave database</td></tr><tr><td>UseConnectionFactory</td><td>this</td><td>Sets a custom database connection object (bypasses the built-in connection pool technology)</td></tr><tr><td>UseAutoSyncStructure</td><td>this</td><td>[Essential for development] Automatically synchronizes entity structures to the database; checks for entity creation or modifications during program runtime</td></tr><tr><td>UseNoneCommandParameter</td><td>this</td><td>Disables command parameterization for execution, applicable for <code>Insert/Update</code>; can also use <code>IInsert/IUpdate.NoneParameter()</code> temporarily</td></tr><tr><td>UseGenerateCommandParameterWithLambda</td><td>this</td><td>Generates command parameterization, applicable for lambda expression parsing</td></tr><tr><td>UseLazyLoading</td><td>this</td><td>Enables lazy loading functionality</td></tr><tr><td>UseMonitorCommand</td><td>this</td><td>Monitors global SQL execution before and after</td></tr><tr><td>UseMappingPriority</td><td>this</td><td>Specifies the mapping priority (default is <code>Aop &lt; FluentApi &lt; Attribute</code>); the last one has the highest priority)</td></tr><tr><td>UseNameConvert</td><td>this</td><td>Automatically converts names from Entity to Db</td></tr><tr><td>UseQuoteSqlName</td><td>this</td><td>Determines if SQL names use brackets <code>[]</code>, backticks <code>\`</code>, or double quotes <code>&quot;&quot;</code></td></tr><tr><td>UseExitAutoDisposePool</td><td>this</td><td>Listens to <code>AppDomain.CurrentDomain.ProcessExit</code> and <code>Console.CancelKeyPress</code> events to automatically release the connection pool (default is true)</td></tr><tr><td><code>Build&lt;T&gt;</code></td><td><code>IFreeSql&lt;T&gt;</code></td><td>Creates an <code>IFreeSql</code> object; note: designed as a singleton, avoid creating multiple instances</td></tr></tbody></table><h2 id="connectionstrings" tabindex="-1"><a class="header-anchor" href="#connectionstrings" aria-hidden="true">#</a> ConnectionStrings</h2>`,9)),n("table",null,[t[47]||(t[47]=n("thead",null,[n("tr",null,[n("th",null,"DataType"),n("th",null,"ConnectionString")])],-1)),n("tbody",null,[t[24]||(t[24]=n("tr",null,[n("td",null,"DataType.MySql"),n("td",null,"Data Source=127.0.0.1;Port=3306;User ID=root;Password=root; Initial Catalog=cccddd;Charset=utf8mb4; SslMode=none;Min pool size=1")],-1)),t[25]||(t[25]=n("tr",null,[n("td",null,"DataType.PostgreSQL"),n("td",null,"Host=192.168.164.10;Port=5432;Username=postgres;Password=123456; Database=tedb;ArrayNullabilityMode=Always;Pooling=true;Minimum Pool Size=1")],-1)),t[26]||(t[26]=n("tr",null,[n("td",null,"DataType.SqlServer"),n("td",null,"Data Source=.;User Id=sa;Password=123456;Initial Catalog=freesqlTest;Encrypt=True;TrustServerCertificate=True;Pooling=true;Min Pool Size=1")],-1)),t[27]||(t[27]=n("tr",null,[n("td",null,"DataType.Oracle"),n("td",null,"user id=user1;password=123456; data source=//127.0.0.1:1521/XE;Pooling=true;Min Pool Size=1")],-1)),t[28]||(t[28]=n("tr",null,[n("td",null,"DataType.Sqlite"),n("td",null,"Data Source=|DataDirectory|\\document.db; Attachs=xxxtb.db; Pooling=true;Min Pool Size=1")],-1)),n("tr",null,[t[21]||(t[21]=n("td",null,"DataType.DuckDB",-1)),n("td",null,[n("a",S,[t[20]||(t[20]=s("https://duckdb.net/docs/connection-string.html")),l(p)])])]),t[29]||(t[29]=n("tr",null,[n("td",null,"DataType.ClickHouse"),n("td",null,"DataCompress=False;BufferSize=32768;SocketTimeout=10000;CheckCompressedHash=False;Encrypt=False;Compressor=lz4;Host=192.168.0.121;Port=8125;Database=PersonnelLocation;Username=root;Password=123")],-1)),t[30]||(t[30]=n("tr",null,[n("td",null,"DataType.Firebird"),n("td",null,"database=localhost:D:\\fbdata\\EXAMPLES.fdb;user=sysdba;password=123456")],-1)),t[31]||(t[31]=n("tr",null,[n("td",null,"DataType.QuestDb"),n("td",null,"host=localhost;port=8812;username=admin;password=quest;database=qdb;ServerCompatibilityMode=NoTypeLoading;")],-1)),t[32]||(t[32]=n("tr",null,[n("td",null,"DataType.MsAccess"),n("td",null,"Provider=Microsoft.Jet.OleDb.4.0;Data Source=d:/accdb/2003.mdb")],-1)),t[33]||(t[33]=n("tr",null,[n("td",null,"DataType.MsAccess(accdb)"),n("td",null,"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=d:/accdb/2003.accdb;")],-1)),t[34]||(t[34]=n("tr",null,[n("td",null,"DataType.MsAccess(加密)"),n("td",null,"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=d:/accdb/2003.accdb;Jet OLEDB:Database Password=12341234")],-1)),t[35]||(t[35]=n("tr",null,[n("td",null,"DataType.Dameng(达梦)"),n("td",null,"server=127.0.0.1;port=5236;user=2user;password=123456789;database=2user;poolsize=5")],-1)),t[36]||(t[36]=n("tr",null,[n("td",null,"DataType.ShenTong(神通)"),n("td",null,"HOST=192.168.164.10;PORT=2003;DATABASE=OSRDB;USERNAME=SYSDBA;PASSWORD=szoscar55;MAXPOOLSIZE=2")],-1)),t[37]||(t[37]=n("tr",null,[n("td",null,"DataType.KingbaseES(人大金仓) V008R003"),n("td",null,"Server=127.0.0.1;Port=54321;UID=USER2;PWD=123456789;database=TEST;MAXPOOLSIZE=2")],-1)),t[38]||(t[38]=n("tr",null,[n("td",null,"DataType.Gbase(南大通用)"),n("td",null,"Driver={GBase ODBC DRIVER (64-Bit)};Host=192.168.164.134;Service=9088;Server=gbase01;Database=testdb;Protocol=onsoctcp;Uid=gbasedbt;Pwd=GBase123;Db_locale=zh_CN.utf8;Client_locale=zh_CN.utf8")],-1)),t[39]||(t[39]=n("tr",null,[n("td",null,"DataType.Xugu(虚谷)"),n("td",null,"IP=127.0.0.1;DB=SYSTEM;User=SYSDBA;PWD=SYSDBA;Port=5138;AUTO_COMMIT=on;CHAR_SET=UTF8")],-1)),t[40]||(t[40]=n("tr",null,[n("td",null,"DataType.OdbcMySql"),n("td",null,"Driver={MySQL ODBC 8.0 Unicode Driver}; Server=127.0.0.1;Persist Security Info=False; Trusted_Connection=Yes;UID=root;PWD=root; DATABASE=cccddd_odbc;Charset=utf8; SslMode=none;Min Pool Size=1")],-1)),t[41]||(t[41]=n("tr",null,[n("td",null,"DataType.OdbcSqlServer"),n("td",null,"Driver={SQL Server};Data Source=.;User Id=sa;Password=123456;Initial Catalog=freesqlTest;Encrypt=True;TrustServerCertificate=True;Pooling=true;Min Pool Size=1")],-1)),t[42]||(t[42]=n("tr",null,[n("td",null,"DataType.OdbcOracle"),n("td",null,"Driver={Oracle in XE};Server=//127.0.0.1:1521/XE; Persist Security Info=False; Trusted_Connection=Yes;UID=odbc1;PWD=123456; Min Pool Size=1")],-1)),t[43]||(t[43]=n("tr",null,[n("td",null,"DataType.OdbcPostgreSQL"),n("td",null,"Driver={PostgreSQL Unicode(x64)};Server=192.168.164.10; Port=5432;UID=postgres;PWD=123456; Database=tedb_odbc;Pooling=true;Min Pool Size=1")],-1)),t[44]||(t[44]=n("tr",null,[n("td",null,"DataType.OdbcDameng (达梦)"),n("td",null,"Driver={DM8 ODBC DRIVER};Server=127.0.0.1:5236; Persist Security Info=False; Trusted_Connection=Yes; UID=USER1;PWD=123456789")],-1)),t[45]||(t[45]=n("tr",null,[n("td",null,"DataType.OdbcKingbaseES (人大金仓) V008R003"),n("td",null,"Driver={KingbaseES 8.2 ODBC Driver ANSI};Server=127.0.0.1;Port=54321;UID=USER2;PWD=123456789;database=TEST")],-1)),t[46]||(t[46]=n("tr",null,[n("td",null,"DataType.Odbc"),n("td",null,"Driver={SQL Server};Server=.;Persist Security Info=False; Trusted_Connection=Yes;Integrated Security=True; DATABASE=freesqlTest_odbc; Pooling=true;Min pool size=1")],-1)),n("tr",null,[n("td",null,[n("a",v,[t[22]||(t[22]=s("DataType.Custom")),l(p)])]),t[23]||(t[23]=n("td",null,'"Custom Connection String: Access Any Database"',-1))])])])])}const q=u(b,[["render",g],["__file","index.html.vue"]]);export{q as default};
