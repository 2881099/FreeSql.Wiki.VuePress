import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,a as e}from"./app-CFxx0j--.js";const p={};function o(c,n){return a(),t("div",null,n[0]||(n[0]=[e(`<h1 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> Update</h1><p><code>FreeSql</code> provides rich database update functionalities, supporting both single and bulk updates. It can also return the updated records when executed on certain databases.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">IFreeSql</span> fsql<span class="token punctuation">;</span> <span class="token comment">// For creation details, refer to the introductory documentation</span>

<span class="token keyword">class</span> <span class="token class-name">Topic</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Clicks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-dynamic-conditions" tabindex="-1"><a class="header-anchor" href="#_1-dynamic-conditions" aria-hidden="true">#</a> 1. Dynamic Conditions</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> dywhere<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>dywhere</code> can be:</p><ul><li>Primary key value</li><li><code>new[] { primaryKeyValue1, primaryKeyValue2 }</code></li><li>Topic object</li><li><code>new[] { TopicObject1, TopicObject2 }</code></li><li><code>new { id = 1 }</code></li></ul><h2 id="_2-dynamic-table-name" tabindex="-1"><a class="header-anchor" href="#_2-dynamic-table-name" aria-hidden="true">#</a> 2. Dynamic Table Name</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token string">&quot;Topic_201903&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Updates the Topic_201903 table</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-conditions" tabindex="-1"><a class="header-anchor" href="#_3-conditions" aria-hidden="true">#</a> 3. Conditions</h2><blockquote><p>In addition to the <code>dywhere</code> constructor parameters described above, <code>Where lambda/sql</code> methods are also supported.</p></blockquote><blockquote><p>For security reasons, updates are not executed without conditions to avoid mistakenly updating the entire table. To update the entire table: <code>fsql.Update&lt;T&gt;().Where(a =&gt; true).Set(a =&gt; a.Xxx == xxx).ExecuteAffrows()</code></p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> <span class="token string">&quot;New Title&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Time<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = @p_0, \`Time\` = @p_1</span>
<span class="token comment">// WHERE (Id = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-set-columns" tabindex="-1"><a class="header-anchor" href="#_4-set-columns" aria-hidden="true">#</a> 4. Set Columns</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`CreateTime\` = &#39;2018-12-08 00:04:59&#39;</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>Set()</code> supports multiple calls, which is equivalent to concatenation</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Clicks <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Time <span class="token operator">==</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Clicks\` = ifnull(\`Clicks\`,0) + 1, \`Time\` = now()</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span>
    <span class="token punctuation">{</span>
        Clicks <span class="token operator">=</span> a<span class="token punctuation">.</span>Clicks <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
        Time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Clicks\` = ifnull(\`Clicks\`,0) + 1, \`Time\` = now()</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-setsource-entity" tabindex="-1"><a class="header-anchor" href="#_5-setsource-entity" aria-hidden="true">#</a> 5. SetSource Entity</h2><p>Method 1: (Recommended)</p><blockquote><p>Only updates changed properties, depends on <code>FreeSql.Repository</code></p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Can be obtained from the IOC container</span>
<span class="token class-name"><span class="token keyword">var</span></span> item <span class="token operator">=</span> repo<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Snapshot item at this point</span>
item<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;newtitle&quot;</span><span class="token punctuation">;</span>
repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Changes compared to the snapshot</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = @p_0</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Method 2: (Original)</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// v1.5.0 ignores properties with null values</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSourceIgnore</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> col <span class="token operator">=&gt;</span> col <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;newtitle&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Clicks\` = @p_0, \`Title\` = @p_1, \`CreateTime\` = @p_2</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UpdateColumns</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> a<span class="token punctuation">.</span>CreateTime <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = @p_0, \`CreateTime\` = @p_1</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">IgnoreColumns</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Clicks<span class="token punctuation">,</span> a<span class="token punctuation">.</span>CreateTime <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = @p_0</span>
<span class="token comment">// WHERE (\`Id\` = 1)</span>

<span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;newtitle</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">a</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> Clicks <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Clicks\` = CASE \`Id\` WHEN 1 THEN @p_0 WHEN 2 THEN @p_1 WHEN 3 THEN @p_2 WHEN 4 THEN @p_3 WHEN 5 THEN @p_4 WHEN 6 THEN @p_5 WHEN 7 THEN @p_6 WHEN 8 THEN @p_7 WHEN 9 THEN @p_8 WHEN 10 THEN @p_9 END,</span>
<span class="token comment">// \`Title\` = CASE \`Id\` WHEN 1 THEN @p_10 WHEN 2 THEN @p_11 WHEN 3 THEN @p_12 WHEN 4 THEN @p_13 WHEN 5 THEN @p_14 WHEN 6 THEN @p_15 WHEN 7 THEN @p_16 WHEN 8 THEN @p_17 WHEN 9 THEN @p_18 WHEN 10 THEN @p_19 END,</span>
<span class="token comment">// \`CreateTime\` = CASE \`Id\` WHEN 1 THEN @p_20 WHEN 2 THEN @p_21 WHEN 3 THEN @p_22 WHEN 4 THEN @p_23 WHEN 5 THEN @p_24 WHEN 6 THEN @p_25 WHEN 7 THEN @p_26 WHEN 8 THEN @p_27 WHEN 9 THEN @p_28 WHEN 10 THEN @p_29 END</span>
<span class="token comment">// WHERE (\`Id\` IN (1,2,3,4,5,6,7,8,9,10))</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">IgnoreColumns</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Clicks<span class="token punctuation">,</span> a<span class="token punctuation">.</span>CreateTime <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = CASE \`Id\` WHEN 1 THEN @p_0 WHEN 2 THEN @p_1 WHEN 3 THEN @p_2 WHEN 4 THEN @p_3 WHEN 5 THEN @p_4 WHEN 6 THEN @p_5 WHEN 7 THEN @p_6 WHEN 8 THEN @p_7 WHEN 9 THEN @p_8 WHEN 10 THEN @p_9 END</span>
<span class="token comment">// WHERE (\`Id\` IN (1,2,3,4,5,6,7,8,9,10))</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`CreateTime\` = @p_0</span>
<span class="token comment">// WHERE (\`Id\` IN (1,2,3,4,5,6,7,8,9,10))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Specifying <code>Set</code> columns for updates will make <code>SetSource</code> invalid.</p></blockquote><blockquote><p><code>SetSource</code> relies on entity&#39;s <code>IsPrimary</code> attribute by default; for temporary primary keys, use <code>SetSource(items, a =&gt; a.Code)</code>.</p></blockquote><blockquote><p>For Oracle, CASE when N&#39;&#39; character set mismatch:</p></blockquote><ul><li>Reason: Mismatch between entity primary key <code>Column DbType</code> and table type.</li><li>Solution: <code>[Column(DbType = &quot;varchar2&quot;, StringLength = 255)]</code></li></ul><h2 id="_6-setdto" tabindex="-1"><a class="header-anchor" href="#_6-setdto" aria-hidden="true">#</a> 6. SetDto</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetDto</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> title <span class="token operator">=</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> clicks <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \`Topic\` SET \`Title\` = @p_0, \`Clicks\` = @p_1 WHERE (Id = 1)</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetDto</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;clicks&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-differences-set-setsource-setdto" tabindex="-1"><a class="header-anchor" href="#_7-differences-set-setsource-setdto" aria-hidden="true">#</a> 7. Differences Set/SetSource/SetDto</h2><p>These three are parallel functionalities, corresponding to:</p><ul><li><code>Set/SetRaw</code>: Used when the entity is known, corresponding to <code>update t set x = x</code>.</li><li><code>SetSource</code>: Updates the entire entity and can be used with <code>UpdateColumns</code> or <code>IgnoreColumns</code> to specify or ignore fields.</li><li><code>SetDto</code>: Bulk operation for <code>Set</code>.</li></ul><h2 id="_8-dictionary-update" tabindex="-1"><a class="header-anchor" href="#_8-dictionary-update" aria-hidden="true">#</a> 8. Dictionary Update</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> dic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dic<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dic<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token function">UpdateDict</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token string">&quot;table1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WherePrimary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Note: List&lt;Dictionary&lt;string, object&gt;&gt; is for bulk updates</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-optimistic-locking" tabindex="-1"><a class="header-anchor" href="#_9-optimistic-locking" aria-hidden="true">#</a> 9. Optimistic Locking</h2><p>When updating entire entity data, it is easy for old data to overwrite new records in concurrent scenarios.</p><p>The principle of optimistic locking is to use a field of the entity, such as <code>long version</code>. Before updating, query the data, at which point the <code>version</code> is <code>1</code>. The generated SQL for updating will include <code>where version = 1</code>. If the modification fails (i.e., <code>Affrows == 0</code>), an exception (<code>DbUpdateVersionException</code>) is thrown.</p><p>Each entity supports only one optimistic lock property. Mark the property with the attribute: <code>[Column(IsVersion = true)]</code>.</p><blockquote><p>Applies to <code>SetSource</code> updates. Each update increments the <code>version</code> value by <code>1</code>.</p></blockquote><h2 id="_10-pessimistic-locking" tabindex="-1"><a class="header-anchor" href="#_10-pessimistic-locking" aria-hidden="true">#</a> 10. Pessimistic Locking</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> user <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ForUpdate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT ... FROM User a for update nowait</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ForUpdate</code> is a common syntax for Oracle/PostgreSQL/MySql. We have made special adaptations for SqlServer, and the executed SQL statement is roughly as follows:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">[</span><span class="token keyword">User</span><span class="token punctuation">]</span> a <span class="token keyword">With</span><span class="token punctuation">(</span>UpdLock<span class="token punctuation">,</span> RowLock<span class="token punctuation">,</span> NoWait<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_11-iselect-toupdate" tabindex="-1"><a class="header-anchor" href="#_11-iselect-toupdate" aria-hidden="true">#</a> 11. ISelect.ToUpdate</h2><p><code>IUpdate</code> does not support navigation objects, multi-table associations, etc., by default. <code>ISelect.ToUpdate</code> can convert a query into <code>IUpdate</code> for updating data using navigation objects, as shown below:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Options<span class="token punctuation">.</span>xxx <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> <span class="token string">&quot;111&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note: This method does not query the data into memory before updating. The above code generates the following SQL:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">\`</span>T1<span class="token punctuation">\`</span></span> <span class="token keyword">SET</span> Title <span class="token operator">=</span> <span class="token string">&#39;111&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> a<span class="token punctuation">.</span>id <span class="token keyword">from</span> T1 a <span class="token keyword">left</span> <span class="token keyword">join</span> Options b <span class="token keyword">on</span> b<span class="token punctuation">.</span>t1id <span class="token operator">=</span> a<span class="token punctuation">.</span>id <span class="token keyword">where</span> b<span class="token punctuation">.</span>xxx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Advantages of using this method for complex updates:</p><ul><li>Allows previewing and testing data before updating, preventing erroneous updates.</li><li>Supports complex update operations, such as updating the top 10 records matching the condition with <code>Limit(10)</code> on <code>ISelect</code>.</li></ul><h2 id="_12-join-table-update" tabindex="-1"><a class="header-anchor" href="#_12-join-table-update" aria-hidden="true">#</a> 12. Join Table Update</h2><p>v3.2.692+ (High-risk operation, high-risk operation, high-risk operation. Please use with caution and test to verify the content returned by ToSql.)</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Join</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">==</span> b<span class="token punctuation">.</span>groupid<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>bname <span class="token operator">==</span> b<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// Fields from other tables</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>bcode <span class="token operator">==</span> b<span class="token punctuation">.</span>id <span class="token operator">+</span> a<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>flag<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// Fixed value</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL generated by different databases may vary. For example, in MySql:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">\`</span>T1<span class="token punctuation">\`</span></span> a
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">\`</span>T2<span class="token punctuation">\`</span></span> b <span class="token keyword">ON</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>groupid<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">SET</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>bname<span class="token punctuation">\`</span></span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>bcode<span class="token punctuation">\`</span></span> <span class="token operator">=</span> concat<span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>code<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>flag<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">AND</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">&gt;</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>More complex join table updates:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> query <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">,</span> T3<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> item1 <span class="token operator">=</span> a<span class="token punctuation">,</span> item2 <span class="token operator">=</span> b <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">==</span> b<span class="token punctuation">.</span>item1<span class="token punctuation">.</span>groupid<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>bcode <span class="token operator">==</span> b<span class="token punctuation">.</span>item2<span class="token punctuation">.</span>xcode<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">\`</span>T1<span class="token punctuation">\`</span></span> a
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span>
  <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>t2<span class="token punctuation">\`</span></span> a
  <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token keyword">Where</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span> b <span class="token keyword">ON</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>groupid<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">SET</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>bcode<span class="token punctuation">\`</span></span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>xcode<span class="token punctuation">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-high-performance-bulkcopy" tabindex="-1"><a class="header-anchor" href="#_13-high-performance-bulkcopy" aria-hidden="true">#</a> 13. High-Performance BulkCopy</h2><table><thead><tr><th>Package</th><th>Extension Method</th><th>Description (v3.2.693)</th></tr></thead><tbody><tr><td>FreeSql.Provider.SqlServer</td><td>ExecuteSqlBulkCopy</td><td></td></tr><tr><td>FreeSql.Provider.MySqlConnector</td><td>ExecuteMySqlBulkCopy</td><td></td></tr><tr><td>FreeSql.Provider.Oracle</td><td>ExecuteOracleBulkCopy</td><td></td></tr><tr><td>FreeSql.Provider.PostgreSQL</td><td>ExecutePgCopy</td><td></td></tr><tr><td>FreeSql.Provider.Dameng</td><td>ExecuteDmBulkCopy</td><td>Dameng</td></tr><tr><td>FreeSql.Provider.KingbaseES</td><td>ExecuteKdbCopy</td><td>KingbaseES</td></tr></tbody></table><p>Principle: Use BulkCopy to insert data into a temporary table, and then use UPDATE FROM JOIN for table updates.</p><p>Tip: Significant benefits when the number of updated fields exceeds 3000.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetSource</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteSqlBulkCopy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><table><thead><tr><th>Method</th><th>Return Value</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td>SetSource</td><td>&lt;this&gt;</td><td>T1 | IEnumerable&lt;T1&gt;</td><td>Updates data, sets the entities to update</td></tr><tr><td>IgnoreColumns</td><td>&lt;this&gt;</td><td>Lambda</td><td>Columns to ignore</td></tr><tr><td>Set</td><td>&lt;this&gt;</td><td>Lambda, value</td><td>Sets the new value for a column, e.g., <code>Set(a =&gt; a.Name, &quot;newvalue&quot;)</code></td></tr><tr><td>Set</td><td>&lt;this&gt;</td><td>Lambda</td><td>Sets the new value by incrementing, e.g., <code>Set(a =&gt; a.Clicks + 1)</code>, equivalent to clicks=clicks+1</td></tr><tr><td>SetDto</td><td>&lt;this&gt;</td><td>object</td><td>Update method based on DTO</td></tr><tr><td>SetRaw</td><td>&lt;this&gt;</td><td>string, parms</td><td>Sets value using custom SQL syntax, e.g., <code>SetRaw(&quot;title = @title&quot;, new { title = &quot;newtitle&quot; })</code></td></tr><tr><td>Where</td><td>&lt;this&gt;</td><td>Lambda</td><td>Expression condition, supports only basic entity members (no navigation objects)</td></tr><tr><td>Where</td><td>&lt;this&gt;</td><td>string, parms</td><td>Native SQL condition, e.g., <code>Where(&quot;id = @id&quot;, new { id = 1 })</code></td></tr><tr><td>Where</td><td>&lt;this&gt;</td><td>T1 | IEnumerable&lt;T1&gt;</td><td>Pass entity or collection, using primary key as condition</td></tr><tr><td>CommandTimeout</td><td>&lt;this&gt;</td><td>int</td><td>Command timeout setting (seconds)</td></tr><tr><td>WithTransaction</td><td>&lt;this&gt;</td><td>DbTransaction</td><td>Sets transaction object</td></tr><tr><td>WithConnection</td><td>&lt;this&gt;</td><td>DbConnection</td><td>Sets connection object</td></tr><tr><td>ToSql</td><td>string</td><td></td><td>Returns the SQL statement to be executed</td></tr><tr><td>ExecuteAffrows</td><td>long</td><td></td><td>Executes SQL statement, returns the number of affected rows</td></tr><tr><td>ExecuteUpdated</td><td>List&lt;T1&gt;</td><td></td><td>Executes SQL statement, returns the updated records</td></tr><tr><td>Join</td><td>IUpdateJoin</td><td></td><td>Join table update</td></tr></tbody></table>`,66)]))}const u=s(p,[["render",o],["__file","update.html.vue"]]);export{u as default};
