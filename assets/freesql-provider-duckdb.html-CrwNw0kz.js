import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as i,c as u,a as n,b as t,d as e,w as l,e as c}from"./app-DDhGSdpq.js";const r={},p=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),t(" 介绍")],-1),h=n("p",null,"DuckDB 是一款进程内分析数据库，它可以在无需维护分布式多服务器系统的情况下处理出人意料的大型数据集。",-1),_=n("p",null,"DuckDB has two configurable options for concurrency:",-1),m=n("ul",null,[n("li",null,"One process can both read and write to the database."),n("li",null,"Multiple processes can read from the database, but no processes can write (access_mode = 'READ_ONLY').")],-1),b={href:"https://duckdb.org/docs/",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="安装包" tabindex="-1"><a class="header-anchor" href="#安装包" aria-hidden="true">#</a> 安装包</h2><p>FreeSql.Provider.Duckdb</p><p>.NET CLI</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package FreeSql.Provider.Duckdb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Package Manager</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Install-Package FreeSql.Provider.Duckdb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="声明" tabindex="-1"><a class="header-anchor" href="#声明" aria-hidden="true">#</a> 声明</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>DuckDB<span class="token punctuation">,</span> <span class="token string">&quot;DataSource = train_services.db&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Sql：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">cmd<span class="token punctuation">.</span>CommandText</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//自动创建表</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖的第三方 ado.net 驱动源代码：https://github.com/Giorgi/DuckDB.NET</p><table><thead><tr><th>Connection String</th><th>Description</th></tr></thead><tbody><tr><td>DataSource = :memory:</td><td>Connect to a new in-memory database</td></tr><tr><td>DataSource = :memory:?cache=shared</td><td>Connect to a shared, in-memory database</td></tr><tr><td>DataSource = train_services.db</td><td>Connect to train_services.db</td></tr><tr><td>DataSource = train_services.db;ACCESS_MODE=READ_ONLY</td><td>Connect to train_services.db, make connection read-only</td></tr><tr><td>DataSource = :memory:;threads=8;ACCESS_MODE=READ_ONLY</td><td>Connect to a new in-memory database, limit threads to 8, make connection read-only</td></tr><tr><td>DataSource = train_services.db;ACCESS_MODE=READ_ONLY;memory_limit=10GB</td><td>Connect to train_services.db, make connection read-only, limit RAM usage to 10GB</td></tr></tbody></table><h2 id="类型映射" tabindex="-1"><a class="header-anchor" href="#类型映射" aria-hidden="true">#</a> 类型映射</h2>`,11),g=n("thead",null,[n("tr",null,[n("th",null,"CSharp"),n("th",null,"DuckDB"),n("th",null,"说明")])],-1),v=n("tr",null,[n("td",null,"bool/bool?"),n("td",null,"BOOLEAN"),n("td",null,"logical boolean (true/false)")],-1),y=n("tr",null,[n("td",null,"sbyte/sbyte?"),n("td",null,"TINYINT"),n("td",null,"signed one-byte integer")],-1),D=n("tr",null,[n("td",null,"short/short?"),n("td",null,"SMALLINT"),n("td",null,"signed two-byte integer")],-1),f=n("tr",null,[n("td",null,"int/int?"),n("td",null,"INTEGER"),n("td",null,"signed four-byte integer")],-1),T=n("tr",null,[n("td",null,"long/long?"),n("td",null,"BIGINT"),n("td",null,"signed eight-byte integer")],-1),S=n("tr",null,[n("td",null,"byte/byte?"),n("td",null,"UTINYINT"),n("td")],-1),I=n("tr",null,[n("td",null,"ushort/ushort?"),n("td",null,"USMALLINT"),n("td")],-1),E=n("tr",null,[n("td",null,"uint/uint?"),n("td",null,"UINTEGER"),n("td")],-1),C=n("tr",null,[n("td",null,"ulong/ulong?"),n("td",null,"UBIGINT"),n("td")],-1),A=n("tr",null,[n("td",null,"double/double?"),n("td",null,"DOUBLE"),n("td",null,"double precision floating-point number (8 bytes)")],-1),B=n("tr",null,[n("td",null,"float/float?"),n("td",null,"FLOAT"),n("td",null,"single precision floating-point number (4 bytes)")],-1),N=n("tr",null,[n("td",null,"decimal/decimal?"),n("td",null,"DECIMAL(10,2)"),n("td",null,"fixed-precision number with the given width (precision) and scale")],-1),L=n("tr",null,[n("td",null,"TimeSpan/TimeSpan?"),n("td",null,"TIME"),n("td",null,"time of day (no time zone)")],-1),x=n("tr",null,[n("td",null,"DateTime/DateTime?"),n("td",null,"TIMESTAMP"),n("td",null,"combination of time and date")],-1),O=n("tr",null,[n("td",null,"TimeOnly/TimeOnly?"),n("td",null,"TIME"),n("td")],-1),q=n("tr",null,[n("td",null,"DateOnly/DateOnly?"),n("td",null,"DATE"),n("td",null,"calendar date (year, month day)")],-1),M=n("tr",null,[n("td",null,"byte[]"),n("td",null,"BLOB"),n("td",null,"variable-length binary data")],-1),R=n("tr",null,[n("td",null,"string"),n("td",null,"VARCHAR(255)"),n("td",null,"variable-length character string")],-1),U=n("tr",null,[n("td",null,"char"),n("td",null,"CHAR(1)"),n("td")],-1),w=n("tr",null,[n("td",null,"Guid/Guid?"),n("td",null,"UUID"),n("td",null,"UUID data type")],-1),G=n("tr",null,[n("td",null,"BitArray"),n("td",null,"BIT"),n("td",null,"string of 1s and 0s")],-1),F=n("tr",null,[n("td",null,"BigInteger/BigInteger?"),n("td",null,"HUGEINT"),n("td",null,"signed sixteen-byte integer")],-1),P=n("tr",null,[n("td",null,"T[]"),n("td",null,"ARRAY/LIST"),n("td",null,"如 int[]、string[]，不能是可空 int?[]")],-1),Y=n("td",null,"STRUCT",-1),V=n("td",null,"{'i': 42, 'j': 'a'}",-1),H=n("tr",null,[n("td",null,"Dictionary<TKey, TValue>"),n("td",null,"MAP"),n("td",null,"map([1, 2], ['a', 'b'])")],-1);function j(z,J){const o=a("ExternalLinkIcon"),s=a("RouterLink");return i(),u("div",null,[p,h,_,m,n("p",null,[n("a",b,[t("DuckDB | 官网 "),e(o)])]),k,n("table",null,[g,n("tbody",null,[v,y,D,f,T,S,I,E,C,A,B,N,L,x,O,q,M,R,U,w,G,F,P,n("tr",null,[n("td",null,[t("class + "),e(s,{to:"/guide/type-mapping.html#json"},{default:l(()=>[t("JsonMap")]),_:1})]),Y,V]),H])]),n("blockquote",null,[n("p",null,[t("自定义映射，请移步"),e(s,{to:"/guide/type-mapping.html"},{default:l(()=>[t("【类型映射】")]),_:1}),t("文档。")])])])}const $=d(r,[["render",j],["__file","freesql-provider-duckdb.html.vue"]]);export{$ as default};
