import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Bj4-WiZl.js";const e={},o=t(`<h1 id="read-write-splitting" tabindex="-1"><a class="header-anchor" href="#read-write-splitting" aria-hidden="true">#</a> Read-Write Splitting</h1><p>FreeSql supports database read-write splitting. This feature pertains to client-side read-write splitting behavior; how the database server itself is configured remains unchanged and unaffected by this feature. For convenience, when referring to <strong>read-write splitting</strong> below, it will mean the client-side functionality support.</p><p>The methods for read-write splitting vary among different databases. Once the read-write splitting feature is enabled on the database server, the implementation generally falls into the following categories:</p><ol><li>Nginx proxy, which is complex to configure and prone to errors;</li><li>Middleware, such as MyCat;</li><li>Client-side support;</li></ol><p>FreeSql implements the third option, supporting one <strong>master database</strong> and multiple <strong>slave databases</strong>, with the query strategy for <strong>slave databases</strong> being random.</p><p>If a <strong>slave database</strong> fails, it will switch to other available <strong>slave databases</strong>. If all <strong>slave databases</strong> are unavailable, it will fall back to querying the <strong>master database</strong>.</p><p>Failed <strong>slave databases</strong> are isolated and periodically checked for availability until they recover.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> connstr <span class="token operator">=</span> <span class="token string">&quot;Data Source=127.0.0.1;Port=3306;User ID=root;Password=root;&quot;</span> <span class="token operator">+</span>
    <span class="token string">&quot;Initial Catalog=cccddd;Charset=utf8;SslMode=none;Max pool size=10&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> connstr<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">UseSlave</span><span class="token punctuation">(</span><span class="token string">&quot;connectionString1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;connectionString2&quot;</span><span class="token punctuation">)</span> <span class="token comment">// Use slave databases, multiple supported</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Be sure to define as Singleton</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Read from **slave database** (default)</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Master</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WhereId</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Force read from **master database**</span>

fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/*master*/ select * from t where ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Force read from **master database**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","read-write-splitting.html.vue"]]);export{d as default};
