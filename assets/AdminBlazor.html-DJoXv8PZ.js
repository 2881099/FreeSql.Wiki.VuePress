import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e as s}from"./app-BqVZne1r.js";const e="/adminblazor/01.png",l="/adminblazor/02.png",d="/adminblazor/03.png",o="/adminblazor/04.png",i={},p=s('<h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h2><p>AdminBlazor 是一款 Blazor Server SaaS 后台管理项目，支持 RABC 权限菜单/按钮，支持一对一、一对多、多对多代码生成 .razor 界面。</p><p>集成功能：菜单、角色、用户、定时任务、数据字典、租户</p><p>依赖组件：BootstrapBlazor、FreeSql、FreeScheduler、Rougamo</p><ul><li>github: https://github.com/2881099/AdminBlazor</li><li>gitee: https://gitee.com/FreeSql/AdminBlazor</li></ul><p>正常更新一行记录</p><ul><li>vue -&gt; webapi orm 查询数据 -&gt; 转成 dto 返回 -&gt; 绑定 js 对象 -&gt; 前端提交时把 js 对象转成 http post DTO -&gt; webapi 获取 dto 转成实体对象 -&gt; orm.Update() -&gt; 更新成功</li><li>blazor server -&gt; orm 查询数据 item -&gt; item 与 html 控件双向绑定 -&gt; 前端提交时 orm.Update(item) -&gt; 更新成功</li></ul><p>自己体会一下。。~~</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><ol><li>安装模板</li></ol><blockquote><p>dotnet new install AdminBlazor.Template</p></blockquote><ol start="2"><li>新建项目</li></ol><blockquote><p>dotnet new admin</p></blockquote><ol start="3"><li>运行访问</li></ol><blockquote><p>http://localhost:5231/Admin</p></blockquote><p>用户名：admin 密码：freesql</p><ol start="4"><li>新建菜单，类型选择增删改查</li></ol><figure><img src="'+e+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><ol start="5"><li>生成代码，在实体类型维护注释、导航属性</li></ol><ul><li>实体上的注释，会生成 HTML Label</li><li>实体上的导航属性，会生成丰富的 UI</li><li>创建实体类型，建议继承 Entity/EntityCreated/EntityModifed</li></ul><figure><img src="'+l+`" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="权限" tabindex="-1"><a class="header-anchor" href="#权限" aria-hidden="true">#</a> 权限</h2><ul><li>UserEntity 多对多 RoleEntity</li><li>RoleEntity 多对多 MenuEntity</li></ul><p>提示：AdminContext 类型已注入为 Scoped</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">AdminContext</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IServiceProvider</span> Service <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">UserEntity</span> User <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>RoleEntity<span class="token punctuation">&gt;</span></span> Roles <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>MenuEntity<span class="token punctuation">&gt;</span></span> RoleMenus <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">//路由、按钮权限验证</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">AuthPath</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">AuthButton</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> path<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按钮权限，在 razor 中设置特性：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AdminButton</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ButtonClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后菜单管理，会出现对应的按钮项，勾选设置角色是否有按钮的权限。</p><figure><img src="`+d+`" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="租户" tabindex="-1"><a class="header-anchor" href="#租户" aria-hidden="true">#</a> 租户</h2><p>提示：AdminContext 类型已注入为 Scoped</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">AdminContext</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IServiceProvider</span> Service <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">TenantEntity</span> Tenant <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个租户独立数据库，注入方式：</p><ul><li>访问租户：IFreeSql/IAggregateRootRepository&lt;T&gt;</li><li>访问主库：FreeSqlCloud</li></ul><blockquote><p>FreeSqlCloud API 访问方式与 IFreeSql 一样 IAggregateRootRepository 是级联操作友好的仓储模式</p></blockquote><figure><img src="`+o+`" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务" aria-hidden="true">#</a> 定时任务</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Scheduler</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;任务1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0/30 * * * * *&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Scheduler001</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;任务1 被触发...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Scheduler</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;任务2&quot;</span><span class="token punctuation">,</span> Interval <span class="token operator">=</span> TaskInterval<span class="token punctuation">.</span>SEC<span class="token punctuation">,</span> Argument <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Scheduler002</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> service<span class="token punctuation">,</span> <span class="token class-name">TaskInfo</span> task<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;任务2 被触发...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//运行时 scheduler.AddTask(&quot;任务3&quot;...)</span>
<span class="token punctuation">[</span><span class="token function">Scheduler</span><span class="token punctuation">(</span><span class="token string">&quot;任务3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Scheduler003</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;任务3 被触发...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><p>以下几个是 AdminBlazor 封装的组件，更多丰富的 UI 组件可以看：BootstrapBlazor</p><h3 id="_1-增删改查-admintable2-titem" tabindex="-1"><a class="header-anchor" href="#_1-增删改查-admintable2-titem" aria-hidden="true">#</a> 1. 增删改查 AdminTable2&lt;TItem&gt;</h3><blockquote><p>使用 FreeSql 对实体类型 TItem 增删改查</p></blockquote><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>bool IsDebug</td><td>打开UI调试</td></tr><tr><td>string Title</td><td>标题，弹框时</td></tr><tr><td>int PageSize</td><td>分页，值 -1 时不分开</td></tr><tr><td>bool IsQueryString</td><td>查询条件与 URL QueryString 同步</td></tr><tr><td>bool IsRemove</td><td>开启删除</td></tr><tr><td>bool IsRowRemove</td><td>开启删除（表格每行）</td></tr><tr><td>bool IsAdd</td><td>开启添加</td></tr><tr><td>bool IsEdit</td><td>开启编辑</td></tr><tr><td>bool IsRefersh</td><td>开启刷新</td></tr><tr><td>bool IsSearchText</td><td>开启文本搜索</td></tr><tr><td>bool IsSingleSelect</td><td>开启单选</td></tr><tr><td>bool IsMultiSelect</td><td>开启多选</td></tr><tr><td>bool IsConfirmEdit</td><td>开启编辑保存时，弹框确认</td></tr><tr><td>bool IsConfirmRemove</td><td>开启删除时，弹框确认</td></tr><tr><td>int Colspan</td><td>表格一行显示几条记录</td></tr><tr><td>int BodyHeight</td><td>表格高度</td></tr><tr><td>string DialogClassName</td><td>弹框样式</td></tr><tr><td>Func&lt;AdminQueryInfo, Task&gt; InitQuery</td><td>初始化查询</td></tr><tr><td>EventCallback&lt;AdminQueryEventArgs&lt;TItem&gt;&gt; OnQuery</td><td>正在查询，设置条件</td></tr><tr><td>EventCallback&lt;TItem&gt; OnEdit</td><td>正在编辑，设置编辑对象</td></tr><tr><td>EventCallback&lt;List&lt;TItem&gt;&gt; OnRemove</td><td>正在删除</td></tr><tr><td>EventCallback&lt;List&lt;AdminItem&lt;TItem&gt;&gt;&gt; OnSelectChanged</td><td>选择内容发生变化</td></tr><tr><td>EventCallback&lt;AdminItem&lt;TItem&gt;&gt; OnRowClick</td><td>单击表格行时</td></tr><tr><td>RenderFragment TableHeader</td><td>表格 TR 模板</td></tr><tr><td>RenderFragment&lt;TItem&gt; TableRow</td><td>表格 TD 模板</td></tr><tr><td>RenderFragment&lt;TItem&gt; EditTemplate</td><td>添加/编辑 模板</td></tr><tr><td>RenderFragment CardHeader</td><td>卡片 Header 模板</td></tr><tr><td>RenderFragment CardFooter</td><td>卡片 Fotter 模板</td></tr></tbody></table><h3 id="_2-弹框分配-alloctable2-titem-tchild" tabindex="-1"><a class="header-anchor" href="#_2-弹框分配-alloctable2-titem-tchild" aria-hidden="true">#</a> 2. 弹框分配 AllocTable2&lt;TItem, TChild&gt;</h3><blockquote><p>弹框分配实体类型 TItem 【多对多】导航属性</p></blockquote><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>TItem Item</td><td>被分配的对象</td></tr><tr><td>string ChildProperty</td><td>被分配的对象的 List&lt;TChild&gt; 属性</td></tr><tr><td>string Title</td><td>标题</td></tr><tr><td>EventCallback&lt;TItem&gt; ItemChanged</td><td>分配变化时</td></tr><tr><td>int PageSize</td><td>TChild 分页，值 -1 时不分页</td></tr><tr><td>bool IsSearchText</td><td>TChild 开启文本搜索</td></tr><tr><td>EventCallback&lt;AdminQueryEventArgs&lt;TChild&gt;&gt; OnQuery</td><td>TChild 正在查询，设置条件</td></tr><tr><td>RenderFragment TableHeader</td><td>TChild 表格 TR 模板</td></tr><tr><td>RenderFragment&lt;TItem&gt; TableRow</td><td>TChild 表格 TD 模板</td></tr></tbody></table><h3 id="_3-文本框-inputtable2-titem-tkey" tabindex="-1"><a class="header-anchor" href="#_3-文本框-inputtable2-titem-tkey" aria-hidden="true">#</a> 3. 文本框 InputTable2&lt;TItem, TKey&gt;</h3><blockquote><p>文本框 + 按钮弹框绑定 【多对一】、【多对多】导航属性</p></blockquote><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>TKey Value</td><td>值</td></tr><tr><td>EventCallback&lt;TKey&gt; OnValueChanged</td><td>值变化时</td></tr><tr><td>TItem Item</td><td>【多对一】导航属性</td></tr><tr><td>EventCallback&lt;TItem&gt; OnItemChanged</td><td>【多对一】导航属性变化时</td></tr><tr><td>TItem Items</td><td>【多对多】导航属性</td></tr><tr><td>EventCallback&lt;TItem&gt; OnItemsChanged</td><td>【多对多】导航属性变化时</td></tr><tr><td>Func&lt;TItem, string&gt; DisplayText</td><td>文本框显示内容</td></tr><tr><td>string ModalTitle</td><td>弹框标题</td></tr><tr><td>int PageSize</td><td>弹框 分页，值 -1 时不分页</td></tr><tr><td>bool IsSearchText</td><td>弹框 开启文本搜索</td></tr><tr><td>RenderFragment TableHeader</td><td>弹框 表格 TR 模板</td></tr><tr><td>RenderFragment&lt;TItem&gt; TableRow</td><td>弹框 表格 TD 模板</td></tr></tbody></table><h3 id="_4-单选-多选-selecttable2-titem-tkey" tabindex="-1"><a class="header-anchor" href="#_4-单选-多选-selecttable2-titem-tkey" aria-hidden="true">#</a> 4. 单选/多选 SelectTable2&lt;TItem, TKey&gt;</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>TKey Value</td><td>值</td></tr><tr><td>EventCallback&lt;TKey&gt; OnValueChanged</td><td>值变化时</td></tr><tr><td>TItem Items</td><td>【多对多】导航属性</td></tr><tr><td>EventCallback&lt;TItem&gt; OnItemsChanged</td><td>【多对多】导航属性变化时</td></tr><tr><td>int PageSize</td><td>分页，值 -1 时不分页</td></tr><tr><td>bool IsSearchText</td><td>开启文本搜索</td></tr><tr><td>RenderFragment&lt;TItem&gt; ChildContent</td><td>内容模板</td></tr></tbody></table><h3 id="_5-弹框-adminmodal" tabindex="-1"><a class="header-anchor" href="#_5-弹框-adminmodal" aria-hidden="true">#</a> 5. 弹框 AdminModal</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>string Title</td><td>标题</td></tr><tr><td>bool Visible</td><td>是否显示</td></tr><tr><td>bool IsBackdropStatic</td><td>是否静态模式</td></tr><tr><td>bool IsKeyboard</td><td>是否接受 ESC 关闭</td></tr><tr><td>string DialogClassName</td><td>弹框样式，如：modal-sm、modal-lg、modal-xl、modal-xxl、modal-fullscreen</td></tr><tr><td>string YesButton</td><td>确认按钮</td></tr><tr><td>string CloseButton</td><td>关闭按钮</td></tr><tr><td>EventCallback&lt;TItem&gt; OnYes</td><td>确认时</td></tr><tr><td>EventCallback&lt;TItem&gt; OnClose</td><td>关闭时</td></tr><tr><td>RenderFragment ChildContent</td><td>内容模板</td></tr></tbody></table>`,53),r=[p];function c(u,k){return n(),a("div",null,r)}const g=t(i,[["render",c],["__file","AdminBlazor.html.vue"]]);export{g as default};
