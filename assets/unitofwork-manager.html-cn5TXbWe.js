import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,a as c,b as n,d as l,w as i,e as s}from"./app-Rpv4X6iX.js";const u={},k=s(`<h1 id="uowmanager-事务-✨" tabindex="-1"><a class="header-anchor" href="#uowmanager-事务-✨" aria-hidden="true">#</a> UowManager 事务 ✨</h1><p>本篇文章内容引导，如何在 asp.net core 项目中使用特性(注解) 的方式管理事务。</p><blockquote><p>UnitOfWorkManager 只可以管理 Repository 仓储对象的事务，直接 fsql.Insert&lt;T&gt;() 是不行的！！但是可以用 repository.Orm.Insert&lt;T&gt;！！repository.Orm 是特殊实现的 IFreeSql，与 当前事务保持一致。</p></blockquote><p>支持六种传播方式(propagation)，意味着跨方法的事务非常方便，并且支持同步异步：</p><ul><li>Requierd：如果当前没有事务，就新建一个事务，如果已存在一个事务中，加入到这个事务中，默认的选择。</li><li>Supports：支持当前事务，如果没有当前事务，就以非事务方法执行。</li><li>Mandatory：使用当前事务，如果没有当前事务，就抛出异常。</li><li>NotSupported：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</li><li>Never：以非事务方式执行操作，如果当前事务存在则抛出异常。</li><li>Nested：以嵌套事务方式执行。</li></ul><h2 id="第一步-引入动态代理库" tabindex="-1"><a class="header-anchor" href="#第一步-引入动态代理库" aria-hidden="true">#</a> 第一步：引入动态代理库</h2><blockquote><p>肉夹馍：https://github.com/inversionhourglass/Rougamo</p></blockquote><blockquote><p>dotnet add package Rougamo.Fody</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AttributeUsage</span><span class="token attribute-arguments"><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionalAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Rougamo<span class="token punctuation">.</span>MoAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Propagation</span> Propagation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> Propagation<span class="token punctuation">.</span>Required<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IsolationLevel</span> IsolationLevel <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token operator">=&gt;</span> m_IsolationLevel<span class="token punctuation">.</span>Value<span class="token punctuation">;</span> <span class="token keyword">set</span> <span class="token operator">=&gt;</span> m_IsolationLevel <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token class-name">IsolationLevel<span class="token punctuation">?</span></span> m_IsolationLevel<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token class-name">AsyncLocal<span class="token punctuation">&lt;</span>IServiceProvider<span class="token punctuation">&gt;</span></span> m_ServiceProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncLocal<span class="token punctuation">&lt;</span>IServiceProvider<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetServiceProvider</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> serviceProvider<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> m_ServiceProvider<span class="token punctuation">.</span>Value <span class="token operator">=</span> serviceProvider<span class="token punctuation">;</span>

    <span class="token class-name">IUnitOfWork</span> _uow<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEntry</span><span class="token punctuation">(</span><span class="token class-name">MethodContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> uowManager <span class="token operator">=</span> m_ServiceProvider<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _uow <span class="token operator">=</span> uowManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Propagation<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_IsolationLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnExit</span><span class="token punctuation">(</span><span class="token class-name">MethodContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Task</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsAssignableFrom</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>RealReturnType<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>Task<span class="token punctuation">)</span>context<span class="token punctuation">.</span>ReturnValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ContinueWith</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>Exception <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> _uow<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> _uow<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">finally</span>
            <span class="token punctuation">{</span>
                _uow<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>UnitOfWorkManager 成员</th><th>说明</th></tr></thead><tbody><tr><td>IUnitOfWork Current</td><td>返回当前的工作单元</td></tr><tr><td>void Binding(repository)</td><td>将仓储的事务交给它管理</td></tr><tr><td>IUnitOfWork Begin(propagation, isolationLevel)</td><td>创建工作单元</td></tr></tbody></table><h2 id="第二步-配置-startup-cs-注入、中间件" tabindex="-1"><a class="header-anchor" href="#第二步-配置-startup-cs-注入、中间件" aria-hidden="true">#</a> 第二步：配置 Startup.cs 注入、中间件</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//Startup.cs</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>fsql<span class="token punctuation">)</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span><span class="token function">AddFreeRepository</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Startup</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//批量注入 Service</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IWebHostEnvironment</span> env<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        TransactionalAttribute<span class="token punctuation">.</span><span class="token function">SetServiceProvider</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>RequestServices<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三步-在-controller-或者-service-或者-repository-中使用事务特性" tabindex="-1"><a class="header-anchor" href="#第三步-在-controller-或者-service-或者-repository-中使用事务特性" aria-hidden="true">#</a> 第三步：在 Controller 或者 Service 或者 Repository 中使用事务特性</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SongService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> _repoSong<span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Detail<span class="token punctuation">&gt;</span></span> _repoDetail<span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">ISongRepository</span> _repoSong2<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">SongService</span><span class="token punctuation">(</span><span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> repoSong<span class="token punctuation">,</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Detail<span class="token punctuation">&gt;</span></span> repoDetail<span class="token punctuation">,</span> <span class="token class-name">ISongRepository</span> repoSong2<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _repoSong <span class="token operator">=</span> repoSong<span class="token punctuation">;</span>
        _repoDetail <span class="token operator">=</span> repoDetail<span class="token punctuation">;</span>
        _repoSong2 <span class="token operator">=</span> repoSong2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Transactional</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//这里 _repoSong、_repoDetail、_repoSong2 所有操作都是一个工作单元</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">Test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Transactional</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Propagation <span class="token operator">=</span> Propagation<span class="token punctuation">.</span>Nested<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//嵌套事务，新的（不使用 Test1 的事务）</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//这里 _repoSong、_repoDetail、_repoSong2 所有操作都是一个工作单元</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是不是进方法就开事务呢？</p><p>不一定是真实事务，有可能是虚的，就是一个假的 unitofwork（不带事务）</p><p>也有可能是延用上一次的事务</p><p>也有可能是新开事务，具体要看传播模式</p><h2 id="重写仓储实现" tabindex="-1"><a class="header-anchor" href="#重写仓储实现" aria-hidden="true">#</a> 重写仓储实现</h2><p>以上使用的是泛型仓储，那我们如果是重写一个仓储 如何保持和<code>UnitOfWorkManager</code>同一个事务呢。 继承现有的<code>DefaultRepository&lt;,&gt;</code>仓储，实现自定义的仓储<code>SongRepository.cs</code>,</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SongRepository</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DefaultRepository<span class="token punctuation">&lt;</span>Song<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">ISongRepository</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">SongRepository</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManager</span> uowm<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>uowm<span class="token punctuation">?.</span>Orm<span class="token punctuation">,</span> uowm<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> <span class="token function">GetSongs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Select<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中接口。<code>ISongRepository.cs</code></p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ISongRepository</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Song<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> <span class="token function">GetSongs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 startup.cs 注入此服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISongRepository<span class="token punctuation">,</span> SongRepository<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="freesql-cloud-如何使用-unitofworkmanager" tabindex="-1"><a class="header-anchor" href="#freesql-cloud-如何使用-unitofworkmanager" aria-hidden="true">#</a> FreeSql.Cloud 如何使用 UnitOfWorkManager？</h2>`,27),r=s(`<hr><p>以 DbEnum 为例定义 FreeSqlCloud 对象如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">DbEnum</span> <span class="token punctuation">{</span> db1<span class="token punctuation">,</span> db2 <span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FreeSqlCloud</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">FreeSqlCloud<span class="token punctuation">&lt;</span>DbEnum<span class="token punctuation">&gt;</span></span></span> <span class="token comment">//DbEnum 换成 string 就是多租户管理</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">FreeSqlCloud</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">FreeSqlCloud</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> distributeKey<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>distributeKey<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">FreeSqlCloud</span> Cloud <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token range operator">..</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终呈现的 AOP 事务代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">RepositoryCloud<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">UserRepository</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManagerCloud</span> uowm<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>DbEnum<span class="token punctuation">.</span>db3<span class="token punctuation">,</span> uowm<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IUserService</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span> m_repo1<span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">BaseRepository<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span> m_repo2<span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">UserRepository</span> m_repo3<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">UserService</span><span class="token punctuation">(</span><span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span> repo1<span class="token punctuation">,</span> <span class="token class-name">BaseRepository<span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span> repo2<span class="token punctuation">,</span> <span class="token class-name">UserRepository</span> repo3<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        m_repo1 <span class="token operator">=</span> repo1<span class="token punctuation">;</span> <span class="token comment">//db1</span>
        m_repo2 <span class="token operator">=</span> repo2<span class="token punctuation">;</span> <span class="token comment">//db1</span>
        m_repo3 <span class="token operator">=</span> repo3<span class="token punctuation">;</span> <span class="token comment">//db3</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Transactional</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DbEnum<span class="token punctuation">.</span>db1<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Transactional</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DbEnum<span class="token punctuation">.</span>db3<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//debugger</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>约定好 IBaseRepository&lt;T&gt; 默认是 db1 的仓储实现，注入如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>Cloud<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注入 FreeSqlCloud</span>
    services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>provider <span class="token operator">=&gt;</span> Cloud<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>DbEnum<span class="token punctuation">.</span>db1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注入 IFreeSql</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkManagerCloud<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    services<span class="token punctuation">.</span><span class="token function">AddScoped</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IBaseRepository<span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">RepositoryCloud<span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//default: db1</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> repositoryType <span class="token keyword">in</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">User</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span><span class="token function">GetTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>IsAbstract <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IBaseRepository</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsAssignableFrom</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        services<span class="token punctuation">.</span><span class="token function">AddScoped</span><span class="token punctuation">(</span>repositoryType<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>UnitOfWorkManagerCloud、RepositoryCloud、TransactionalAttribute 是我们需要实现的部分：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">UnitOfWorkManagerCloud</span>
<span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> UnitOfWorkManager<span class="token punctuation">&gt;</span></span> m_managers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> UnitOfWorkManager<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">FreeSqlCloud</span> m_cloud<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">UnitOfWorkManagerCloud</span><span class="token punctuation">(</span><span class="token class-name">FreeSqlCloud</span> cloud<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        m_cloud <span class="token operator">=</span> cloud<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name">UnitOfWorkManager</span> <span class="token function">GetUnitOfWorkManager</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> db<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m_managers<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> uowm<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
            m_managers<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> uowm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UnitOfWorkManager</span><span class="token punctuation">(</span>m_cloud<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> uowm<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> uowm <span class="token keyword">in</span> m_managers<span class="token punctuation">.</span>Values<span class="token punctuation">)</span> uowm<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m_managers<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">IUnitOfWork</span> <span class="token function">Begin</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> db<span class="token punctuation">,</span> <span class="token class-name">Propagation</span> propagation <span class="token operator">=</span> Propagation<span class="token punctuation">.</span>Required<span class="token punctuation">,</span> <span class="token class-name">IsolationLevel<span class="token punctuation">?</span></span> isolationLevel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">GetUnitOfWorkManager</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span>propagation<span class="token punctuation">,</span> isolationLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">RepositoryCloud<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DefaultRepository<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">class</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">RepositoryCloud</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManagerCloud</span> uomw<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span>DbEnum<span class="token punctuation">.</span>db1<span class="token punctuation">,</span> uomw<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">//DI</span>
    <span class="token keyword">public</span> <span class="token function">RepositoryCloud</span><span class="token punctuation">(</span><span class="token class-name">DbEnum</span> db<span class="token punctuation">,</span> <span class="token class-name">UnitOfWorkManagerCloud</span> uomw<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span>uomw<span class="token punctuation">.</span><span class="token function">GetUnitOfWorkManager</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">RepositoryCloud</span><span class="token punctuation">(</span><span class="token class-name">UnitOfWorkManager</span> uomw<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>uomw<span class="token punctuation">.</span>Orm<span class="token punctuation">,</span> uomw<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        uomw<span class="token punctuation">.</span><span class="token function">Binding</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AttributeUsage</span><span class="token attribute-arguments"><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">,</span> AllowMultiple <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionalAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Rougamo<span class="token punctuation">.</span>MoAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Propagation</span> Propagation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> Propagation<span class="token punctuation">.</span>Required<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IsolationLevel</span> IsolationLevel <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token operator">=&gt;</span> m_IsolationLevel<span class="token punctuation">.</span>Value<span class="token punctuation">;</span> <span class="token keyword">set</span> <span class="token operator">=&gt;</span> m_IsolationLevel <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token class-name">IsolationLevel<span class="token punctuation">?</span></span> m_IsolationLevel<span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> <span class="token class-name">DbEnum</span> m_db<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">TransactionalAttribute</span><span class="token punctuation">(</span><span class="token class-name">DbEnum</span> db<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        m_db <span class="token operator">=</span> db<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token class-name">AsyncLocal<span class="token punctuation">&lt;</span>IServiceProvider<span class="token punctuation">&gt;</span></span> m_ServiceProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncLocal<span class="token punctuation">&lt;</span>IServiceProvider<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetServiceProvider</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> serviceProvider<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> m_ServiceProvider<span class="token punctuation">.</span>Value <span class="token operator">=</span> serviceProvider<span class="token punctuation">;</span>

    <span class="token class-name">IUnitOfWork</span> _uow<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEntry</span><span class="token punctuation">(</span><span class="token class-name">MethodContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> uowManager <span class="token operator">=</span> m_ServiceProvider<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkManagerCloud<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _uow <span class="token operator">=</span> uowManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span>m_db<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Propagation<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_IsolationLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnExit</span><span class="token punctuation">(</span><span class="token class-name">MethodContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Task</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsAssignableFrom</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>RealReturnType<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>Task<span class="token punctuation">)</span>context<span class="token punctuation">.</span>ReturnValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ContinueWith</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">_OnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>Exception <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> _uow<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> _uow<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">finally</span>
            <span class="token punctuation">{</span>
                _uow<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function d(v,m){const a=p("RouterLink");return e(),o("div",null,[k,c("p",null,[n("注意：如果是"),l(a,{to:"/guide/multi-tenancy.html#%E6%96%B9%E6%A1%88%E4%B8%89-%E6%8C%89%E7%A7%9F%E6%88%B7%E5%88%86%E5%BA%93"},{default:i(()=>[n("多租户分库场景")]),_:1}),n("，请直接使用上面的方案，多租户同一请求大部分都只操作一个数据库，只需要提前将 FreeSqlCloud 对象 Change 切换好。")]),r])}const g=t(u,[["render",d],["__file","unitofwork-manager.html.vue"]]);export{g as default};
