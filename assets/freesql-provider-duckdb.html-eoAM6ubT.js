import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as d,b as t,d as l,e as s,f as n,r as o,o as p}from"./app-IRl7VZ76.js";const h={};function u(k,i){const e=o("RouteLink");return p(),r("div",null,[i[32]||(i[32]=d(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>DuckDB 是一款进程内分析数据库，它可以在无需维护分布式多服务器系统的情况下处理出人意料的大型数据集。</p><p>DuckDB has two configurable options for concurrency:</p><ul><li>One process can both read and write to the database.</li><li>Multiple processes can read from the database, but no processes can write (access_mode = &#39;READ_ONLY&#39;).</li></ul><p><a href="https://duckdb.org/docs/" target="_blank" rel="noopener noreferrer">DuckDB | 官网 </a></p><h2 id="安装包" tabindex="-1"><a class="header-anchor" href="#安装包"><span>安装包</span></a></h2><p>FreeSql.Provider.Duckdb</p><p>.NET CLI</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FreeSql.Provider.Duckdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Package Manager</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Install-Package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FreeSql.Provider.Duckdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> IFreeSql</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fsql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">FreeSql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">FreeSqlBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseConnectionString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">FreeSql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">DataType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">DuckDB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DataSource = train_services.db&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseMonitorCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">cmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$&quot;Sql：{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">cmd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">CommandText</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseAutoSyncStructure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//自动创建表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖的第三方 ado.net 驱动源代码：https://github.com/Giorgi/DuckDB.NET</p><table><thead><tr><th>Connection String</th><th>Description</th></tr></thead><tbody><tr><td>DataSource = :memory:</td><td>Connect to a new in-memory database</td></tr><tr><td>DataSource = :memory:?cache=shared</td><td>Connect to a shared, in-memory database</td></tr><tr><td>DataSource = train_services.db</td><td>Connect to train_services.db</td></tr><tr><td>DataSource = train_services.db;ACCESS_MODE=READ_ONLY</td><td>Connect to train_services.db, make connection read-only</td></tr><tr><td>DataSource = :memory:;threads=8;ACCESS_MODE=READ_ONLY</td><td>Connect to a new in-memory database, limit threads to 8, make connection read-only</td></tr><tr><td>DataSource = train_services.db;ACCESS_MODE=READ_ONLY;memory_limit=10GB</td><td>Connect to train_services.db, make connection read-only, limit RAM usage to 10GB</td></tr></tbody></table><h2 id="类型映射" tabindex="-1"><a class="header-anchor" href="#类型映射"><span>类型映射</span></a></h2>`,16)),t("table",null,[i[28]||(i[28]=t("thead",null,[t("tr",null,[t("th",null,"CSharp"),t("th",null,"DuckDB"),t("th",null,"说明")])],-1)),t("tbody",null,[i[4]||(i[4]=t("tr",null,[t("td",null,"bool/bool?"),t("td",null,"BOOLEAN"),t("td",null,"logical boolean (true/false)")],-1)),i[5]||(i[5]=t("tr",null,[t("td",null,"sbyte/sbyte?"),t("td",null,"TINYINT"),t("td",null,"signed one-byte integer")],-1)),i[6]||(i[6]=t("tr",null,[t("td",null,"short/short?"),t("td",null,"SMALLINT"),t("td",null,"signed two-byte integer")],-1)),i[7]||(i[7]=t("tr",null,[t("td",null,"int/int?"),t("td",null,"INTEGER"),t("td",null,"signed four-byte integer")],-1)),i[8]||(i[8]=t("tr",null,[t("td",null,"long/long?"),t("td",null,"BIGINT"),t("td",null,"signed eight-byte integer")],-1)),i[9]||(i[9]=t("tr",null,[t("td",null,"byte/byte?"),t("td",null,"UTINYINT"),t("td")],-1)),i[10]||(i[10]=t("tr",null,[t("td",null,"ushort/ushort?"),t("td",null,"USMALLINT"),t("td")],-1)),i[11]||(i[11]=t("tr",null,[t("td",null,"uint/uint?"),t("td",null,"UINTEGER"),t("td")],-1)),i[12]||(i[12]=t("tr",null,[t("td",null,"ulong/ulong?"),t("td",null,"UBIGINT"),t("td")],-1)),i[13]||(i[13]=t("tr",null,[t("td",null,"double/double?"),t("td",null,"DOUBLE"),t("td",null,"double precision floating-point number (8 bytes)")],-1)),i[14]||(i[14]=t("tr",null,[t("td",null,"float/float?"),t("td",null,"FLOAT"),t("td",null,"single precision floating-point number (4 bytes)")],-1)),i[15]||(i[15]=t("tr",null,[t("td",null,"decimal/decimal?"),t("td",null,"DECIMAL(10,2)"),t("td",null,"fixed-precision number with the given width (precision) and scale")],-1)),i[16]||(i[16]=t("tr",null,[t("td",null,"TimeSpan/TimeSpan?"),t("td",null,"TIME"),t("td",null,"time of day (no time zone)")],-1)),i[17]||(i[17]=t("tr",null,[t("td",null,"DateTime/DateTime?"),t("td",null,"TIMESTAMP"),t("td",null,"combination of time and date")],-1)),i[18]||(i[18]=t("tr",null,[t("td",null,"TimeOnly/TimeOnly?"),t("td",null,"TIME"),t("td")],-1)),i[19]||(i[19]=t("tr",null,[t("td",null,"DateOnly/DateOnly?"),t("td",null,"DATE"),t("td",null,"calendar date (year, month day)")],-1)),i[20]||(i[20]=t("tr",null,[t("td",null,"byte[]"),t("td",null,"BLOB"),t("td",null,"variable-length binary data")],-1)),i[21]||(i[21]=t("tr",null,[t("td",null,"string"),t("td",null,"VARCHAR(255)"),t("td",null,"variable-length character string")],-1)),i[22]||(i[22]=t("tr",null,[t("td",null,"char"),t("td",null,"CHAR(1)"),t("td")],-1)),i[23]||(i[23]=t("tr",null,[t("td",null,"Guid/Guid?"),t("td",null,"UUID"),t("td",null,"UUID data type")],-1)),i[24]||(i[24]=t("tr",null,[t("td",null,"BitArray"),t("td",null,"BIT"),t("td",null,"string of 1s and 0s")],-1)),i[25]||(i[25]=t("tr",null,[t("td",null,"BigInteger/BigInteger?"),t("td",null,"HUGEINT"),t("td",null,"signed sixteen-byte integer")],-1)),i[26]||(i[26]=t("tr",null,[t("td",null,"T[]"),t("td",null,"ARRAY/LIST"),t("td",null,"如 int[]、string[]，不能是可空 int?[]")],-1)),t("tr",null,[t("td",null,[i[1]||(i[1]=l("class + ")),s(e,{to:"/guide/type-mapping.html#json"},{default:n(()=>i[0]||(i[0]=[l("JsonMap")])),_:1})]),i[2]||(i[2]=t("td",null,"STRUCT",-1)),i[3]||(i[3]=t("td",null,"{'i': 42, 'j': 'a'}",-1))]),i[27]||(i[27]=t("tr",null,[t("td",null,"Dictionary<TKey, TValue>"),t("td",null,"MAP"),t("td",null,"map([1, 2], ['a', 'b'])")],-1))])]),t("blockquote",null,[t("p",null,[i[30]||(i[30]=l("自定义映射，请移步")),s(e,{to:"/guide/type-mapping.html"},{default:n(()=>i[29]||(i[29]=[l("【类型映射】")])),_:1}),i[31]||(i[31]=l("文档。"))])])])}const y=a(h,[["render",u],["__file","freesql-provider-duckdb.html.vue"]]),A=JSON.parse('{"path":"/guide/freesql-provider-duckdb.html","title":"DuckDB（嵌入式 OLAP）","lang":"zh-CN","frontmatter":{"title":"DuckDB（嵌入式 OLAP）","description":"介绍 DuckDB 是一款进程内分析数据库，它可以在无需维护分布式多服务器系统的情况下处理出人意料的大型数据集。 DuckDB has two configurable options for concurrency: One process can both read and write to the database. Multiple proce...","head":[["meta",{"property":"og:url","content":"https://freesql.net/guide/freesql-provider-duckdb.html"}],["meta",{"property":"og:site_name","content":"FreeSql"}],["meta",{"property":"og:title","content":"DuckDB（嵌入式 OLAP）"}],["meta",{"property":"og:description","content":"介绍 DuckDB 是一款进程内分析数据库，它可以在无需维护分布式多服务器系统的情况下处理出人意料的大型数据集。 DuckDB has two configurable options for concurrency: One process can both read and write to the database. Multiple proce..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T10:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T10:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DuckDB（嵌入式 OLAP）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-16T10:00:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"nicye\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://freesql.net/atom.xml","title":"FreeSql Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://freesql.net/feed.json","title":"FreeSql JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://freesql.net/rss.xml","title":"FreeSql RSS Feed"}]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"安装包","slug":"安装包","link":"#安装包","children":[]},{"level":2,"title":"声明","slug":"声明","link":"#声明","children":[]},{"level":2,"title":"类型映射","slug":"类型映射","link":"#类型映射","children":[]}],"git":{"createdTime":1723886828000,"updatedTime":1737021600000,"contributors":[{"name":"2881099","username":"2881099","email":"2881099@qq.com","commits":5,"url":"https://github.com/2881099"},{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mister-Hope"}]},"readingTime":{"minutes":1.35,"words":406},"filePathRelative":"guide/freesql-provider-duckdb.md","localizedDate":"2024年8月17日","autoDesc":true}');export{y as comp,A as data};
