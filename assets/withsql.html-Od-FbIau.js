import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-G3LHUkGk.js";const p={},e=t(`<h1 id="withsql" tabindex="-1"><a class="header-anchor" href="#withsql" aria-hidden="true">#</a> WithSql</h1><h2 id="withsql-自定义-sql" tabindex="-1"><a class="header-anchor" href="#withsql-自定义-sql" aria-hidden="true">#</a> WithSql 自定义 SQL</h2><p>定义实体类</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClass</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> No <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;BIRTH_DAY&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Point <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Sex<span class="token punctuation">?</span></span> Sex <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Sex</span> <span class="token punctuation">{</span> Boy<span class="token punctuation">,</span> Girl <span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestClssDto</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ID <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> Birthday <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不同的查询方式。</p><ul><li>返回<code>DataTable</code></li><li>返回<code>List&lt;Tuplue&gt;</code> 即<code>List&lt;(string,string)&gt;</code>元组</li><li>返回<code>List&lt;object&gt;</code> 且能支持分页</li><li>返回<code>List&lt;TestClassDto&gt;</code>且能支持分页</li></ul><h3 id="_1-返回-datatable" tabindex="-1"><a class="header-anchor" href="#_1-返回-datatable" aria-hidden="true">#</a> 1.返回 DataTable</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt1 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;ID, Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-返回-datatable" tabindex="-1"><a class="header-anchor" href="#_2-返回-datatable" aria-hidden="true">#</a> 2.返回 DataTable</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">DataTable</span> dt2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToDataTable</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-返回list-tuplue-即list-string-string-元组" tabindex="-1"><a class="header-anchor" href="#_3-返回list-tuplue-即list-string-string-元组" aria-hidden="true">#</a> 3.返回<code>List&lt;Tuplue&gt;</code> 即<code>List&lt;(string,string)&gt;</code> 元组</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> _fsql
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID, Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-返回list-object" tabindex="-1"><a class="header-anchor" href="#_4-返回list-object" aria-hidden="true">#</a> 4.返回<code>List&lt;object&gt;</code></h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list2 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-返回list-object-且能支持分页" tabindex="-1"><a class="header-anchor" href="#_5-返回list-object-且能支持分页" aria-hidden="true">#</a> 5.返回<code>List&lt;object&gt;</code> 且能支持分页</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list3 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span> Age
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>
<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-返回list-testclassdto-且能支持分页" tabindex="-1"><a class="header-anchor" href="#_6-返回list-testclassdto-且能支持分页" aria-hidden="true">#</a> 6.返回<code>List&lt;TestClassDto&gt;</code>且能支持分页</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list4 <span class="token operator">=</span> _fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;select * from TestClass &quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WhereIf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;1=1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;ID DESC&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestClssDto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ID,Age,BIRTH_DAY as Birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span>Age<span class="token punctuation">,</span>BIRTH_DAY <span class="token keyword">as</span> Birthday
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> TestClass <span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ID <span class="token keyword">DESC</span>
<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通过-withsql-tosql-实现-union-all-查询方法" tabindex="-1"><a class="header-anchor" href="#通过-withsql-tosql-实现-union-all-查询方法" aria-hidden="true">#</a> 通过 WithSql + ToSQL 实现 Union ALL 查询方法</h2><h3 id="_1、二次-iselect-查询-withsql-使用多次-等于-union-all-查询" tabindex="-1"><a class="header-anchor" href="#_1、二次-iselect-查询-withsql-使用多次-等于-union-all-查询" aria-hidden="true">#</a> 1、二次 ISelect 查询：WithSql 使用多次，等于 UNION ALL 查询</h3><p>WithSql 使用多次为 UNION ALL 查询，所以我们可以利用 ISelect.ToSql(FieldAliasOptions.AsProperty) 得到生成的 SQL，如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tb_topic<span class="token punctuation">\`</span></span> a
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb

<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>

<span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tb_topic<span class="token punctuation">\`</span></span> a
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、跨分表查询-astable-相同实体多次操作-等于-union-all-查询" tabindex="-1"><a class="header-anchor" href="#_2、跨分表查询-astable-相同实体多次操作-等于-union-all-查询" aria-hidden="true">#</a> 2、跨分表查询：AsTable 相同实体多次操作，等于 Union ALL 查询</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;table_1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AsTable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> oldname<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;table_2&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_1&quot;</span> a<span class="token punctuation">)</span> ftb
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> as1 <span class="token keyword">FROM</span> <span class="token string">&quot;table_2&quot;</span> a<span class="token punctuation">)</span> ftb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、利用-tosql-拼接新的-sql-使用-iado-执行" tabindex="-1"><a class="header-anchor" href="#_3、利用-tosql-拼接新的-sql-使用-iado-执行" aria-hidden="true">#</a> 3、利用 ToSql 拼接新的 SQL，使用 IAdo 执行</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">1001</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1200</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">CommandFluent</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">sql1</span><span class="token punctuation">}</span></span><span class="token string"> UNION ALL </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">sql2</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ExecuteDataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分页问题" tabindex="-1"><a class="header-anchor" href="#分页问题" aria-hidden="true">#</a> 分页问题</h2><p>Union All 之后 如果直接 分页会有一个问题。请看具体示例</p><p>多次 WithSql + Page 存在问题：每个 WithSql 内都有一个 Page 分页</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;yyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
        <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tb_topic<span class="token punctuation">\`</span></span> a
        <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%xxx%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a
    <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb

    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>

    <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
        <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tb_topic<span class="token punctuation">\`</span></span> a
        <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%yyy%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> a
    <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> ftb

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多个 sql union all 使用 withsql，直接 Page 分页，会导致每个子表都生效，子表都生成分页。</p><p>WithSql 可以和 AsTable 实现分表的功能。</p><p>分表跨表查询的时候，分页是要向每个子表（即每个 WithSql 中的 SQL 分页）都生效。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h3><p>多次 withsql ，如需分页，需要按下面的二步操作</p><ul><li>第一步：通过 witsql，将二个 sql 组成一个 sql。</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &gt; 11&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM tb_topic where id &lt; 10&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上生成的 UOION ALL 的 sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb

    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>

    <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第二步：之后 调用 Page 则是通过 Union ALL 后的结果上分页</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> sql2 <span class="token operator">=</span> g<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Clicks<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>TypeGuid<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>Title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>CreateTime<span class="token punctuation">\`</span></span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">11</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb

    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>

    <span class="token keyword">SELECT</span>  <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_topic <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">)</span> a<span class="token punctuation">)</span> ftb <span class="token punctuation">)</span> a
<span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","withsql.html.vue"]]);export{r as default};
