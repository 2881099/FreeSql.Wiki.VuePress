import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-KvjneylS.js";const i={},u=e(`<h1 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h1><h3 id="_1、如何监视-sql" tabindex="-1"><a class="header-anchor" href="#_1、如何监视-sql" aria-hidden="true">#</a> 1、如何监视 SQL？</h3><p>方法一：UseMonitorCommand + UseNoneCommandParameter</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Sql：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">cmd<span class="token punctuation">.</span>CommandText</span><span class="token punctuation">}</span></span><span class="token string">\\r\\n&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">UseNoneCommandParameter</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：Aop.CurdBefore/CurdAfter</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>CurdAfter <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>ElapsedMilliseconds <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Sql：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Sql</span><span class="token punctuation">}</span></span><span class="token string">\\r\\n&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2、mysql-enum-映射" tabindex="-1"><a class="header-anchor" href="#_2、mysql-enum-映射" aria-hidden="true">#</a> 2、MySql Enum 映射</h3><p>默认情况 c# 枚举会映射为 MySql Enum 类型，如果想映射为 int 在 FreeSqlBuilder Build 之后执行以下 Aop 统一处理：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>ConfigEntityProperty <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Property<span class="token punctuation">.</span>PropertyType<span class="token punctuation">.</span>IsEnum<span class="token punctuation">)</span>
    e<span class="token punctuation">.</span>ModifyResult<span class="token punctuation">.</span>MapType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">int</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3、多个-ifreesql-实例-如何注入使用" tabindex="-1"><a class="header-anchor" href="#_3、多个-ifreesql-实例-如何注入使用" aria-hidden="true">#</a> 3、多个 IFreeSql 实例，如何注入使用？</h3>`,12),r={href:"https://github.com/dotnetcore/FreeSql/issues/44",target:"_blank",rel:"noopener noreferrer"},k=e(`<hr><h3 id="_4、怎么执行-sql-返回实体列表" tabindex="-1"><a class="header-anchor" href="#_4、怎么执行-sql-返回实体列表" aria-hidden="true">#</a> 4、怎么执行 SQL 返回实体列表？</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//直接查询</span>
fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//嵌套一层做二次查询</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_5、错误-【主库】状态不可用-等待后台检查程序恢复方可使用。xxx" tabindex="-1"><a class="header-anchor" href="#_5、错误-【主库】状态不可用-等待后台检查程序恢复方可使用。xxx" aria-hidden="true">#</a> 5、错误：【主库】状态不可用，等待后台检查程序恢复方可使用。xxx</h3><p>一般是数据库连接失败，才会出现，请检查程序与数据库之间的网络。具体按 xxx 给出的提示进行排查。</p><hr><h3 id="_6、错误-【主库】对象池已释放-无法访问。" tabindex="-1"><a class="header-anchor" href="#_6、错误-【主库】对象池已释放-无法访问。" aria-hidden="true">#</a> 6、错误：【主库】对象池已释放，无法访问。</h3><p>原因一：手工调用了 fsql.Dispose，之后仍然使用它</p><p>原因二：使用了 IdleBus 管理 IFreeSql，错误的方式如下：</p><ul><li>a) 不要构建了 IFreeSql 再丢去注册</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlBulder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ib<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;key01&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fsql<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//错了，错了，错了</span>

ib<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;key01&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlBulder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//正确</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>b) 尽量每次都使用 ib.Get 获得 IFreeSql 对象(避免存对象引用)，IdleBus 内部超时释机制一时触发，再使用引用对象，就会报这个报错</li></ul><p>原因三：检查项目的系统事件，是否在异常之前触发</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span>ProcessExit <span class="token operator">+=</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> e1<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
  <span class="token comment">//记录日志</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span>CancelKeyPress <span class="token operator">+=</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> e1<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
  <span class="token comment">//记录日志</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果确定问题，可以在 FreeSqlBuilder 构建对象的时候 UseExitAutoDisposePool(false) 关闭这个机制</p><hr><h3 id="_7、错误-objectpool-get-获取超时-10-秒-。" tabindex="-1"><a class="header-anchor" href="#_7、错误-objectpool-get-获取超时-10-秒-。" aria-hidden="true">#</a> 7、错误：ObjectPool.Get 获取超时（10 秒）。</h3><p>原因一：UnitOfWork 使用未释放，请保证程序内使用 UnitOfWork 的地方会执行 Dispose</p><p>原因二：Max Pool Size 设置过小，程序访问量过高</p><p>监视 fsql.Ado.MasterPool.Statistics，它的值：Pool: 5/100, Get wait: 0, GetAsync await: 0</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>5 为可用连接数，值为0后开始排队
100 为当前最大连接数
Get await 为同步方法获取连接的排队数量（超过10秒就会报错）
GetAsync await 为异步方法获取连接的排队数量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监视 FreeSql.UnitOfWork.DebugBeingUsed 这个静态字典，存储正在使用事务的工作单元</p><p>注意：尽量不要使用 fsql.Ado.MasterPool.Get() 或 GetAsync() 方法，否则请检查姿势。</p><hr><h3 id="_8、多平台代码参考-使用自定义-sqliteprovider-例如-sqlite-用-microsoft-data-sqlite-或者反射-mono-data-sqlite" tabindex="-1"><a class="header-anchor" href="#_8、多平台代码参考-使用自定义-sqliteprovider-例如-sqlite-用-microsoft-data-sqlite-或者反射-mono-data-sqlite" aria-hidden="true">#</a> 8、多平台代码参考,使用自定义 SqliteProvider,例如 Sqlite 用 Microsoft.Data.Sqlite 或者反射 Mono.Data.Sqlite.</h3>`,26),d={href:"https://github.com/densen2014/FreeSqlDemos/tree/master/ARM_ConsoleApp",target:"_blank",rel:"noopener noreferrer"},m=e(`<p><strong>有条件的同学直接试试 FreeSql.Provider.SqliteCore 包,使用的就是 Microsoft.Data.Sqlite 驱动.</strong></p><p>1.添加包</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FreeSql.Provider.Sqlite<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.0.100<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>Microsoft.Data.Sqlite<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6.0.3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.代码</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Microsoft<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Sqlite<span class="token punctuation">.</span>SqliteConnection</span> _database <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Microsoft<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Sqlite<span class="token punctuation">.</span>SqliteConnection</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Data Source=document.db&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">UseConnectionFactory</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _database<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FreeSql<span class="token punctuation">.</span>Sqlite<span class="token punctuation">.</span>SqliteProvider<span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">UseNoneCommandParameter</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//必须开启,因为Microsoft.Data.Sqlite内插处理有bug</span>
        <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>CommandText<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={href:"https://github.com/densen2014/FreeSqlDemos/tree/master/UWP1",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>SQLite</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> dbpath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>ApplicationData<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>LocalFolder<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> <span class="token string">&quot;sqliteSample.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SQLiteConnection</span> _database <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SQLiteConnection</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Data Source=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">dbpath</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">UseConnectionFactory</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _database<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FreeSql<span class="token punctuation">.</span>Sqlite<span class="token punctuation">.</span>SqliteProvider<span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q={href:"https://github.com/densen2014/FreeSqlDemos/tree/master/xamarinFormApps",target:"_blank",rel:"noopener noreferrer"},b=e(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>Device<span class="token punctuation">.</span>RuntimePlatform <span class="token operator">==</span> Device<span class="token punctuation">.</span>iOS <span class="token operator">||</span> Device<span class="token punctuation">.</span>RuntimePlatform <span class="token operator">==</span> Device<span class="token punctuation">.</span>Android<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">UseConnectionFactory</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DependencyService<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISQLite<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetConnectionSqlite</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FreeSql<span class="token punctuation">.</span>Sqlite<span class="token punctuation">.</span>SqliteProvider<span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">UseNoneCommandParameter</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"https://github.com/densen2014/FreeSqlDemos/blob/master/xamarinFormApps/xamarinFormApp.iOS/SQLite_iOS.cs",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/densen2014/FreeSqlDemos/blob/master/xamarinFormApps/xamarinFormApp.Android/SQLite_droid.cs",target:"_blank",rel:"noopener noreferrer"},S=e('<hr><h3 id="_9、-2-6-100-升级到-3-0-100-后无法连接-sqlserver-提示证书无效-提示证书链是由不受信任的颁发机构颁发的" tabindex="-1"><a class="header-anchor" href="#_9、-2-6-100-升级到-3-0-100-后无法连接-sqlserver-提示证书无效-提示证书链是由不受信任的颁发机构颁发的" aria-hidden="true">#</a> 9、 2.6.100 升级到 3.0.100 后无法连接 sqlserver 提示证书无效, 提示证书链是由不受信任的颁发机构颁发的.</h3><p>请尝试:</p><p>1.连接字符串里加入 &quot;Encrypt=True; TrustServerCertificate=True;&quot;</p><p>2.使用 FreeSql.Provider.SqlServerForSystem 替换 FreeSql.Provider.SqlServer</p><p>深入讨论请转到 https://github.com/dotnetcore/FreeSql/issues/992#issuecomment-1005305027</p><hr><h3 id="_10、-怎么样设置数据库超时时间" tabindex="-1"><a class="header-anchor" href="#_10、-怎么样设置数据库超时时间" aria-hidden="true">#</a> 10、 怎么样设置数据库超时时间?</h3><p><strong>全局设置</strong> 在连接字符串里设置。每个数据库写法不一样, 可以在 https://www.connectionstrings.com/ 查找 或者 在freesql声明中的build里<br> .UseMonitorCommand(cmd =&gt; cmd.CommandTimeout = 9999, null) 这样设置</p><p><strong>单个设置</strong></p><ul><li>fsql.Insert(list).CommandTimeout(500).xxxxxx</li><li>fsql.Update&lt;Entities.SysAdmin&gt;().CommandTimeout(400).xxxxxx</li><li>fsql.Select&lt;Entities.SysAdmin&gt;().CommandTimeout(300).xxxxxx</li><li>fsql.Delete&lt;Entities.SysAdmin&gt;().CommandTimeout(400).xxxxxx</li></ul><hr>',12);function x(_,y){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[s("https://github.com/dotnetcore/FreeSql/issues/44"),t(a)])]),k,n("p",null,[n("a",d,[s("arm/树莓派"),t(a)])]),m,n("p",null,[n("a",v,[s("UWP"),t(a)])]),h,n("p",null,[n("a",q,[s("Xamarin Forms,代码较多"),t(a)]),s(" 主程序,接口获取 rovider,各个平台自己实现.")]),b,n("p",null,[n("a",g,[s("iOS 部分"),t(a)])]),n("p",null,[n("a",f,[s("安卓部分"),t(a)])]),S])}const w=p(i,[["render",x],["__file","faq.html.vue"]]);export{w as default};
