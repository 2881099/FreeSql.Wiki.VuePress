import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as u,c as l,a as n,b as s,d as t,w as p,e as o}from"./app-YF-JyRr4.js";const i={},k=o(`<h1 id="级联保存" tabindex="-1"><a class="header-anchor" href="#级联保存" aria-hidden="true">#</a> 级联保存</h1><p>实践发现，N 对 1 不适合做级联保存，例如：保存 Topic 的时候把 Type 信息也保存？自下向上保存的功能太不可控了。因此下面只讲 OneToOne/OneToMany/ManyToMany 级联保存。</p><h2 id="savemany-手工保存" tabindex="-1"><a class="header-anchor" href="#savemany-手工保存" aria-hidden="true">#</a> SaveMany 手工保存</h2><p>完整保存指定的导航属性，对比表已存在的数据，计算出添加、修改、删除执行。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> type <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Type</span>
<span class="token punctuation">{</span>
    name <span class="token operator">=</span> <span class="token string">&quot;c#&quot;</span><span class="token punctuation">,</span>
    Topics <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
repo<span class="token punctuation">.</span><span class="token function">SaveMany</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token string">&quot;Topics&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//手工完整保存 Topics</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>SaveMany 仅支持 OneToMany、ManyToMany 导航属性</li><li>只保存 Topics，不向下递归追朔</li><li>当 Topics 为 Empty 时，删除 type 存在的 Topics 所有表数据</li><li>ManyToMany 完整对比保存中间表，外部表只追加不更新</li></ul><p>多对多举例：</p><ul><li>本表 Song</li><li>外部表 Tag</li><li>中间表 SongTag</li></ul><h2 id="enablecascadesave-仓储级联保存" tabindex="-1"><a class="header-anchor" href="#enablecascadesave-仓储级联保存" aria-hidden="true">#</a> EnableCascadeSave 仓储级联保存</h2>`,9),d=n("p",null,"DbContext/Repository EnableCascadeSave 可实现保存对象的时候，递归追朔其 OneToOne、OneToMany、ManyToMany 导航属性也一并保存，本文档说明实现的机制防止误用。",-1),r=n("p",null,"1、OneToOne 级联保存",-1),m=o(`<p>2、OneToMany 追加或更新子表，不删除子表已存在的数据</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//需要手工开启</span>
repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不删除 Topics 子表已存在的数据</li><li>当 Topics 属性为 Empty 时，不做任何操作</li><li>保存 Topics 的时候，还会保存 Topics[0-..] 的下级集合属性，向下 18 层</li></ul><blockquote><p>向下 18 层的意思，比如【类型】表，下面有集合属性【文章】，【文章】下面有集合属性【评论】。</p></blockquote><blockquote><p>保存【类型】表对象的时候，他会向下检索出集合属性【文章】，然后如果【文章】被保存的时候，再继续向下检索出集合属性【评论】。一起做 InsertOrUpdate 操作。</p></blockquote><p>3、ManyToMany 完整对比保存中间表，外部表只追加不更新</p><p>完整对比保存中间表，对比【多对多】中间表已存在的数据，计算出添加、修改、删除执行。</p><hr><p>测试 1：追加保存 OneToMany</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>
<span class="token keyword">class</span> <span class="token class-name">Cagetory</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> ParentId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Navigate</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>ParentId<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span> Childs <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestOneToManyParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> cts <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;分类1&quot;</span><span class="token punctuation">,</span>
            Childs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类1_1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类1_2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类1_3&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;分类2&quot;</span><span class="token punctuation">,</span>
            Childs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类2_1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类2_2&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//执行创建表，和插入数据：</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;, &#39;分类1&#39;, &#39;00000000-0000-0000-0000-000000000000&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;, &#39;分类2&#39;, &#39;00000000-0000-0000-0000-000000000000&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afcb-ed57-f6f4-0082-cb6d0c1c5f1a&#39;, &#39;分类1_1&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6e74bd8eef&#39;, &#39;分类1_2&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6f6267cc5f&#39;, &#39;分类1_3&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb7057c41d46&#39;, &#39;分类2_1&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb7156e0375e&#39;, &#39;分类2_2&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;)</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;分类11&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;分类22&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Cagetory&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39; THEN &#39;分类11&#39;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39; THEN &#39;分类22&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;,&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;))</span>
    <span class="token comment">//Childs.Clear 后没有执行删除子集合操作，说明没有做完整的对比</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;分类111&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类1_33&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;分类222&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;分类2_22&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Cagetory&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39; THEN &#39;分类111&#39;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39; THEN &#39;分类222&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;,&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;))</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afe8-ed57-f6f4-0082-cb725df546ea&#39;, &#39;分类1_33&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afe8-ed57-f6f4-0082-cb7338a6214c&#39;, &#39;分类2_22&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>测试 2：完整保存 ManyToMany</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">Song</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span> Tags <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Tag</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> TagName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> Songs <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">SongTag</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> SongId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Song</span> Song <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> TagId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Tag</span> Tag <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestManyToMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> tags <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;流行&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;80后&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;00后&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;摇滚&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ss <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;爱你一万年.mp3&quot;</span><span class="token punctuation">,</span>
            Tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;李白.mp3&quot;</span><span class="token punctuation">,</span>
            Tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//INSERT INTO &quot;Song&quot;(&quot;Id&quot;, &quot;Name&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;爱你一万年.mp3&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;李白.mp3&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;, &#39;流行&#39;), (&#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;, &#39;80后&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;, &#39;00后&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;)</span>

    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;爱你一万年.mp5&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;李白.mp5&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tags<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Song&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; THEN &#39;爱你一万年.mp5&#39;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; THEN &#39;李白.mp5&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;,&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;))</span>

    <span class="token comment">//SELECT a.&quot;SongId&quot;, a.&quot;TagId&quot;</span>
    <span class="token comment">//FROM &quot;SongTag&quot; a</span>
    <span class="token comment">//WHERE (a.&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;)</span>

    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; AND &quot;TagId&quot; = &#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90febd-6a6b-2c58-00c8-379c21acfc72&#39;, &#39;摇滚&#39;)</span>

    <span class="token comment">//SELECT a.&quot;SongId&quot;, a.&quot;TagId&quot;</span>
    <span class="token comment">//FROM &quot;SongTag&quot; a</span>
    <span class="token comment">//WHERE (a.&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;)</span>

    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; AND &quot;TagId&quot; = &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39; OR &quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; AND &quot;TagId&quot; = &#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90febd-6a6b-2c58-00c8-379c21acfc72&#39;)</span>

    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;爱你一万年.mp4&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;李白.mp4&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;)</span>
    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;)</span>

    <span class="token comment">//UPDATE &quot;Song&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; THEN &#39;爱你一万年.mp4&#39;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; THEN &#39;李白.mp4&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;,&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;))</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function v(b,g){const a=c("RouterLink");return u(),l("div",null,[k,n("blockquote",null,[n("p",null,[s("本功能是较早时期实现的，可移步了解最新的"),t(a,{to:"/guide/aggregateroot.html"},{default:p(()=>[s("《聚合根仓储》")]),_:1}),s("级联机制")])]),d,r,n("blockquote",null,[n("p",null,[s("v3.2.606+ 支持，并且支持"),t(a,{to:"/guide/delete.html#ibaserepository-%E7%BA%A7%E8%81%94%E5%88%A0%E9%99%A4"},{default:p(()=>[s("级联删除功能")]),_:1})])]),m])}const y=e(i,[["render",v],["__file","cascade-saving.html.vue"]]);export{y as default};
