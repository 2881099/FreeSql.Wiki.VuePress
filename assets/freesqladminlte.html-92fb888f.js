import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as p,a as n,b as o,d as c,e as l}from"./app-a27cff60.js";const i={},r=l(`<h1 id="freesql-adminlte" tabindex="-1"><a class="header-anchor" href="#freesql-adminlte" aria-hidden="true">#</a> FreeSql.AdminLTE</h1><p>它是 FreeSql 衍生出来的 .NETCore MVC 中间件扩展包 FreeSql.AdminLTE.Preview.dll，基于 AdminLTE 前端框架动态产生实体的增删查改界面。</p><blockquote><p>dotnet add packages FreeSql.AdminLTE.Preview</p></blockquote><p>输入：实体1、实体2、实体3</p><p>输出：后台管理的功能</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseFreeAdminLtePreview</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Config</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Role</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Menu</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">User</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Department</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Employee</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Position</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">AppLog</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">LoginLog</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">OprationLog</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FreeScheduler<span class="token punctuation">.</span>TaskInfo</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FreeScheduler<span class="token punctuation">.</span>TaskLog</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只需要传入实体，就可以生产 curd 的管理功能，是不是有些骚啊~~~</p><figure><img src="https://user-images.githubusercontent.com/16286519/187557633-351e3fbe-ae87-461f-9e45-f1c31c6a2b92.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://user-images.githubusercontent.com/16286519/187557677-5333484e-92d3-42a4-8543-6baf89814540.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>对于通用后台管理系统的生成，除了单纯的对单表 crud 操作外，我还喜欢利用导航属性的操作，比如：</p><p>1、Song、Tag 多对多场景，添加/更新 Song 时可以把 Tag 一起保存；</p><p>2、列表页，希望外键、多对多出现在过滤筛选条件；</p><p>3、列表页，希望枚举出现在过滤筛选条件；</p><p>4、删除时，级联删除所有相关数据；</p><p>等等诸如此类的繁琐操作，之所以说繁琐，是因为这些工作技术不难，属于严重的重复劳动。</p><h2 id="机制设定" tabindex="-1"><a class="header-anchor" href="#机制设定" aria-hidden="true">#</a> 机制设定</h2><p>1、添加、修改数据</p><p>中件间产生的界面包括添加、修改数据的功能，普通实体的根据属性的类型与 Html5 UI 一一映射；</p><p>比较特殊的映射规则：</p><table><thead><tr><th>c# 类型</th><th>Html5</th></tr></thead><tbody><tr><td>布尔</td><td>复选框</td></tr><tr><td>枚举</td><td>下拉选择</td></tr><tr><td>日期</td><td>日期控件</td></tr><tr><td>ManyToOne 导航属性</td><td>下拉选择</td></tr><tr><td>ManyToMany 导航属性</td><td>多选器</td></tr></tbody></table><p>等等。。。</p><p>什么情况会产生【上传文件】控件？ 有兴趣的可以了解源码，目前没有开放在外部配置。</p><hr><p>2、列表查询、过滤筛选</p><p>中件间为每个实体提供了分页列表查询，每页为20条数据；</p><p>除此外，还提供了过滤条件的支持，规则是根据导航属性（ManyToOne、ManyToMany）。比如【岗位】，内含有【部门 Department】、【员工 Employee】、【角色 Role】，则【岗位】列表页会出现按【分类】筛选的UI，详见上面的 demo 示意图，或者下载 demo 运行；</p><hr><p>3、删除数据</p><p>中件间为每个实体提供了批量删除的功能；</p><p>并且支持了复杂导航属性关系的级联删除功能，而这个功能不依赖数据库外键；</p><h2 id="下载-demo" tabindex="-1"><a class="header-anchor" href="#下载-demo" aria-hidden="true">#</a> 下载 Demo</h2><p>我们一直习惯用 sqlite 做测试库，测试完毕直接删除目录，不留垃圾数据，所以下面的 demo 不需要修改任何地方，运行时自动建库、建表；</p><p>运行环境：.net6.0</p>`,33),u={href:"https://files.cnblogs.com/files/FreeSql/freesql.adminlte.preview.zip",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"第一步：",-1),k=n("blockquote",null,[n("p",null,"dotnet restore")],-1),m=n("p",null,"第二步：",-1),f=n("blockquote",null,[n("p",null,"dotnet run")],-1);function y(h,v){const s=e("ExternalLinkIcon");return t(),p("div",null,[r,n("p",null,[n("a",u,[o("https://files.cnblogs.com/files/FreeSql/freesql.adminlte.preview.zip"),c(s)])]),d,k,m,f])}const _=a(i,[["render",y],["__file","freesqladminlte.html.vue"]]);export{_ as default};
