import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as i,a as n,b as s,d as e,e as t}from"./app-vQYFgPxv.js";const l="/assets/dotnetframwork-sqlitecore-6Vzpnck8.png",u={},r=n("h1",{id:"freesql-provider-sqlitecore",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#freesql-provider-sqlitecore","aria-hidden":"true"},"#"),s(" FreeSql.Provider.SqliteCore")],-1),d=n("code",null,"FreeSql",-1),k={href:"https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/?tabs=netcore-cli",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"Microsoft.Data.Sqlite.Core",-1),m=n("strong",null,"需要另外安装对应的bundle_xxx",-1),b=t(`<h2 id="支持的版本" tabindex="-1"><a class="header-anchor" href="#支持的版本" aria-hidden="true">#</a> 支持的版本</h2><ul><li>.NET Standard 2.0（支持.NET Framework4.6.1+/支持.NET Core 2.0+）</li><li>net6.0</li><li>SQLite（3.7 及以上版本）</li><li>Linux ARM/X86/MAUI Android/MAUI iOS等</li></ul><p>安装<code>FreeSql.Provider.SqliteCore</code>包。</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>dotnet add package FreeSql.Provider.SqliteCore
dotnet add package SQLitePCLRaw.bundle_e_sqlite3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SQLitePCLRaw.bundle_e_sqlite3</code> 不支持加密，但此方式是官方实现的<code>SQlite</code>版本，以下二选一：</p><table><thead><tr><th>捆绑</th><th>描述</th></tr></thead><tbody><tr><td>SQLitePCLRaw.bundle_e_sqlite3</td><td>在所有平台上提供一致版本的 <code>SQLite</code>。 包括 FTS4、FTS5、JSON1 和 R* 树扩展。 建议使用</td></tr><tr><td>SQLitePCLRaw.bundle_e_sqlcipher</td><td>提供 <code>SQLCipher</code> 的非官方开放源代码内部版本，<strong>支持加密</strong>。</td></tr></tbody></table><h2 id="只有-sqlitepclraw-bundle-e-sqlcipher-才支持加密" tabindex="-1"><a class="header-anchor" href="#只有-sqlitepclraw-bundle-e-sqlcipher-才支持加密" aria-hidden="true">#</a> 只有 <strong>SQLitePCLRaw.bundle_e_sqlcipher</strong> 才支持加密</h2><p>0.选择一个目录，创建一个控制台项目<code>OvOv.FreeSqlMicrosoftSqliteCore</code></p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>dotnet new console -n OvOv.FreeSqlMicrosoftSqliteCore
cd OvOv.FreeSqlMicrosoftSqliteCore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>1.安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package FreeSql.Provider.SqliteCore
dotnet <span class="token function">add</span> package SQLitePCLRaw.bundle_e_sqlcipher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>连接串直接指定Password=xxx即可</li></ol><p>创建一个类<code>DB.cs</code>,可直接通过<code>DB.sqlite</code>访问到<code>IFreeSql</code>对象</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DB</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span> sqliteLazy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token string">@&quot;Data Source=local.db;Password=123qwe&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseLazyLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>CommandText<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> fsql<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IFreeSql</span> sqlite <span class="token operator">=&gt;</span> sqliteLazy<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试加密,增加一些数据。<code>Program.cs</code>中测试</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IInsert<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span> insert <span class="token operator">=</span> DB<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insert</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Topic</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;newTitle</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">a</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> Clicks <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> affrows <span class="token operator">=</span> insert<span class="token punctuation">.</span><span class="token function">AppendData</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;affrows：&quot;</span> <span class="token operator">+</span> affrows<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> DB<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;count：&quot;</span> <span class="token operator">+</span> list<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Table</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;tb_topic_insert&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">class</span> <span class="token class-name">Topic</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Clicks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行项目</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="验证是否登录是否加密" tabindex="-1"><a class="header-anchor" href="#验证是否登录是否加密" aria-hidden="true">#</a> 验证是否登录是否加密？</h3><p>重新运行时，删除 连接串中的Password,发现无法获取数据。或使用<code>Navicat Premium</code>工具发现无法连接。</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> .UseConnectionString(FreeSql.DataType.Sqlite, @&quot;Data Source=local.db;&quot;) 
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> .UseConnectionString(FreeSql.DataType.Sqlite, @&quot;Data Source=|DataDirectory|local.db;Password=123qwe&quot;)
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>提示如下内容，但使用密码时又能正常访问数据。</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>SqliteException: SQLite Error 26: &#39;file is not a database&#39;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>相比包 <code>FreeSql.Provider.Sqlite</code>来说，目前存在一些限制，</p><h4 id="datadirectory-默认不支持" tabindex="-1"><a class="header-anchor" href="#datadirectory-默认不支持" aria-hidden="true">#</a> |DataDirectory| 默认不支持</h4><p>需要使用前，指定具体的文件夹，此处相当于指定了当前<code>dll</code>所在目录，即<code>bin/Debug/net6.0</code>。参考</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> dataSubDirectory <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>AppContext<span class="token punctuation">.</span>BaseDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">)</span>
    Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span><span class="token function">SetData</span><span class="token punctuation">(</span><span class="token string">&quot;DataDirectory&quot;</span><span class="token punctuation">,</span> dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DB</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span> sqliteLazy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> dataSubDirectory <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>AppContext<span class="token punctuation">.</span>BaseDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">)</span>
            Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span><span class="token function">SetData</span><span class="token punctuation">(</span><span class="token string">&quot;DataDirectory&quot;</span><span class="token punctuation">,</span> dataSubDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token string">@&quot;Data Source=|DataDirectory|local.db;Password=123qwe&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseLazyLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>CommandText<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> fsql<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IFreeSql</span> sqlite <span class="token operator">=&gt;</span> sqliteLazy<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),h={href:"https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/connection-strings",target:"_blank",rel:"noopener noreferrer"},g=t(`<h4 id="数学函数" tabindex="-1"><a class="header-anchor" href="#数学函数" aria-hidden="true">#</a> 数学函数</h4><p>如下函数不支持</p><ul><li>Floor</li><li>Ceiling</li><li>Log10</li><li>Pow</li><li>Sqrt</li><li>Cos</li></ul><h4 id="timespantest" tabindex="-1"><a class="header-anchor" href="#timespantest" aria-hidden="true">#</a> TimeSpanTest</h4><p>测试 类中 不通过、ulong最大值，最小值，超出范围。</p><ul><li>不支持</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Days</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      data<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span>TimeOfDay<span class="token punctuation">.</span>Days <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不支持</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Minutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      data<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>CreateTime<span class="token punctuation">.</span>TimeOfDay<span class="token punctuation">.</span>Minutes <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码" aria-hidden="true">#</a> 完整代码</h4>`,10),f={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/Database-Drivers/OvOv.FreeSqlMicrosoftSqliteCore/Program.cs",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"ios",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ios","aria-hidden":"true"},"#"),s(" iOS")],-1),q={href:"https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/xamarin#ios",target:"_blank",rel:"noopener noreferrer"},w=t(`<p><code>Microsoft.Data.Sqlite</code> 尝试自动初始化 <code>SQLitePCLRaw</code> 捆绑。 遗憾的是，由于针对 <code>Xamarin.iOS</code> 的预先 (AOT) 编译存在限制，因此尝试失败，并出现以下错误。</p><blockquote><p>需要调用 <code>SQLitePCL.raw.SetProvider()</code>。 如果使用的是捆绑包，可以通过调用 <code>SQLitePCL.Batteries.Init()</code> 来完成此操作。</p></blockquote><p>若要初始化该绑定，请在使用 <code>Microsoft.Data.Sqlite</code> 之前，将以下代码行添加到应用。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>SQLitePCL<span class="token punctuation">.</span>Batteries_V2<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即在上方定义<code>FreeSql</code>单例时，在<code>new Lazy</code>内，调用一次即可。</p><h2 id="net-framework-支持" tabindex="-1"><a class="header-anchor" href="#net-framework-支持" aria-hidden="true">#</a> .NET Framework 支持</h2><ul><li>.NETStandard2.0（支持.NET Framework4.6.1+）</li></ul><p>有二种方法支持.NET Framework(选择其中一个即可)</p><h3 id="_1-复制-net-core中的dll" tabindex="-1"><a class="header-anchor" href="#_1-复制-net-core中的dll" aria-hidden="true">#</a> 1.复制.NET Core中的dll</h3><p>创建一个.NET Core的console项目，然后安装nuget包 <code>SQLitePCLRaw.bundle_e_sqlcipher</code>，编译后生成的<code>bin\\Debug\\net5.0\\runtimes\\win-x64\\native\\e_sqlcipher.dll</code> 复制到 .net framework 4.8的项目中<code>bin/Debug/e_sqlcipher.dll</code>中</p><h3 id="_2-转换项目-建议" tabindex="-1"><a class="header-anchor" href="#_2-转换项目-建议" aria-hidden="true">#</a> 2.转换项目 <strong>（建议）</strong></h3><p>先安装好相关的包,然后右键<code>packages.config</code>,选择将<code>packages.config 迁移到PackageReference中</code>,弹出的框勾选所有包，确定即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Install-Package SQLitePCLRaw.bundle_e_sqlcipher
Install-Package FreeSql.Provider.SqliteCore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+'" alt="./images/dotnetframwork-sqlitecore.png" tabindex="0" loading="lazy"><figcaption>./images/dotnetframwork-sqlitecore.png</figcaption></figure>',14);function S(_,D){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,n("p",null,[s("FreeSql.Provider.SqliteCore是"),d,s("基于微软提供的最新的"),n("a",k,[v,e(a)]),s("驱动的实现。 "),m,s("实现加密。")]),b,n("p",null,[s("具体的链接串，请参考 "),n("a",h,[s("https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/connection-strings"),e(a)])]),g,n("ul",null,[n("li",null,[n("a",f,[s("https://github.com/luoyunchong/dotnetcore-examples/blob/master/Database-Drivers/OvOv.FreeSqlMicrosoftSqliteCore/Program.cs"),e(a)])])]),y,n("p",null,[n("a",q,[s("https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/xamarin#ios"),e(a)])]),w])}const L=p(u,[["render",S],["__file","freesql-provider-sqlitecore.html.vue"]]);export{L as default};
