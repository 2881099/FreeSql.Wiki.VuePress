import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,a as o,b as n,d as c,w as l,e as i}from"./app-CHQkJX5P.js";const u={},r=i(`<h1 id="global-filters" tabindex="-1"><a class="header-anchor" href="#global-filters" aria-hidden="true">#</a> Global Filters</h1><p>The IFreeSql base layer implements global filter functionality for <code>Select/Update/Delete</code>, which appends these settings to the SQL WHERE clauses executed.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">AsyncLocal<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> TenantId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncLocal<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span>GlobalFilter
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Apply</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITenant<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>TenantId <span class="token operator">==</span> TenantId<span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Apply</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthorTest<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span>
    
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ApplyOnly</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthorTest<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// ApplyOnly sets filters for a specific type only</span>

    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ApplyIf</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestAddEnum<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;test4&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> TenantId<span class="token punctuation">.</span>Value <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">,</span> a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> TenantId<span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ApplyIf filters apply only if the delegate&#39;s return value (second parameter) is true</span>

    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Apply</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITenant<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;test5&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>TenantId <span class="token operator">==</span> TenantId<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token named-parameter punctuation">before</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// v3.2.700 added before to place the condition at the beginning of the WHERE clause</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Apply</code> generic parameter can be set to any type, and filtering will be attempted when using <code>Select/Update/Delete</code> methods:</p><ul><li>For successful matches, additional WHERE conditions will be appended.</li><li>For failed matches, the type will be marked to prevent future matches, avoiding performance loss.</li></ul><p><code>ApplyOnly</code> specifies that the filter should only apply to a particular type.</p><h2 id="how-to-disable" tabindex="-1"><a class="header-anchor" href="#how-to-disable" aria-hidden="true">#</a> How to Disable?</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestAddEnum<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// All filters applied</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestAddEnum<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DisableGlobalFilter</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Disable filter &quot;test1&quot;</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestAddEnum<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DisableGlobalFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Disable all filters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>fsql.Update/Delete</code> methods behave similarly.</p><h2 id="tenant-fields-dynamic-values" tabindex="-1"><a class="header-anchor" href="#tenant-fields-dynamic-values" aria-hidden="true">#</a> Tenant Fields (Dynamic Values)</h2>`,10);function k(d,m){const s=t("RouterLink");return e(),p("div",null,[r,o("p",null,[n("Please refer to the documentation: "),c(s,{to:"/en/guide/multi-tenancy.html#approach-1-tenant-field-differentiation"},{default:l(()=>[n("【Multi-Tenancy - Distinguish by Tenant Field】")]),_:1})])])}const g=a(u,[["render",k],["__file","filters.html.vue"]]);export{g as default};
