import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-b95d1370.js";const i={},u=p(`<h1 id="freesql-cap事务" tabindex="-1"><a class="header-anchor" href="#freesql-cap事务" aria-hidden="true">#</a> FreeSql+CAP事务</h1><h2 id="背景描述" tabindex="-1"><a class="header-anchor" href="#背景描述" aria-hidden="true">#</a> 背景描述</h2><p>在CAP中，事务对象需要交给CAP进行提交从而在事务实现提交后对缓存消息到 Broker 的 Flush 动作，而目前的Orm大部分都有自己的事务管理对象进行事务的提交。CAP官方直接原生支持使用 ADO.NET 和 EntityFrameworkCore 进行事务集成，而对于第三方ORM本文提供了一种扩展用以集成的示例。</p><p>接入有二种方式</p><ul><li>安装<code>FreeSql</code>包</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package FreeSql
dotnet <span class="token function">add</span> package FreeSql.DbContext
dotnet <span class="token function">add</span> package FreeSql.Provider.MySqlConnector
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安装<code>CAP</code>相关包</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package Savorboard.CAP.InMemoryMessageQueue
dotnet <span class="token function">add</span> package DotNetCore.CAP.MySql
dotnet <span class="token function">add</span> package DotNetCore.CAP.Dashboard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务" tabindex="-1"><a class="header-anchor" href="#服务" aria-hidden="true">#</a> 服务</h2><ul><li>appsetttings.json</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;ConnectionStrings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;MySql&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Data Source=localhost;Port=3306;User ID=root;Password=root;Initial Catalog=lincms;Charset=utf8mb4;SslMode=none;Max pool size=1;Connection LifeTime=20&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置相关服务</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token class-name">IConfigurationSection</span> mysqlSelection <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ConnectionStrings:MySql&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span>mysqlSelection<span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseNameConvert</span><span class="token punctuation">(</span>NameConvertType<span class="token punctuation">.</span>PascalCaseToUnderscoreWithLower<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">UseMonitorCommand</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>CommandText <span class="token operator">+</span> <span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>fsql<span class="token punctuation">)</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span><span class="token function">AddFreeRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitOfWorkManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),r={href:"https://cap.dotnetcore.xyz/user-guide/zh/storage/mysql/",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>至少你要配置一个消息队列和一个事件存储（UseMySql）</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>  services<span class="token punctuation">.</span><span class="token function">AddCap</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>   
        x<span class="token punctuation">.</span><span class="token function">UseInMemoryMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span><span class="token function">UseMySql</span><span class="token punctuation">(</span>opt<span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token comment">//MySqlOptions</span>
            opt<span class="token punctuation">.</span>ConnectionString <span class="token operator">=</span> mysqlSelection<span class="token punctuation">.</span>Value
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// x.UseXXX ...</span>
         x<span class="token punctuation">.</span><span class="token function">UseDashboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),d={href:"http://localhost:xxx/cap",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一" aria-hidden="true">#</a> 方式一</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CapUnitOfWorkExtensions</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Flush</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">ICapTransaction</span> capTransaction<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            capTransaction<span class="token punctuation">?.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetMethod</span><span class="token punctuation">(</span><span class="token string">&quot;Flush&quot;</span><span class="token punctuation">,</span> BindingFlags<span class="token punctuation">.</span>Instance <span class="token operator">|</span> BindingFlags<span class="token punctuation">.</span>NonPublic<span class="token punctuation">)</span><span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>capTransaction<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">ICapTransaction</span> <span class="token function">BeginTransaction</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IUnitOfWork</span> unitOfWork<span class="token punctuation">,</span> <span class="token class-name">ICapPublisher</span> publisher<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> autoCommit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//看了源码，换了新的写法，换不同的数据库，就需要手动修改这段代码了（MySqlCapTransaction）</span>
            <span class="token comment">//publisher.Transaction.Value = (ICapTransaction)publisher.ServiceProvider.GetService(typeof(ICapTransaction));新版本只能得到null</span>
            publisher<span class="token punctuation">.</span>Transaction<span class="token punctuation">.</span>Value <span class="token operator">=</span> ActivatorUtilities<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateInstance</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MySqlCapTransaction<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>publisher<span class="token punctuation">.</span>ServiceProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> publisher<span class="token punctuation">.</span>Transaction<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span>unitOfWork<span class="token punctuation">.</span><span class="token function">GetOrBeginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> autoCommit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Commit</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">ICapTransaction</span> capTransaction<span class="token punctuation">,</span> <span class="token class-name">IUnitOfWork</span> unitOfWork<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            unitOfWork<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            capTransaction<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用方式</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Controller</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;~/freesql/unitofwork&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> <span class="token function">FreeSqlUnitOfWorkManagerTransaction</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Book<span class="token punctuation">&gt;</span></span> repo<span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">UnitOfWorkManager</span> unitOfWorkManager<span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">ICapPublisher</span> capBus
    <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">DateTime</span> now <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IUnitOfWork</span> uow <span class="token operator">=</span> unitOfWorkManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ICapTransaction</span> trans <span class="token operator">=</span> uow<span class="token punctuation">.</span><span class="token function">BeginTransaction</span><span class="token punctuation">(</span>capBus<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Author <span class="token operator">=</span> <span class="token string">&quot;叶老板&quot;</span><span class="token punctuation">,</span>
                Title <span class="token operator">=</span> <span class="token string">&quot;FreeSql源码解析与实战&quot;</span><span class="token punctuation">,</span>
                Summary <span class="token operator">=</span> <span class="token string">&quot;带你了解FreeSql源码细节，掌握FreeSql的实战操作，扩展FreeSql的功能，提升你的开发效率。&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            capBus<span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span><span class="token string">&quot;freesql.time&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
            trans<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span>uow<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> now<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">NonAction</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CapSubscribe</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;freesql.time&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetTime</span><span class="token punctuation">(</span><span class="token class-name">DateTime</span> time<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;time:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Table</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Book</span> 
<span class="token punctuation">{</span>
   <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
   
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>StringLength <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Author <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>StringLength <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Summary <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>StringLength <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二" aria-hidden="true">#</a> 方式二</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FreeSqlRepositoryPatternTransaction</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">CapTransactionBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">FreeSqlRepositoryPatternTransaction</span><span class="token punctuation">(</span><span class="token class-name">IDispatcher</span> dispatcher<span class="token punctuation">,</span> <span class="token class-name">IUnitOfWork</span> uow<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>dispatcher<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Uow <span class="token operator">=</span> uow<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">IUnitOfWork</span> Uow <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> DbTransaction <span class="token operator">=&gt;</span> Uow<span class="token punctuation">.</span><span class="token function">GetOrBeginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Uow<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">Task</span> <span class="token function">CommitAsync</span><span class="token punctuation">(</span><span class="token class-name">CancellationToken</span> cancellationToken <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Uow<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">Task</span> <span class="token function">RollbackAsync</span><span class="token punctuation">(</span><span class="token class-name">CancellationToken</span> cancellationToken <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Uow<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Extensions</span>
<span class="token punctuation">{</span>
      <span class="token comment">// 注意：你可以酌情修改此扩展以支持你的使用习惯，参考下方讨论内容</span>
      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">ICapTransaction</span> <span class="token function">BeginTransaction</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IUnitOfWork</span> unitOfWork<span class="token punctuation">,</span> <span class="token class-name">ICapPublisher</span> publisher<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> autoCommit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> dispatcher <span class="token operator">=</span> publisher<span class="token punctuation">.</span>ServiceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDispatcher<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> transaction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlRepositoryPatternTransaction</span><span class="token punctuation">(</span>dispatcher<span class="token punctuation">,</span> unitOfWork<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                AutoCommit <span class="token operator">=</span> autoCommit
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> publisher<span class="token punctuation">.</span>Transaction<span class="token punctuation">.</span>Value <span class="token operator">=</span> transaction<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;~/freesql/Withtransaction&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> <span class="token function">WithTransaction</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">IBaseRepository<span class="token punctuation">&lt;</span>Book<span class="token punctuation">&gt;</span></span> repo<span class="token punctuation">,</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">UnitOfWorkManager</span> unitOfWorkManager<span class="token punctuation">,</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">ICapPublisher</span> capBus
<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">DateTime</span> now <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IUnitOfWork</span> uow <span class="token operator">=</span> unitOfWorkManager<span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ICapTransaction</span> trans <span class="token operator">=</span> uow<span class="token punctuation">.</span><span class="token function">BeginTransaction</span><span class="token punctuation">(</span>capBus<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Author <span class="token operator">=</span> <span class="token string">&quot;叶老板&quot;</span><span class="token punctuation">,</span>
            Title <span class="token operator">=</span> <span class="token string">&quot;FreeSql源码解析与实战&quot;</span><span class="token punctuation">,</span>
            Summary <span class="token operator">=</span> <span class="token string">&quot;带你了解FreeSql源码细节，掌握FreeSql的实战操作，扩展FreeSql的功能，提升你的开发效率。&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        capBus<span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span><span class="token string">&quot;freesql.time&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
        trans<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> now<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>二者区别在于后者，<code>trans.Commit()</code>不需要传递\`\`IUnitOfWork\`参数</p><h2 id="原文参考" tabindex="-1"><a class="header-anchor" href="#原文参考" aria-hidden="true">#</a> 原文参考</h2>`,10),m={href:"https://www.cnblogs.com/igeekfan/p/cap_freesql_flush.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/dotnetcore/FreeSql/discussions/1202",target:"_blank",rel:"noopener noreferrer"};function g(y,h){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[s("CAP相关服务 "),n("a",r,[s("https://cap.dotnetcore.xyz/user-guide/zh/storage/mysql/"),t(a)])])]),k,n("p",null,[s("默认情况下，你可以访问 "),n("a",d,[s("http://localhost:xxx/cap"),t(a)]),s(" 这个地址打开Dashboard。")]),v,n("ul",null,[n("li",null,[n("a",m,[s("FreeSql 接入 CAP 的实践"),t(a)])]),n("li",null,[n("a",b,[s("如何使 FreeSql 和 CAP 进行集成"),t(a)])])])])}const q=e(i,[["render",g],["__file","freesql-cap.html.vue"]]);export{q as default};
