import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as e,c,b as s,d as a,e as u,a as l}from"./app-DKdzHL9p.js";const i={},k={href:"https://github.com/dotnetcore/FreeSql/issues/1620",target:"_blank",rel:"noopener noreferrer"};function r(d,n){const t=o("ExternalLinkIcon");return e(),c("div",null,[n[2]||(n[2]=s("h1",{id:"nested-✨",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#nested-✨","aria-hidden":"true"},"#"),a(" Nested ✨")],-1)),n[3]||(n[3]=s("h2",{id:"withtempquery",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#withtempquery","aria-hidden":"true"},"#"),a(" WithTempQuery")],-1)),n[4]||(n[4]=s("p",null,"Required version: v3.2.666+",-1)),n[5]||(n[5]=s("p",null,"Combining GroupBy + WithTempQuery (nested queries) + FromQuery + UnionAll can make queries more powerful and flexible.",-1)),s("p",null,[n[1]||(n[1]=a("Note: When using multiple anonymous types with WithTempQuery in FromQuery, ensure they are not of the same type (use any property to distinguish) ")),s("a",k,[n[0]||(n[0]=a("#1620")),u(t)])]),n[6]||(n[6]=l(`<h2 id="example-1-query-the-first-record-of-each-group" tabindex="-1"><a class="header-anchor" href="#example-1-query-the-first-record-of-each-group" aria-hidden="true">#</a> Example 1: Query the First Record of Each Group</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        item <span class="token operator">=</span> a<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">RowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PartitionBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>rownum <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Tip: Supports multi-table nested queries, e.g., <code>fsql.Select&lt;User1, UserGroup1&gt;()</code></p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span><span class="token punctuation">,</span> row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span> <span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rownum<span class="token punctuation">]</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>User1<span class="token punctuation">]</span> a
    <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1000</span>
<span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>rownum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the database does not support window functions, you can use grouped nested queries:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>g <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> min <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>Id<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">From</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>min <span class="token operator">==</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> <span class="token function">min</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>min<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>User1<span class="token punctuation">]</span> a 
    <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1000</span> 
    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token punctuation">)</span> a 
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">[</span>User1<span class="token punctuation">]</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>min<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-2-nested-query-join" tabindex="-1"><a class="header-anchor" href="#example-2-nested-query-join" aria-hidden="true">#</a> Example 2: Nested Query + Join</h2><p>WithTempQuery + From&lt;T2&gt; or FromQuery(ISelect&lt;T2&gt;) can achieve unlimited joins.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        item <span class="token operator">=</span> a<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">RowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PartitionBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">//.From&lt;UserExt&gt;() // Regular join</span>
    <span class="token punctuation">.</span><span class="token function">FromQuery</span><span class="token punctuation">(</span>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserExt<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Subquery join</span>
    <span class="token comment">//.FromQuery(fsql.Select&lt;UserExt, UserGroup, xxx&gt;() // Sub multi-table join</span>
    <span class="token comment">//    .WithTempQuery((a,b,c) =&gt; new { ... }))</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>item<span class="token punctuation">.</span>Id <span class="token operator">==</span> b<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>rownum <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        user <span class="token operator">=</span> a<span class="token punctuation">.</span>item<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> a<span class="token punctuation">.</span>rownum<span class="token punctuation">,</span>
        userext <span class="token operator">=</span> b
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span><span class="token punctuation">,</span> row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span> <span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rownum<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>User1<span class="token punctuation">]</span> a 
    <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1000</span> <span class="token punctuation">)</span> a 
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Remark<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>TwoTablePartitionBy_UserExt<span class="token punctuation">]</span> a 
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span> 
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>rownum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-3-group-query-nested" tabindex="-1"><a class="header-anchor" href="#example-3-group-query-nested" aria-hidden="true">#</a> Example 3: Group Query Nested</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        user <span class="token operator">=</span> a<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">RowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PartitionBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>rownum <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">FromQuery</span><span class="token punctuation">(</span>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserExt<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>UserId <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> b<span class="token punctuation">.</span>UserId<span class="token punctuation">,</span> b<span class="token punctuation">.</span>Remark <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> b<span class="token punctuation">.</span>Key<span class="token punctuation">,</span> sum1 <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>user<span class="token punctuation">.</span>Id <span class="token operator">==</span> b<span class="token punctuation">.</span>Key<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>user<span class="token punctuation">.</span>Nickname <span class="token operator">==</span> <span class="token string">&quot;name03&quot;</span> <span class="token operator">||</span> a<span class="token punctuation">.</span>user<span class="token punctuation">.</span>Nickname <span class="token operator">==</span> <span class="token string">&quot;name02&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        user <span class="token operator">=</span> a<span class="token punctuation">.</span>user<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> a<span class="token punctuation">.</span>rownum<span class="token punctuation">,</span>
        groupby <span class="token operator">=</span> b
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span><span class="token punctuation">,</span> row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span> <span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rownum<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span><span class="token keyword">User</span><span class="token punctuation">]</span> a <span class="token punctuation">)</span> a 
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Remark<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>sum1<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>UserExt<span class="token punctuation">]</span> a 
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> 
    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Remark<span class="token punctuation">]</span> <span class="token punctuation">)</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>UserId<span class="token punctuation">]</span> 
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>rownum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">AND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token operator">=</span> N<span class="token string">&#39;name03&#39;</span> <span class="token operator">OR</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token operator">=</span> N<span class="token string">&#39;name02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-4-in-memory-data-nesting" tabindex="-1"><a class="header-anchor" href="#example-4-in-memory-data-nesting" aria-hidden="true">#</a> Example 4: In-Memory Data Nesting</h2><p>Assuming cross-database servers or cached tables, <code>WithMemory</code> allows for querying between data tables and memory.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">User1</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">User1</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">User1</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> listSql2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserGroup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">FromQuery</span><span class="token punctuation">(</span>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMemory</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> b<span class="token punctuation">.</span>GroupId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">FROM</span> <span class="token punctuation">[</span>UserGroup<span class="token punctuation">]</span> a
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>GroupId<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-5-automated-sharding-with-pagination-and-group-aggregation" tabindex="-1"><a class="header-anchor" href="#example-5-automated-sharding-with-pagination-and-group-aggregation" aria-hidden="true">#</a> Example 5: Automated Sharding with Pagination and Group Aggregation</h2><p>After automated sharding, if pagination or grouping aggregation is needed, refer to the following code:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Statistics<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>createtime<span class="token punctuation">.</span><span class="token function">BetweenEnd</span><span class="token punctuation">(</span>startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// Time field for table location</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> item <span class="token operator">=</span> a <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>item<span class="token punctuation">.</span>shareId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> total<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span>page<span class="token punctuation">,</span> dto<span class="token punctuation">.</span>limit<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>g <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span>
        Sid <span class="token operator">=</span> a<span class="token punctuation">.</span>Key<span class="token punctuation">,</span>
        Sum1 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>item<span class="token punctuation">.</span>field1<span class="token punctuation">)</span><span class="token punctuation">,</span>
        Sum2 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>item<span class="token punctuation">.</span>field2<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>shareId<span class="token punctuation">\`</span></span> as1<span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>field1<span class="token punctuation">\`</span></span> <span class="token punctuation">)</span> as3<span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>field2<span class="token punctuation">\`</span></span> <span class="token punctuation">)</span> as5 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
        <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
        <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>Statistics_2023<span class="token punctuation">\`</span></span> a 
        <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>createtime<span class="token punctuation">\`</span></span> <span class="token operator">&gt;=</span> <span class="token string">&#39;2022-01-01 00:00:00&#39;</span> <span class="token operator">AND</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>createtime<span class="token punctuation">\`</span></span> <span class="token operator">&lt;</span> <span class="token string">&#39;2023-01-14 00:00:00&#39;</span><span class="token punctuation">)</span> 
    <span class="token punctuation">)</span> ftb 
    <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
    <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">(</span> 
        <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
        <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>Statistics_2022<span class="token punctuation">\`</span></span> a 
        <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>createtime<span class="token punctuation">\`</span></span> <span class="token operator">&gt;=</span> <span class="token string">&#39;2022-01-01 00:00:00&#39;</span> <span class="token operator">AND</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>createtime<span class="token punctuation">\`</span></span> <span class="token operator">&lt;</span> <span class="token string">&#39;2023-01-14 00:00:00&#39;</span><span class="token punctuation">)</span> 
    <span class="token punctuation">)</span> ftb 
<span class="token punctuation">)</span> a 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>shareId<span class="token punctuation">\`</span></span> 
<span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-6-fromquery-with-multiple-queries-and-final-mapping" tabindex="-1"><a class="header-anchor" href="#example-6-fromquery-with-multiple-queries-and-final-mapping" aria-hidden="true">#</a> Example 6: FromQuery with Multiple Queries and Final Mapping</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> query2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitLog<span class="token punctuation">,</span> LoadPlan<span class="token punctuation">,</span> Instruction<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>LoadNo <span class="token operator">==</span> b<span class="token punctuation">.</span>LoadNo <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>UnitTransactionType <span class="token operator">==</span> <span class="token string">&quot;TO&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>InstructionNo <span class="token operator">==</span> c<span class="token punctuation">.</span>InstructionNo<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        a<span class="token punctuation">.</span>LoadNo<span class="token punctuation">,</span>
        a<span class="token punctuation">.</span>SeqNoLog<span class="token punctuation">,</span>
        c<span class="token punctuation">.</span>DeliveryInstractionStatus<span class="token punctuation">,</span>
        c<span class="token punctuation">.</span>UpTime<span class="token punctuation">,</span>
        RN <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">RowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PartitionBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>UnitId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderByDescending</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>SeqNoLog<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> query3 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Unit<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UnitLog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">FromQuery</span><span class="token punctuation">(</span>query2<span class="token punctuation">,</span> query3<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>SeqNoLog <span class="token operator">==</span> b<span class="token punctuation">.</span>SeqNoLog<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>UnitId <span class="token operator">==</span> c<span class="token punctuation">.</span>UnitId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>RN <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MB51_View</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//CkassIfCation = a.CkassIfCation,</span>
        PGI <span class="token operator">=</span> b<span class="token punctuation">.</span>DeliveryInstractionStatus<span class="token punctuation">,</span>
        PGITime <span class="token operator">=</span> b<span class="token punctuation">.</span>UpTime<span class="token punctuation">,</span>
        IsDelayPGI <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        RunNo <span class="token operator">=</span> c<span class="token punctuation">.</span>RunNo
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>CkassIfCation<span class="token punctuation">]</span> as1<span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>DeliveryInstractionStatus<span class="token punctuation">]</span> as2<span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>UpTime<span class="token punctuation">]</span> as3<span class="token punctuation">,</span> <span class="token number">1</span> as4<span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token punctuation">[</span>RunNo<span class="token punctuation">]</span> as5 
<span class="token keyword">FROM</span> <span class="token punctuation">[</span>UnitLog<span class="token punctuation">]</span> a 
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>LoadNo<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>SeqNoLog<span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token punctuation">[</span>DeliveryInstractionStatus<span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token punctuation">[</span>UpTime<span class="token punctuation">]</span><span class="token punctuation">,</span> row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span> <span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UnitId<span class="token punctuation">]</span> <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>SeqNoLog<span class="token punctuation">]</span> <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>RN<span class="token punctuation">]</span> 
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>UnitLog<span class="token punctuation">]</span> a 
    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">[</span>LoadPlan<span class="token punctuation">]</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>LoadNo<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>LoadNo<span class="token punctuation">]</span> <span class="token operator">AND</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UnitTransactionType<span class="token punctuation">]</span> <span class="token operator">=</span> N<span class="token string">&#39;TO&#39;</span> 
    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">[</span>Instruction<span class="token punctuation">]</span> c <span class="token keyword">ON</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>InstructionNo<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token punctuation">[</span>InstructionNo<span class="token punctuation">]</span> <span class="token punctuation">)</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>SeqNoLog<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token punctuation">[</span>SeqNoLog<span class="token punctuation">]</span> 
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span> c <span class="token keyword">ON</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>UnitId<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token punctuation">[</span>UnitId<span class="token punctuation">]</span> 
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token punctuation">[</span>RN<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="withparameters-sharing" tabindex="-1"><a class="header-anchor" href="#withparameters-sharing" aria-hidden="true">#</a> WithParameters Sharing</h2><p>After enabling parameterized queries, using <code>WithParameters</code> to share parameters can avoid creating identical parameter names:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> dbpars <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>DbParameter<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> id1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> id2 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithParameters</span><span class="token punctuation">(</span>dbpars<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> id1<span class="token punctuation">)</span>

    <span class="token punctuation">.</span><span class="token function">FromQuery</span><span class="token punctuation">(</span>
        fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">WithParameters</span><span class="token punctuation">(</span>dbpars<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> id2<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">InnerJoin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">==</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;GroupId&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;Username&quot;</span> 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;GroupId&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;Username&quot;</span> 
    <span class="token keyword">FROM</span> <span class="token string">&quot;User1&quot;</span> a 
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> <span class="token operator">=</span> <span class="token variable">@exp_0</span><span class="token punctuation">)</span> 
<span class="token punctuation">)</span> a
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span> 
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;GroupId&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token string">&quot;Username&quot;</span> 
    <span class="token keyword">FROM</span> <span class="token string">&quot;User1&quot;</span> a 
    <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> <span class="token operator">=</span> <span class="token variable">@exp_1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> b <span class="token keyword">ON</span> b<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span> <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token string">&quot;Id&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="subquery-exists" tabindex="-1"><a class="header-anchor" href="#subquery-exists" aria-hidden="true">#</a> Subquery Exists</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT a.[Id], a.[Title], a.[Clicks], a.[CreateTime], a.[CategoryId]</span>
<span class="token comment">//FROM [Topic] a</span>
<span class="token comment">//WHERE (exists(SELECT 1</span>
<span class="token comment">//    FROM [Topic] b</span>
<span class="token comment">//    WHERE (b.[Id] = a.[Id])</span>
<span class="token comment">//    limit 0,1))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Note: Since the entity class of the subquery is the same as the outer one, use <code>As(&quot;b&quot;)</code> to specify an alias for distinction.</p></blockquote><h2 id="subquery-in" tabindex="-1"><a class="header-anchor" href="#subquery-in" aria-hidden="true">#</a> Subquery In</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT a.[Id], a.[Title], a.[Clicks], a.[CreateTime], a.[CategoryId]</span>
<span class="token comment">//FROM [Topic] a</span>
<span class="token comment">//WHERE (((a.[Id]) in (SELECT b.[Id]</span>
<span class="token comment">//    FROM [Topic] b)))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subquery-join" tabindex="-1"><a class="header-anchor" href="#subquery-join" aria-hidden="true">#</a> Subquery Join</h2><p>v1.8.0+ <code>string.Join</code> + <code>ToList</code> to concatenate multiple rows of the subquery result into a single string, e.g., &quot;1,2,3,4&quot;</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span>
    id <span class="token operator">=</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    concat <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>StringJoin01<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//SELECT a.[Id], (SELECT group_concat(b.[Id] separator &#39;,&#39;) </span>
<span class="token comment">//    FROM [StringJoin01] b) </span>
<span class="token comment">//FROM [Topic] a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subquery-first-count-sum-max-min-avg" tabindex="-1"><a class="header-anchor" href="#subquery-first-count-sum-max-min-avg" aria-hidden="true">#</a> Subquery First/Count/Sum/Max/Min/Avg</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Category<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> 
<span class="token punctuation">{</span>
    all <span class="token operator">=</span> a<span class="token punctuation">,</span>
    first <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
    count <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    sum <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
    max <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
    min <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span><span class="token punctuation">,</span>
    avg <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CategoryId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Avg</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Clicks<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subquery-tolist" tabindex="-1"><a class="header-anchor" href="#subquery-tolist" aria-hidden="true">#</a> Subquery ToList</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Executes up to 3 SQL queries</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    all <span class="token operator">=</span> a<span class="token punctuation">,</span>
    list1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    list2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>TopicId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// After grouping, executes up to 3 SQL queries</span>
fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Author <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> Author <span class="token operator">=</span> a<span class="token punctuation">.</span>Key<span class="token punctuation">.</span>Author<span class="token punctuation">,</span> Count <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> 
    <span class="token punctuation">{</span>
        a<span class="token punctuation">.</span>Author<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Count<span class="token punctuation">,</span>
        list1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        list2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Author <span class="token operator">==</span> a<span class="token punctuation">.</span>Author<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tosql-withsql" tabindex="-1"><a class="header-anchor" href="#tosql-withsql" aria-hidden="true">#</a> ToSql + WithSql</h2><p>This is an early method for nested queries.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> sql <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToSql</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        item <span class="token operator">=</span> a<span class="token punctuation">,</span>
        rownum <span class="token operator">=</span> SqlExt<span class="token punctuation">.</span><span class="token function">RowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PartitionBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> FieldAliasOptions<span class="token punctuation">.</span>AsProperty<span class="token punctuation">)</span><span class="token punctuation">;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;a.rownum = 1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> 
<span class="token keyword">FROM</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span><span class="token punctuation">,</span> row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span> <span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Nickname<span class="token punctuation">]</span> <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rownum<span class="token punctuation">]</span>
    <span class="token keyword">FROM</span> <span class="token punctuation">[</span>User1<span class="token punctuation">]</span> a
    <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1000</span>
<span class="token punctuation">)</span> a
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>rownum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46))])}const b=p(i,[["render",r],["__file","withtempquery.html.vue"]]);export{b as default};
