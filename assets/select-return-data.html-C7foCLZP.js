import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as i,c as k,a as t,b as a,d as s,e as p,w as c}from"./app-eefTNUOM.js";const r={},d={href:"https://github.com/dotnetcore/FreeSql/issues/528",target:"_blank",rel:"noopener noreferrer"};function m(g,n){const o=e("RouterLink"),l=e("ExternalLinkIcon");return i(),k("div",null,[n[6]||(n[6]=t(`<h1 id="返回数据-✨" tabindex="-1"><a class="header-anchor" href="#返回数据-✨" aria-hidden="true">#</a> 返回数据 ✨</h1><p>FreeSql 使用 ExpressionTree 读取数据记录，.NET 技术下除了原生代码，最快的方案是 Emit 和 ExpressionTree。</p><p>ExpressionTree 天然支持 .NET AOT 编译，FreeSql 在 2018 年做出的技术决策将在未来一直受益。</p><h2 id="_1、返回单条记录" tabindex="-1"><a class="header-anchor" href="#_1、返回单条记录" aria-hidden="true">#</a> 1、返回单条记录</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Topic</span> t1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>FreeSql 约定，ToOne/First 永远返回 null 或 有数据的实体对象，ToList 永远返回非 null 的 List&lt;实体类型&gt;</p></blockquote><h2 id="_2、返回-list" tabindex="-1"><a class="header-anchor" href="#_2、返回-list" aria-hidden="true">#</a> 2、返回 List</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span> t1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3、返回-treelist" tabindex="-1"><a class="header-anchor" href="#_3、返回-treelist" aria-hidden="true">#</a> 3、返回 TreeList</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span>Area<span class="token punctuation">&gt;</span></span> t2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Area<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">ToTreeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>Area<span class="token punctuation">&gt;</span></span> t3 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>Area<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;湖北&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AsTreeCte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToTreeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//v1.6.0 AsTreeCte() 递归CTE查询 湖北 下的所有子分类</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)),a("blockquote",null,[a("p",null,[n[1]||(n[1]=s("查询数据加工为树型，注意：实体需要配置")),p(o,{to:"/guide/select-as-tree.html"},{default:c(()=>n[0]||(n[0]=[s("父子导航属性")])),_:1})])]),n[7]||(n[7]=t(`<h2 id="_4、返回-list-导航属性的数据" tabindex="-1"><a class="header-anchor" href="#_4、返回-list-导航属性的数据" aria-hidden="true">#</a> 4、返回 List + 导航属性的数据</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span> t4 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LeftJoin</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Category<span class="token punctuation">.</span>Id <span class="token operator">==</span> a<span class="token punctuation">.</span>CategoryId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//此时会查询 Topic普通字段 + 导航对象Category 字段</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),a("p",null,[n[3]||(n[3]=s("更多导航属性的数据返回：")),p(o,{to:"/guide/select-include.html"},{default:c(()=>n[2]||(n[2]=[s("贪婪加载")])),_:1})]),n[8]||(n[8]=t(`<h2 id="_5、指定返回" tabindex="-1"><a class="header-anchor" href="#_5、指定返回" aria-hidden="true">#</a> 5、指定返回</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//返回一个字段</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> t5 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回匿名类</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t6 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回元组</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> t7 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;id, title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回导航属性</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t8 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Title<span class="token punctuation">,</span>
    a<span class="token punctuation">.</span>Category <span class="token comment">//导航属性</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回SQL字段</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t9 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    cstitle <span class="token operator">=</span> <span class="token string">&quot;substr(a.title, 0, 2)&quot;</span><span class="token punctuation">,</span> <span class="token comment">//将 substr(a.title, 0, 2) 作为查询字段</span>
    csnow <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span><span class="token string">&quot;now()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//将 now() 作为查询字段</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回子查询的字段</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t10 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    count <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    max <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
    min <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
    name <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//返回子查询集合 v3.2.650+ 以下最多执行3次 SQL</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t11 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    a<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    list1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    list2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>TopicId <span class="token operator">==</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>匿名类<span class="token punctuation">&gt;</span></span> t12 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Topic<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>Author <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithTempQuery</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> Author <span class="token operator">=</span> a<span class="token punctuation">.</span>Key<span class="token punctuation">.</span>Author<span class="token punctuation">,</span> Count <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span>
    <span class="token punctuation">{</span>
        a<span class="token punctuation">.</span>Author<span class="token punctuation">,</span> a<span class="token punctuation">.</span>Count<span class="token punctuation">,</span>
        list1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        list2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T2<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Author <span class="token operator">==</span> a<span class="token punctuation">.</span>Author<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>常量机制早期留给了原生 SQL，如果真的需要返回该字符串：&quot;&#39;xxx&#39;&quot;</p></blockquote><h2 id="_6、忽略字段返回" tabindex="-1"><a class="header-anchor" href="#_6、忽略字段返回" aria-hidden="true">#</a> 6、忽略字段返回</h2>`,4)),a("p",null,[n[5]||(n[5]=s("参考实现：")),a("a",d,[n[4]||(n[4]=s("https://github.com/dotnetcore/FreeSql/issues/528")),p(l)])]),n[9]||(n[9]=t(`<h2 id="_7、dto-映射返回" tabindex="-1"><a class="header-anchor" href="#_7、dto-映射返回" aria-hidden="true">#</a> 7、Dto 映射返回</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Dto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//情况1：Dto 与 Song 属性名相同的字段被查询，返回 List&lt;Dto&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dto</span> <span class="token punctuation">{</span> xxx <span class="token operator">=</span> a<span class="token punctuation">.</span>ext <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//情况2：Dto 与 Song 属性名相同的字段被查询，纠正映射 ext，返回 List&lt;Dto&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> a<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//情况3：Lambda 与 Song 类型一样，只查询指定字段 id，返回 List&lt;Song&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> a<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//情况4：Lambda 匿名类型，只查询指定字段 id，返回 List&lt;匿名对象&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>请仔细处理区别，请仔细处理区别，请仔细处理区别</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dto</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//情况5：只查询 id，返回 List&lt;Dto&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dto</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span> xxx <span class="token operator">=</span> a<span class="token punctuation">.</span>ext <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//情况6：查询 id, ext，返回 List&lt;Dto&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//情况7：查询 id，返回 List&lt;Song&gt;</span>

fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span> xxx <span class="token operator">=</span> a<span class="token punctuation">.</span>ext <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//情况8：查询 id, ext，返回 List&lt;Song&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>GroupBy 所有方法不使用 DTO 映射规则</p></blockquote><p>这种映射支持单表/多表，在查询数据之前映射（不是先查询所有字段再到内存映射）</p><p>查找规则，查找属性名，会循环内部对象 _tables（join 查询后会增长），以 主表优先查，直到查到相同的字段。</p><p>如：</p><p>A, B, C 都有 id，Dto { id, a1, a2, b1, b2 }，A.id 被映射。也可以指定 id = C.id 映射。</p><p>DTO 查询只映射默认字段（普通属性），映射对象请使用：</p><blockquote><p>导航对象：ToList(a =&gt; new Dto { Catalog = a.Catalog })</p></blockquote><blockquote><p>多表对象：ToList((a, b) =&gt; new Dto { Catalog = b })</p></blockquote><h2 id="_8、tochunk-分段返回" tabindex="-1"><a class="header-anchor" href="#_8、tochunk-分段返回" aria-hidden="true">#</a> 8、ToChunk 分段返回</h2><p>执行查询，分块返回数据，可减少内存开销。比如读取 10 万条数据，每次返回 100 条处理。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToChunk</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> done <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> done<span class="token punctuation">.</span>Object<span class="token punctuation">;</span>
    <span class="token comment">//done.IsBreak = true; v1.7.0 停止读取</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、tosql" tabindex="-1"><a class="header-anchor" href="#_9、tosql" aria-hidden="true">#</a> 9、ToSql</h2><p>每个 ToList 都可以使用 ToSql 返回 SQL String，有两个选项：</p><ul><li>FieldAliasOptions.AsIndex(默认) 自动产生 as1, as2, as3 .... 字段别名，可以最大程度防止多表，存在相同字段的问题；</li><li>FieldAliasOptions.AsProperty 使用属性名作为字段别名，合适使用二次构造 SQL 再次执行；</li></ul><h2 id="_10、执行-sql" tabindex="-1"><a class="header-anchor" href="#_10、执行-sql" aria-hidden="true">#</a> 10、执行 SQL</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">xxx</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Path <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">List<span class="token punctuation">&lt;</span>xxx<span class="token punctuation">&gt;</span></span> t11 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>xxx<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span> <span class="token punctuation">,</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> t12 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> t13 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Query</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;select * from song&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：Ado.Query 的实体特性是无效的，比如 [Column(Name = &quot;xxx&quot;)] 无效</p></blockquote><h2 id="_11、api" tabindex="-1"><a class="header-anchor" href="#_11、api" aria-hidden="true">#</a> 11、API</h2><table><thead><tr><th>方法</th><th>返回值</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>ToSql</td><td>string</td><td></td><td>返回即将执行的SQL语句</td></tr><tr><td>ToList</td><td>List&lt;T1&gt;</td><td></td><td>执行SQL查询，返回 T1 实体所有字段的记录，若存在导航属性则一起查询返回，记录不存在时返回 Count 为 0 的列表</td></tr><tr><td>ToList&lt;Dto&gt;</td><td>List&lt;Dto&gt;</td><td>Lambda</td><td>执行SQL查询，返回指定字段或Dto映射的记录，记录不存在时返回 Count 为 0 的列表</td></tr><tr><td>ToList&lt;T&gt;</td><td>List&lt;T&gt;</td><td>string field</td><td>执行SQL查询，返回 field 指定字段的记录，并以元组或基础类型(int,string,long)接收，记录不存在时返回 Count 为 0 的列表</td></tr><tr><td>ToOne</td><td>T1</td><td></td><td>执行SQL查询，返回 T1 实体所有字段的第一条记录，记录不存在时返回 null</td></tr><tr><td>ToChunk</td><td>&lt;空&gt;</td><td>int size, Action&lt;FetchCallbackArgs&lt;List&lt;T1&gt;&gt;&gt; done</td><td>执行SQL查询，分块返回数据，可减少内存开销。比如读取10万条数据，每次返回100条处理。</td></tr><tr><td>Any</td><td>bool</td><td></td><td>执行SQL查询，是否有记录</td></tr><tr><td>Sum</td><td>T</td><td>Lambda</td><td>指定一个列求和</td></tr><tr><td>Min</td><td>T</td><td>Lambda</td><td>指定一个列求最小值</td></tr><tr><td>Max</td><td>T</td><td>Lambda</td><td>指定一个列求最大值</td></tr><tr><td>Avg</td><td>T</td><td>Lambda</td><td>指定一个列求平均值</td></tr></tbody></table>`,23))])}const h=u(r,[["render",m],["__file","select-return-data.html.vue"]]);export{h as default};
