import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as u,o as r,c as k,b as s,d as a,e,w as t,a as o}from"./app-DO43Xp88.js";const m={};function b(v,n){const p=u("RouterLink"),i=u("CodeTabs");return r(),k("div",null,[n[15]||(n[15]=s("p",null,"Here is the translated document:",-1)),n[16]||(n[16]=s("hr",null,null,-1)),n[17]||(n[17]=s("h1",{id:"cascade-save",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cascade-save","aria-hidden":"true"},"#"),a(" Cascade Save")],-1)),s("p",null,[n[1]||(n[1]=a("The following content heavily relies on the correct configuration of ")),e(p,{to:"/en/guide/navigate-attribute.html"},{default:t(()=>n[0]||(n[0]=[a("Navigation Properties")])),_:1}),n[2]||(n[2]=a(", so please ensure you understand that first before proceeding!"))]),n[18]||(n[18]=o('<ul><li><strong>Topic</strong>: Articles table</li><li><strong>Category</strong>: Categories table</li><li><strong>Comment</strong>: Comments table</li><li><strong>Tag</strong>: Tags table</li><li><strong>ManyToOne</strong>: Topic (many) related to Category (one)</li><li><strong>OneToOne</strong>: Topic (one) related to Content (one)</li><li><strong>OneToMany</strong>: Topic (one) related to Comments (many)</li><li><strong>ManyToMany</strong>: Topic (many) related to Tags (many)</li></ul><p>Cascade saving is not suitable for ManyToOne relationships because it is unreasonable to save the Category every time you save a Topic (consider the reasons). Therefore, only OneToOne, OneToMany, and ManyToMany cascade saving will be discussed below.</p><blockquote><p>If you do not understand the above content, please read it several times!</p></blockquote><h2 id="enabling-the-feature" tabindex="-1"><a class="header-anchor" href="#enabling-the-feature" aria-hidden="true">#</a> Enabling the Feature</h2>',4)),e(i,{id:"63",data:[{id:".NET CLI"},{id:".NET Framework"}],active:0},{title0:t(({value:c,isActive:l})=>n[3]||(n[3]=[a(".NET CLI")])),title1:t(({value:c,isActive:l})=>n[4]||(n[4]=[a(".NET Framework")])),tab0:t(({value:c,isActive:l})=>n[5]||(n[5]=[s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[a("dotnet "),s("span",{class:"token function"},"add"),a(` package FreeSql.DbContext
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1)])),tab1:t(({value:c,isActive:l})=>n[6]||(n[6]=[s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,`Install-Package FreeSql.DbContext
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1)])),_:1}),s("blockquote",null,[s("p",null,[n[8]||(n[8]=a("This feature was implemented in 2019 (stable). You may also refer to the 2022 release of ")),e(p,{to:"/en/guide/aggregateroot.html"},{default:t(()=>n[7]||(n[7]=[a("“Aggregate Root Repository”")])),_:1}),n[9]||(n[9]=a(" (more automatic cascade saving)."))])]),n[19]||(n[19]=o(`<p>Cascade saving is disabled by default and needs to be enabled manually:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mechanism-rules" tabindex="-1"><a class="header-anchor" href="#mechanism-rules" aria-hidden="true">#</a> Mechanism Rules</h2>`,3)),s("ol",null,[s("li",null,[n[13]||(n[13]=s("p",null,[s("strong",null,"OneToOne Cascade Saving")],-1)),s("blockquote",null,[s("p",null,[n[11]||(n[11]=a("Supported from v3.2.606+, and also supports ")),e(p,{to:"/en/guide/cascade-delete.html"},{default:t(()=>n[10]||(n[10]=[a("Cascade Delete")])),_:1}),n[12]||(n[12]=a(" functionality."))])])]),n[14]||(n[14]=o(`<li><p><strong>OneToMany</strong>: Appending or updating child records without deleting existing child records</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Existing Comment child records are not deleted</li><li>When <code>topic.Comments</code> is empty, no operations are performed</li><li>When saving <code>topic.Comments</code>, it will also save the sub-collection properties of <code>topic.Comments[0-..]</code>, recursively down 18 levels</li></ul><blockquote><p>Recursively down 18 levels means, for example, the Articles table has a collection property Comments, and Comments has a collection property Sub-comments. When saving the Articles table object, it will retrieve the collection property Comments, and if Comments are saved, it will further retrieve the collection property Sub-comments, and perform InsertOrUpdate operations together.</p></blockquote></li><li><p><strong>ManyToMany</strong>: Complete comparison to save the intermediate table; external tables only append, not update</p><p>Complete comparison saves the intermediate table by comparing existing data and performing additions, modifications, and deletions.</p></li>`,2))]),n[20]||(n[20]=o(`<h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="test-1-append-save-onetomany" tabindex="-1"><a class="header-anchor" href="#test-1-append-save-onetomany" aria-hidden="true">#</a> Test 1: Append Save OneToMany</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>
<span class="token keyword">class</span> <span class="token class-name">Cagetory</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> ParentId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Navigate</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>ParentId<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span> Childs <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestOneToManyParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> cts <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;Category1&quot;</span><span class="token punctuation">,</span>
            Childs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category1_1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category1_2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category1_3&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;Category2&quot;</span><span class="token punctuation">,</span>
            Childs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Cagetory<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category2_1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category2_2&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//执行创建表，和插入数据：</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;, &#39;Category1&#39;, &#39;00000000-0000-0000-0000-000000000000&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;, &#39;Category2&#39;, &#39;00000000-0000-0000-0000-000000000000&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afcb-ed57-f6f4-0082-cb6d0c1c5f1a&#39;, &#39;Category1_1&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6e74bd8eef&#39;, &#39;Category1_2&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb6f6267cc5f&#39;, &#39;Category1_3&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb7057c41d46&#39;, &#39;Category2_1&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;), (&#39;5d90afcb-ed57-f6f4-0082-cb7156e0375e&#39;, &#39;Category2_2&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;)</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Category11&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Category22&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Cagetory&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39; THEN &#39;Category11&#39;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39; THEN &#39;Category22&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;,&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;))</span>
    <span class="token comment">//Childs.Clear 后没有执行删除子集合操作，说明没有做完整的对比</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Category111&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category1_33&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Category222&quot;</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Childs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Cagetory</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Category2_22&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Cagetory&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39; THEN &#39;Category111&#39;</span>
    <span class="token comment">//WHEN &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39; THEN &#39;Category222&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;,&#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;))</span>
    <span class="token comment">//INSERT INTO &quot;Cagetory&quot;(&quot;Id&quot;, &quot;Name&quot;, &quot;ParentId&quot;) VALUES(&#39;5d90afe8-ed57-f6f4-0082-cb725df546ea&#39;, &#39;Category1_33&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6b78eaaf9f&#39;), (&#39;5d90afe8-ed57-f6f4-0082-cb7338a6214c&#39;, &#39;Category2_22&#39;, &#39;5d90afcb-ed57-f6f4-0082-cb6c5b531b3e&#39;)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>Test 2: Complete Save ManyToMany</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">Song</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span> Tags <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Tag</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> TagName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span> Songs <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">SongTag</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> SongId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Song</span> Song <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> TagId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Tag</span> Tag <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Fact</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestManyToMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> tags <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;Pop&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;1980&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;2000&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Tag</span> <span class="token punctuation">{</span> TagName <span class="token operator">=</span> <span class="token string">&quot;Rock&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ss <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;I love you.mp3&quot;</span><span class="token punctuation">,</span>
            Tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Song</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;Home.mp3&quot;</span><span class="token punctuation">,</span>
            Tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Tag<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">{</span>
                tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> repo <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRepository</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Song<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span>DbContextOptions<span class="token punctuation">.</span>EnableCascadeSave <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//INSERT INTO &quot;Song&quot;(&quot;Id&quot;, &quot;Name&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;I love you.mp3&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;Home.mp3&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;, &#39;Pop&#39;), (&#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;, &#39;1980&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;, &#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;, &#39;2000&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39;), (&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;)</span>

    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;I love you.mp5&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tags<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Home.mp5&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tags<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//UPDATE &quot;Song&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; THEN &#39;I love you.mp5&#39;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; THEN &#39;Home.mp5&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;,&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;))</span>

    <span class="token comment">//SELECT a.&quot;SongId&quot;, a.&quot;TagId&quot;</span>
    <span class="token comment">//FROM &quot;SongTag&quot; a</span>
    <span class="token comment">//WHERE (a.&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;)</span>

    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; AND &quot;TagId&quot; = &#39;5d90fdbd-6a6b-2c58-00c8-379a0432a09c&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;Tag&quot;(&quot;Id&quot;, &quot;TagName&quot;) VALUES(&#39;5d90febd-6a6b-2c58-00c8-379c21acfc72&#39;, &#39;Rock&#39;)</span>

    <span class="token comment">//SELECT a.&quot;SongId&quot;, a.&quot;TagId&quot;</span>
    <span class="token comment">//FROM &quot;SongTag&quot; a</span>
    <span class="token comment">//WHERE (a.&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;)</span>

    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; AND &quot;TagId&quot; = &#39;5d90fdb7-6a6b-2c58-00c8-37991ead4f05&#39; OR &quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; AND &quot;TagId&quot; = &#39;5d90fdcc-6a6b-2c58-00c8-379b5af59d25&#39;)</span>
    <span class="token comment">//INSERT INTO &quot;SongTag&quot;(&quot;SongId&quot;, &quot;TagId&quot;) VALUES(&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;, &#39;5d90febd-6a6b-2c58-00c8-379c21acfc72&#39;)</span>

    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;I love you.mp4&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Home.mp4&quot;</span><span class="token punctuation">;</span>
    ss<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    repo<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;)</span>
    <span class="token comment">//DELETE FROM &quot;SongTag&quot; WHERE (&quot;SongId&quot; = &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;)</span>

    <span class="token comment">//UPDATE &quot;Song&quot; SET &quot;Name&quot; = CASE &quot;Id&quot;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39; THEN &#39;I love you.mp4&#39;</span>
    <span class="token comment">//WHEN &#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39; THEN &#39;Home.mp4&#39; END</span>
    <span class="token comment">//WHERE (&quot;Id&quot; IN (&#39;5d90fdb3-6a6b-2c58-00c8-37974177440d&#39;,&#39;5d90fdb3-6a6b-2c58-00c8-37987f29b197&#39;))</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const y=d(m,[["render",b],["__file","cascade-saving.html.vue"]]);export{y as default};
