import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as r,c as _,a as l,b as t,d as n,w as u,e as i}from"./app-Rpv4X6iX.js";const c={},h=l("h1",{id:"与-entityframework-比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#与-entityframework-比较","aria-hidden":"true"},"#"),t(" 与 EntityFramework 比较")],-1),a=l("p",null,"为什么要写这篇文章？",-1),E=l("p",null,"2020 年 写下这篇完整一点的 .NET ORM 比较，为准备使用 FreeSql 的朋友解惑。",-1),T=l("h2",{id:"基础信息比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#基础信息比较","aria-hidden":"true"},"#"),t(" 基础信息比较")],-1),R=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore")])],-1),N=l("tr",null,[l("td",null,"出生时间"),l("td",null,"2018 年 12 月"),l("td",null,"2015 年(约)")],-1),O=l("tr",null,[l("td",null,"开源协议"),l("td",null,"MIT"),l("td",null,"Apache-2.0")],-1),M=l("td",null,"所属机构",-1),m={href:"https://github.com/dotnetcore",target:"_blank",rel:"noopener noreferrer"},p=l("td",null,"dotnet",-1),f=l("tr",null,[l("td",null,"单元测试数量"),l("td",null,"5500+"),l("td",null,"很多")],-1),g=l("tr",null,[l("td",null,"github star"),l("td",null,"2.1k+"),l("td",null,"9.5k+")],-1),C=l("tr",null,[l("td",null,"github issues"),l("td",null,"活跃"),l("td",null,"活跃")],-1),S=l("tr",null,[l("td",null,"支持平台"),l("td",null,".NET4.0+、.NETCore"),l("td",null,".NETCore")],-1),F=l("tr",null,[l("td",null,"支持数据库"),l("td",null,"很多，并且行为一致"),l("td",null,"很多")],-1),b=l("tr",null,[l("td",null,"生命周期"),l("td",null,"Singleton"),l("td",null,"Scoped")],-1),y=l("tr",null,[l("td",null,"使用方式"),l("td",null,"IFreeSql、Repository"),l("td",null,"DbContext")],-1),q=i('<p>FreeSql .NET ORM 支持 MySql/SqlServer/PostgreSQL/Oracle/Sqlite/Firebird/达梦/人大金仓/神舟通用/南大通用/虚谷/翰高/Access/ClickHouse/QuestDB，以及自定义适配。</p><p>.NET ORM 各有自已看家本领，本文主要按 FreeSql 提供的功能进行列举比较，如有冒犯请见谅，也欢迎向 FreeSql 提出功能建议。</p><p>每个功能实现的深度层次不一样（比如 EFCore 支持 SqlServer 2012，FreeSql 支持 SqlServer 2005），很难彻底比较，提示：</p><ul><li>本文比较的功能 FreeSql 每种数据库基本都有提供，不像 EFCore 偏向 SqlServer</li><li>本文只比较官方提供的功能（不包含第三方扩展）</li></ul><figure><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063104631-2088330287.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063148941-1489586974.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="net-orm-整体功能比较" tabindex="-1"><a class="header-anchor" href="#net-orm-整体功能比较" aria-hidden="true">#</a> .NET ORM 整体功能比较</h2>',7),k=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore")])],-1),D=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型，创建表结构"),l("td",null,"✔"),l("td",null,"✔")],-1),x=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型，对比表结构"),l("td",null,"✔"),l("td",null,"✔")],-1),v=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型注释，迁移表结构备注"),l("td",null,"✔"),l("td",null,"-")],-1),w=l("tr",null,[l("td",null,".NET ORM CodeFirst FluentApi"),l("td",null,"✔"),l("td",null,"✔")],-1),U=l("tr",null,[l("td",null,".NET ORM CodeFirst FluentApi 语法兼容 EFCore"),l("td",null,"✔"),l("td",null,"✔")],-1),L=l("tr",null,[l("td",null,".NET ORM CodeFirst 实体特性兼容 EFCore"),l("td",null,"✔"),l("td",null,"✔")],-1),I=l("tr",null,[l("td",null,".NET ORM CodeFirst 自定义实体特性(Aop)"),l("td",null,"✔"),l("td",null,"-")],-1),W=l("tr",null,[l("td",null,".NET ORM CodeFirst 类型转换映射(MapType)"),l("td",null,"✔"),l("td",null,"✔")],-1),A=l("tr",null,[l("td",null,".NET ORM DbFirst 根据数据库，生成实体类"),l("td",null,"✔"),l("td",null,"✔")],-1),B=l("tr",null,[l("td",null,".NET ORM 导航属性(OneToOne)"),l("td",null,"✔"),l("td",null,"✔")],-1),Q=l("tr",null,[l("td",null,".NET ORM 导航属性(ManyToOne)"),l("td",null,"✔"),l("td",null,"✔")],-1),V=l("tr",null,[l("td",null,".NET ORM 导航属性(OneToMany)"),l("td",null,"✔"),l("td",null,"✔")],-1),P=l("tr",null,[l("td",null,".NET ORM 导航属性(ManyToMany)"),l("td",null,"✔"),l("td",null,"-")],-1),z=l("td",null,"✔",-1),H=l("td",null,"-",-1),G=l("tr",null,[l("td",null,".NET ORM 导航属性延时加载、贪婪加载、级联保存"),l("td",null,"✔"),l("td",null,"✔")],-1),J=l("tr",null,[l("td",null,".NET ORM 自定义表达式树解析"),l("td",null,"✔"),l("td",null,"-")],-1),K=l("tr",null,[l("td",null,".NET ORM 全局过滤器"),l("td",null,"✔"),l("td",null,"✔")],-1),j=l("tr",null,[l("td",null,".NET ORM 事务"),l("td",null,"✔"),l("td",null,"✔")],-1),X=l("tr",null,[l("td",null,".NET ORM 读写分离"),l("td",null,"✔"),l("td",null,"-")],-1),Y=l("tr",null,[l("td",null,".NET ORM 分表分库"),l("td",null,"✔"),l("td",null,"-")],-1),Z=l("tr",null,[l("td",null,".NET ORM 仓储 Repository"),l("td",null,"✔"),l("td",null,"-")],-1),$=l("tr",null,[l("td",null,".NET ORM 工作单元 UnitOfWork"),l("td",null,"✔"),l("td",null,"-")],-1),ll=l("tr",null,[l("td",null,".NET ORM 工作单元管理器 UnitOfWorkManager"),l("td",null,"✔"),l("td",null,"-")],-1),tl=l("tr",null,[l("td",null,".NET ORM DbContext 状态管理"),l("td",null,"✔"),l("td",null,"✔")],-1),nl=l("h2",{id:"net-orm-crud-功能比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#net-orm-crud-功能比较","aria-hidden":"true"},"#"),t(" .NET ORM CRUD 功能比较")],-1),dl=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore")])],-1),ul=l("tr",null,[l("td",null,".NET ORM CRUD 时，映射动态表名"),l("td",null,"✔"),l("td",null,"-")],-1),el=l("tr",null,[l("td",null,".NET ORM CRUD 时，使用参数化 SQL 执行"),l("td",null,"✔"),l("td",null,"✔")],-1),ol=l("tr",null,[l("td",null,".NET ORM CRUD 时，不使用参数化 SQL 执行(NoneParameter)"),l("td",null,"✔"),l("td",null,"-")],-1),sl=l("tr",null,[l("td",null,".NET ORM CRUD 时，获取对应的 SQL(ToSql)"),l("td",null,"✔"),l("td",null,"-")],-1),rl=l("tr",null,[l("td",null,".NET ORM CRUD 时，统一审计实体属性值(Aop.AuditValue)"),l("td",null,"✔"),l("td",null,"-")],-1),_l=l("tr",null,[l("td"),l("td"),l("td")],-1),il=l("tr",null,[l("td",null,".NET ORM 插入(单条)"),l("td",null,"✔"),l("td",null,"✔")],-1),cl=l("tr",null,[l("td",null,".NET ORM 插入时，忽略/指定列"),l("td",null,"✔"),l("td",null,"-")],-1),hl=l("tr",null,[l("td",null,".NET ORM 插入时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-")],-1),al=l("tr",null,[l("td",null,".NET ORM 插入时，返回插入后的自增值"),l("td",null,"✔"),l("td",null,"✔")],-1),El=l("tr",null,[l("td",null,".NET ORM 插入时，返回插入后的记录"),l("td",null,"✔"),l("td",null,"-")],-1),Tl=l("tr",null,[l("td",null,".NET ORM 插入时，Insert Ignore Into"),l("td",null,"✔"),l("td",null,"-")],-1),Rl=l("tr",null,[l("td",null,".NET ORM 插入时，On Duplicate Key Update"),l("td",null,"✔"),l("td",null,"-")],-1),Nl=l("tr",null,[l("td",null,".NET ORM 插入时，On Conflict Do Update"),l("td",null,"✔"),l("td",null,"-")],-1),Ol={href:"https://www.cnblogs.com/kellynic/p/10557882.html",target:"_blank",rel:"noopener noreferrer"},Ml=l("td",null,"✔",-1),ml=l("td",null,"-",-1),pl=l("td",null,"✔",-1),fl=l("td",null,"-",-1),gl=l("tr",null,[l("td",null,".NET ORM 批量插入时，使用 BulkCopy"),l("td",null,"✔"),l("td",null,"-")],-1),Cl=l("tr",null,[l("td"),l("td"),l("td")],-1),Sl=l("tr",null,[l("td",null,".NET ORM 更新(单条)"),l("td",null,"✔"),l("td",null,"✔")],-1),Fl=l("tr",null,[l("td",null,".NET ORM 更新时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-")],-1),bl=l("tr",null,[l("td",null,".NET ORM 更新时，根据实体对象更新"),l("td",null,"✔"),l("td",null,"-")],-1),yl=l("tr",null,[l("td",null,".NET ORM 更新时，根据状态管理只更新有变化的属性"),l("td",null,"✔"),l("td",null,"✔")],-1),ql=l("tr",null,[l("td",null,".NET ORM 更新时，忽略/指定列"),l("td",null,"✔"),l("td",null,"-")],-1),kl=l("tr",null,[l("td",null,".NET ORM 更新时，原子性 set num=num+1"),l("td",null,"✔"),l("td",null,"-")],-1),Dl=l("tr",null,[l("td",null,".NET ORM 更新时，指定条件"),l("td",null,"✔"),l("td",null,"-")],-1),xl=l("tr",null,[l("td",null,".NET ORM 更新时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-")],-1),vl=l("tr",null,[l("td",null,".NET ORM 更新时，不需要先查询"),l("td",null,"✔"),l("td",null,"-")],-1),wl=l("tr",null,[l("td",null,".NET ORM 更新时，使用乐观行锁"),l("td",null,"✔"),l("td",null,"✔")],-1),Ul=l("tr",null,[l("td",null,".NET ORM 更新时，使用悲观锁"),l("td",null,"✔"),l("td",null,"-")],-1),Ll=l("tr",null,[l("td",null,".NET ORM 更新时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-")],-1),Il=l("tr",null,[l("td",null,".NET ORM 更新时，返回更新后的记录"),l("td",null,"✔"),l("td",null,"-")],-1),Wl=l("tr",null,[l("td",null,".NET ORM 批量更新"),l("td",null,"✔"),l("td",null,"-")],-1),Al=l("tr",null,[l("td"),l("td"),l("td")],-1),Bl=l("tr",null,[l("td",null,".NET ORM 删除(单条)"),l("td",null,"✔"),l("td",null,"✔")],-1),Ql=l("tr",null,[l("td",null,".NET ORM 删除时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-")],-1),Vl=l("tr",null,[l("td",null,".NET ORM 删除时，指定条件"),l("td",null,"✔"),l("td",null,"-")],-1),Pl=l("tr",null,[l("td",null,".NET ORM 删除时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-")],-1),zl=l("tr",null,[l("td",null,".NET ORM 删除时，不需要先查询"),l("td",null,"✔"),l("td",null,"-")],-1),Hl=l("tr",null,[l("td",null,".NET ORM 删除时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-")],-1),Gl=l("tr",null,[l("td",null,".NET ORM 删除时，返回插入后的记录"),l("td",null,"✔"),l("td",null,"-")],-1),Jl=l("tr",null,[l("td",null,".NET ORM 级联保存"),l("td",null,"✔"),l("td",null,"✔")],-1),Kl=l("tr",null,[l("td",null,".NET ORM 添加或更新"),l("td",null,"✔"),l("td",null,"-")],-1),jl=l("td",null,"✔",-1),Xl=l("td",null,"-",-1),Yl=l("td",null,"✔",-1),Zl=l("td",null,"✔",-1),$l=l("tr",null,[l("td"),l("td"),l("td")],-1),lt=l("tr",null,[l("td",null,".NET ORM 查询(单条)"),l("td",null,"✔"),l("td",null,"✔")],-1),tt=l("tr",null,[l("td",null,".NET ORM 查询时，分页"),l("td",null,"✔"),l("td",null,"✔")],-1),nt=l("tr",null,[l("td",null,".NET ORM 查询时，分页支持 SqlServer2008"),l("td",null,"✔"),l("td",null,"-")],-1),dt=l("tr",null,[l("td",null,".NET ORM 查询时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-")],-1),ut=l("td",null,"✔",-1),et=l("td",null,"-",-1),ot=l("tr",null,[l("td",null,".NET ORM 查询时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-")],-1),st=l("tr",null,[l("td",null,".NET ORM 查询时，多表条件传播(WhereCascade)"),l("td",null,"✔"),l("td",null,"-")],-1),rt=l("tr",null,[l("td",null,".NET ORM 查询时，在 lambda 中使用导航属性"),l("td",null,"✔"),l("td",null,"✔")],-1),_t=l("tr",null,[l("td",null,".NET ORM 查询时，用 Dto 映射只需要查询的字段"),l("td",null,"✔"),l("td",null,"-")],-1),it=l("tr",null,[l("td",null,".NET ORM 查询时，传 Sql 作二次查询(WithSql)"),l("td",null,"✔"),l("td",null,"-")],-1),ct=l("tr",null,[l("td",null,".NET ORM 查询时，子查询(Exists)"),l("td",null,"✔"),l("td",null,"-")],-1),ht=l("tr",null,[l("td",null,".NET ORM 查询时，子查询(In)"),l("td",null,"✔"),l("td",null,"-")],-1),at=l("td",null,"✔",-1),Et=l("td",null,"-",-1),Tt=l("tr",null,[l("td",null,".NET ORM 查询时，使用分组聚合(GroupBy/Having)"),l("td",null,"✔"),l("td",null,"✔")],-1),Rt=l("tr",null,[l("td",null,".NET ORM 查询时，使用 Linq To Sql 语法"),l("td",null,"✔"),l("td",null,"✔")],-1),Nt=l("td",null,"✔",-1),Ot=l("td",null,"-",-1);function Mt(mt,pt){const e=o("ExternalLinkIcon"),d=o("RouterLink");return r(),_("div",null,[h,a,E,T,l("table",null,[R,l("tbody",null,[N,O,l("tr",null,[M,l("td",null,[l("a",m,[t("dotnetcore(NCC)"),n(e)])]),p]),f,g,C,S,F,b,y])]),q,l("table",null,[k,l("tbody",null,[D,x,v,w,U,L,I,W,A,B,Q,V,P,l("tr",null,[l("td",null,[t(".NET ORM 导航属性(Parent) "),n(d,{to:"/reference/select-as-tree.html"},{default:u(()=>[t("父子关系的实体类")]),_:1})]),z,H]),G,J,K,j,X,Y,Z,$,ll,tl])]),nl,l("table",null,[dl,l("tbody",null,[ul,el,ol,sl,rl,_l,il,cl,hl,al,El,Tl,Rl,Nl,l("tr",null,[l("td",null,[t(".NET ORM 批量插入 "),l("a",Ol,[t("性能测试结果参考文档"),n(e)])]),Ml,ml]),l("tr",null,[l("td",null,[t(".NET ORM 批量插入时，自动分批 "),n(d,{to:"/reference/insert.html"},{default:u(()=>[t("参考文档")]),_:1})]),pl,fl]),gl,Cl,Sl,Fl,bl,yl,ql,kl,Dl,xl,vl,wl,Ul,Ll,Il,Wl,Al,Bl,Ql,Vl,Pl,zl,Hl,Gl,Jl,Kl,l("tr",null,[l("td",null,[t(".NET ORM 添加或更新，自动适配 merge into "),n(d,{to:"/reference/insert-or-update.html"},{default:u(()=>[t("参考文档")]),_:1})]),jl,Xl]),l("tr",null,[l("td",null,[t(".NET ORM 批量编辑保存 "),n(d,{to:"/reference/insert-or-update.html"},{default:u(()=>[t("参考文档")]),_:1})]),Yl,Zl]),$l,lt,tt,nt,dt,l("tr",null,[l("td",null,[t(".NET ORM 查询时，动态过滤条件(WhereDynamicFilter) "),n(d,{to:"/reference/select.html"},{default:u(()=>[t("参考文档")]),_:1})]),ut,et]),ot,st,rt,_t,it,ct,ht,l("tr",null,[l("td",null,[t(".NET ORM 查询时，子查询拼接结果(string.Join) "),n(d,{to:"/reference/select-multi-table.html"},{default:u(()=>[t("参考文档")]),_:1})]),at,Et]),Tt,Rt,l("tr",null,[l("td",null,[t(".NET ORM 查询时，针对树形结构表 "),n(d,{to:"/reference/select-as-tree.html"},{default:u(()=>[t("父子关系的实体类")]),_:1})]),Nt,Ot])])])])}const Ct=s(c,[["render",Mt],["__file","vs-entity-framework.html.vue"]]);export{Ct as default};
